# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from io import SEEK_CUR 
from msilib.schema import Directory
from xml.etree.ElementInclude import include
from PyQt5 import QtCore, QtGui, QtWidgets
import math
from PyQt5.QtWidgets import *
from PyQt5 import QtCore, QtGui, QtWidgets
import math
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *
import csv
from tkinter import dialog, filedialog
from nbformat import *
import xlwt
from xlwt import *
from PyQt5.QtCore import *
from PyQt5.QtPrintSupport import *
import pandas as pd
import openpyxl
from openpyxl.styles import *
from openpyxl.styles.borders import *
import os

from io import SEEK_CUR
from msilib.schema import Directory
from xml.etree.ElementInclude import include
from PyQt5 import QtCore, QtGui, QtWidgets
import math
from PyQt5.QtWidgets import *
from PyQt5 import QtCore, QtGui, QtWidgets
import math
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *
import csv
from tkinter import dialog, filedialog
from nbformat import *
import xlwt
from xlwt import *
from PyQt5.QtCore import *
from PyQt5.QtPrintSupport import *
import pandas as pd
import openpyxl
from openpyxl.styles import *
from openpyxl.styles.borders import *
import os
from msilib.schema import Directory
from xml.etree.ElementInclude import include
from PyQt5 import QtCore, QtGui, QtWidgets
import math
from PyQt5.QtWidgets import *
from PyQt5 import QtCore, QtGui, QtWidgets
import math
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *
import csv
from tkinter import dialog, filedialog
from nbformat import *
import xlwt
from xlwt import *
from PyQt5.QtCore import *
from PyQt5.QtPrintSupport import *
import pandas as pd
import openpyxl
import os
from PyQt5 import QtPrintSupport
from PyQt5.QtPrintSupport import QPrinter,QPrintDialog,QPrintPreviewDialog
from PyQt5.QtPrintSupport import *
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import * 
from model import TableModel as Table5Model
from summary import Ui_SUMMARY







class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1641, 863)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("assets\Window_icon.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        spacerItem = QtWidgets.QSpacerItem(20, 793, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem, 0, 2, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem1, 1, 1, 1, 1)
        self.Input_tab = QtWidgets.QTabWidget(self.centralwidget)
        self.Input_tab.setStyleSheet("background-color: rgb(54, 63, 90)")
        self.Input_tab.setMovable(True)
        self.Input_tab.setTabBarAutoHide(False)
        self.Input_tab.setObjectName("Input_tab")
        self.Inputs = QtWidgets.QWidget()
        self.Inputs.setObjectName("Inputs")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.Inputs)
        self.gridLayout_3.setObjectName("gridLayout_3")
        spacerItem2 = QtWidgets.QSpacerItem(20, 720, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_3.addItem(spacerItem2, 0, 3, 1, 1)
        self.tabWidget_2 = QtWidgets.QTabWidget(self.Inputs)
        self.tabWidget_2.setStyleSheet("background-color: rgb(225, 252, 255);")
        self.tabWidget_2.setDocumentMode(False)
        self.tabWidget_2.setTabsClosable(False)
        self.tabWidget_2.setMovable(True)
        self.tabWidget_2.setObjectName("tabWidget_2")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.tab_3)
        self.gridLayout_2.setObjectName("gridLayout_2")
        spacerItem3 = QtWidgets.QSpacerItem(13, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem3, 0, 3, 1, 1)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.operation_temperature_2 = QtWidgets.QLabel(self.tab_3)
        self.operation_temperature_2.setObjectName("operation_temperature_2")
        self.horizontalLayout_13.addWidget(self.operation_temperature_2)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_13.addItem(spacerItem4)
        self.operation_temperature_lineEdit_2 = QtWidgets.QLineEdit(self.tab_3)
        self.operation_temperature_lineEdit_2.setObjectName("operation_temperature_lineEdit_2")
        self.operation_temperature_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_13.addWidget(self.operation_temperature_lineEdit_2)
        self.verticalLayout_2.addLayout(self.horizontalLayout_13)
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.effective_residuel_lay_tension_2 = QtWidgets.QLabel(self.tab_3)
        self.effective_residuel_lay_tension_2.setObjectName("effective_residuel_lay_tension_2")
        self.horizontalLayout_14.addWidget(self.effective_residuel_lay_tension_2)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem5)
        self.effective_residuel_lay_tension_lineEdit_2 = QtWidgets.QLineEdit(self.tab_3)
        self.effective_residuel_lay_tension_lineEdit_2.setObjectName("effective_residuel_lay_tension_lineEdit_2")
        self.effective_residuel_lay_tension_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_14.addWidget(self.effective_residuel_lay_tension_lineEdit_2)
        self.verticalLayout_2.addLayout(self.horizontalLayout_14)
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        self.effective_axial_force_release_2 = QtWidgets.QLabel(self.tab_3)
        self.effective_axial_force_release_2.setObjectName("effective_axial_force_release_2")
        self.horizontalLayout_15.addWidget(self.effective_axial_force_release_2)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_15.addItem(spacerItem6)
        self.effective_axial_force_release_lineEdit_2 = QtWidgets.QLineEdit(self.tab_3)
        self.effective_axial_force_release_lineEdit_2.setObjectName("effective_axial_force_release_lineEdit_2")
        self.effective_axial_force_release_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_15.addWidget(self.effective_axial_force_release_lineEdit_2)
        self.verticalLayout_2.addLayout(self.horizontalLayout_15)
        self.horizontalLayout_16 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_16.setObjectName("horizontalLayout_16")
        self.temperature_expension_coefficient_2 = QtWidgets.QLabel(self.tab_3)
        self.temperature_expension_coefficient_2.setObjectName("temperature_expension_coefficient_2")
        self.horizontalLayout_16.addWidget(self.temperature_expension_coefficient_2)
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_16.addItem(spacerItem7)
        self.temperature_expension_coefficient_lineEdit_2 = QtWidgets.QLineEdit(self.tab_3)
        self.temperature_expension_coefficient_lineEdit_2.setObjectName("temperature_expension_coefficient_lineEdit_2")
        self.temperature_expension_coefficient_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_16.addWidget(self.temperature_expension_coefficient_lineEdit_2)
        self.verticalLayout_2.addLayout(self.horizontalLayout_16)
        self.horizontalLayout_17 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_17.setObjectName("horizontalLayout_17")
        self.poisson_ratio_2 = QtWidgets.QLabel(self.tab_3)
        self.poisson_ratio_2.setObjectName("poisson_ratio_2")
        self.horizontalLayout_17.addWidget(self.poisson_ratio_2)
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_17.addItem(spacerItem8)
        self.poisson_ratio_lineEdit_2 = QtWidgets.QLineEdit(self.tab_3)
        self.poisson_ratio_lineEdit_2.setObjectName("poisson_ratio_lineEdit_2")
        self.poisson_ratio_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_17.addWidget(self.poisson_ratio_lineEdit_2)
        self.verticalLayout_2.addLayout(self.horizontalLayout_17)
        self.horizontalLayout_18 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_18.setObjectName("horizontalLayout_18")
        self.smys_2 = QtWidgets.QLabel(self.tab_3)
        self.smys_2.setObjectName("smys_2")
        self.horizontalLayout_18.addWidget(self.smys_2)
        spacerItem9 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_18.addItem(spacerItem9)
        self.poisson_ratio_lineEdit_3 = QtWidgets.QLineEdit(self.tab_3)
        self.poisson_ratio_lineEdit_3.setObjectName("poisson_ratio_lineEdit_3")
        self.poisson_ratio_lineEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_18.addWidget(self.poisson_ratio_lineEdit_3)
        self.verticalLayout_2.addLayout(self.horizontalLayout_18)
        self.horizontalLayout_19 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_19.setObjectName("horizontalLayout_19")
        self.internal_linear_density_2 = QtWidgets.QLabel(self.tab_3)
        self.internal_linear_density_2.setObjectName("internal_linear_density_2")
        self.horizontalLayout_19.addWidget(self.internal_linear_density_2)
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_19.addItem(spacerItem10)
        self.internal_linear_density_lineEdit_2 = QtWidgets.QLineEdit(self.tab_3)
        self.internal_linear_density_lineEdit_2.setObjectName("internal_linear_density_lineEdit_2")
        self.internal_linear_density_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_19.addWidget(self.internal_linear_density_lineEdit_2)
        self.verticalLayout_2.addLayout(self.horizontalLayout_19)
        self.horizontalLayout_20 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_20.setObjectName("horizontalLayout_20")
        self.corrosion_protection_density_2 = QtWidgets.QLabel(self.tab_3)
        self.corrosion_protection_density_2.setObjectName("corrosion_protection_density_2")
        self.horizontalLayout_20.addWidget(self.corrosion_protection_density_2)
        spacerItem11 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_20.addItem(spacerItem11)
        self.corrosion_protection_density_lineEdit_2 = QtWidgets.QLineEdit(self.tab_3)
        self.corrosion_protection_density_lineEdit_2.setObjectName("corrosion_protection_density_lineEdit_2")
        self.corrosion_protection_density_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_20.addWidget(self.corrosion_protection_density_lineEdit_2)
        self.verticalLayout_2.addLayout(self.horizontalLayout_20)
        self.horizontalLayout_21 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_21.setObjectName("horizontalLayout_21")
        self.content_density_2 = QtWidgets.QLabel(self.tab_3)
        self.content_density_2.setObjectName("content_density_2")
        self.horizontalLayout_21.addWidget(self.content_density_2)
        spacerItem12 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_21.addItem(spacerItem12)
        self.content_density_lineEdit_2 = QtWidgets.QLineEdit(self.tab_3)
        self.content_density_lineEdit_2.setObjectName("content_density_lineEdit_2")
        self.content_density_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_21.addWidget(self.content_density_lineEdit_2)
        self.verticalLayout_2.addLayout(self.horizontalLayout_21)
        self.horizontalLayout_22 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_22.setObjectName("horizontalLayout_22")
        self.concrete_density_2 = QtWidgets.QLabel(self.tab_3)
        self.concrete_density_2.setObjectName("concrete_density_2")
        self.horizontalLayout_22.addWidget(self.concrete_density_2)
        spacerItem13 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_22.addItem(spacerItem13)
        self.concrete_density_lineEdit_2 = QtWidgets.QLineEdit(self.tab_3)
        self.concrete_density_lineEdit_2.setObjectName("concrete_density_lineEdit_2")
        self.concrete_density_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_22.addWidget(self.concrete_density_lineEdit_2)
        self.verticalLayout_2.addLayout(self.horizontalLayout_22)
        self.gridLayout_2.addLayout(self.verticalLayout_2, 0, 2, 1, 1)
        spacerItem14 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem14, 0, 1, 1, 1)
        spacerItem15 = QtWidgets.QSpacerItem(20, 60, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_2.addItem(spacerItem15, 1, 0, 1, 1)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.internal_pressure_2 = QtWidgets.QLabel(self.tab_3)
        self.internal_pressure_2.setStyleSheet("selection-background-color: rgb(32, 47, 255);")
        self.internal_pressure_2.setObjectName("internal_pressure_2")
        self.horizontalLayout.addWidget(self.internal_pressure_2)
        spacerItem16 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem16)
        self.internal_pressure_lineEdit_2 = QtWidgets.QLineEdit(self.tab_3)
        self.internal_pressure_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.internal_pressure_lineEdit_2.setObjectName("internal_pressure_lineEdit_2")
        self.horizontalLayout.addWidget(self.internal_pressure_lineEdit_2)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.pipe_outer_diameter_2 = QtWidgets.QLabel(self.tab_3)
        self.pipe_outer_diameter_2.setObjectName("pipe_outer_diameter_2")
        self.horizontalLayout_2.addWidget(self.pipe_outer_diameter_2)
        spacerItem17 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem17)
        self.pipe_outer_diameter_lineEdit_2 = QtWidgets.QLineEdit(self.tab_3)
        self.pipe_outer_diameter_lineEdit_2.setObjectName("pipe_outer_diameter_lineEdit_2")
        self.pipe_outer_diameter_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_2.addWidget(self.pipe_outer_diameter_lineEdit_2)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.pipe_wall_thickness_2 = QtWidgets.QLabel(self.tab_3)
        self.pipe_wall_thickness_2.setObjectName("pipe_wall_thickness_2")
        self.horizontalLayout_3.addWidget(self.pipe_wall_thickness_2)
        spacerItem18 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem18)
        self.pipe_wall_thickness_lineEdit_2 = QtWidgets.QLineEdit(self.tab_3)
        self.pipe_wall_thickness_lineEdit_2.setObjectName("pipe_wall_thickness_lineEdit_2")
        self.pipe_wall_thickness_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_3.addWidget(self.pipe_wall_thickness_lineEdit_2)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.pipe_density_2 = QtWidgets.QLabel(self.tab_3)
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        self.pipe_density_2.setFont(font)
        self.pipe_density_2.setObjectName("pipe_density_2")
        self.horizontalLayout_4.addWidget(self.pipe_density_2)
        spacerItem19 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem19)
        self.pipe_density_lineEdit_2 = QtWidgets.QLineEdit(self.tab_3)
        self.pipe_density_lineEdit_2.setObjectName("pipe_density_lineEdit_2")
        self.pipe_density_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_4.addWidget(self.pipe_density_lineEdit_2)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.pipe_young_modulus_2 = QtWidgets.QLabel(self.tab_3)
        self.pipe_young_modulus_2.setObjectName("pipe_young_modulus_2")
        self.horizontalLayout_5.addWidget(self.pipe_young_modulus_2)
        spacerItem20 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem20)
        self.pipe_young_modulus_lineEdit_2 = QtWidgets.QLineEdit(self.tab_3)
        self.pipe_young_modulus_lineEdit_2.setObjectName("pipe_young_modulus_lineEdit_2")
        self.pipe_young_modulus_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_5.addWidget(self.pipe_young_modulus_lineEdit_2)
        self.verticalLayout.addLayout(self.horizontalLayout_5)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.internal_linear_thickness_2 = QtWidgets.QLabel(self.tab_3)
        self.internal_linear_thickness_2.setObjectName("internal_linear_thickness_2")
        self.horizontalLayout_6.addWidget(self.internal_linear_thickness_2)
        spacerItem21 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem21)
        self.internal_linear_thickness_lineEdit_2 = QtWidgets.QLineEdit(self.tab_3)
        self.internal_linear_thickness_lineEdit_2.setObjectName("internal_linear_thickness_lineEdit_2")
        self.internal_linear_thickness_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_6.addWidget(self.internal_linear_thickness_lineEdit_2)
        self.verticalLayout.addLayout(self.horizontalLayout_6)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.corrosion_thickness_2 = QtWidgets.QLabel(self.tab_3)
        self.corrosion_thickness_2.setObjectName("corrosion_thickness_2")
        self.horizontalLayout_7.addWidget(self.corrosion_thickness_2)
        spacerItem22 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem22)
        self.corrosion_thickness_lineEdit_2 = QtWidgets.QLineEdit(self.tab_3)
        self.corrosion_thickness_lineEdit_2.setObjectName("corrosion_thickness_lineEdit_2")
        self.corrosion_thickness_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_7.addWidget(self.corrosion_thickness_lineEdit_2)
        self.verticalLayout.addLayout(self.horizontalLayout_7)
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.concrete_thickness_2 = QtWidgets.QLabel(self.tab_3)
        self.concrete_thickness_2.setObjectName("concrete_thickness_2")
        self.horizontalLayout_8.addWidget(self.concrete_thickness_2)
        spacerItem23 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_8.addItem(spacerItem23)
        self.concrete_thickness_lineEdit_2 = QtWidgets.QLineEdit(self.tab_3)
        self.concrete_thickness_lineEdit_2.setObjectName("concrete_thickness_lineEdit_2")
        self.concrete_thickness_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_8.addWidget(self.concrete_thickness_lineEdit_2)
        self.verticalLayout.addLayout(self.horizontalLayout_8)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.marine_growth_thickness_2 = QtWidgets.QLabel(self.tab_3)
        self.marine_growth_thickness_2.setObjectName("marine_growth_thickness_2")
        self.horizontalLayout_9.addWidget(self.marine_growth_thickness_2)
        spacerItem24 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem24)
        self.marine_growth_thickness_lineEdit_2 = QtWidgets.QLineEdit(self.tab_3)
        self.marine_growth_thickness_lineEdit_2.setObjectName("marine_growth_thickness_lineEdit_2")
        self.marine_growth_thickness_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_9.addWidget(self.marine_growth_thickness_lineEdit_2)
        self.verticalLayout.addLayout(self.horizontalLayout_9)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.water_density_2 = QtWidgets.QLabel(self.tab_3)
        self.water_density_2.setObjectName("water_density_2")
        self.horizontalLayout_10.addWidget(self.water_density_2)
        spacerItem25 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_10.addItem(spacerItem25)
        self.water_density_lineEdit_2 = QtWidgets.QLineEdit(self.tab_3)
        self.water_density_lineEdit_2.setObjectName("water_density_lineEdit_2")
        self.water_density_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_10.addWidget(self.water_density_lineEdit_2)
        self.verticalLayout.addLayout(self.horizontalLayout_10)
        self.horizontalLayout_25 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_25.setObjectName("horizontalLayout_25")
        self.marine_growth_density_2 = QtWidgets.QLabel(self.tab_3)
        self.marine_growth_density_2.setObjectName("marine_growth_density_2")
        self.horizontalLayout_25.addWidget(self.marine_growth_density_2)
        spacerItem26 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_25.addItem(spacerItem26)
        self.marine_growth_density_lineEdit_2 = QtWidgets.QLineEdit(self.tab_3)
        self.marine_growth_density_lineEdit_2.setObjectName("marine_growth_density_lineEdit_2")
        self.marine_growth_density_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_25.addWidget(self.marine_growth_density_lineEdit_2)
        self.verticalLayout.addLayout(self.horizontalLayout_25)
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.gap_under_pipeline_2 = QtWidgets.QLabel(self.tab_3)
        self.gap_under_pipeline_2.setObjectName("gap_under_pipeline_2")
        self.horizontalLayout_11.addWidget(self.gap_under_pipeline_2)
        spacerItem27 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_11.addItem(spacerItem27)
        self.gap_under_pipeline_lineEdit_2 = QtWidgets.QLineEdit(self.tab_3)
        self.gap_under_pipeline_lineEdit_2.setObjectName("gap_under_pipeline_lineEdit_2")
        self.gap_under_pipeline_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_11.addWidget(self.gap_under_pipeline_lineEdit_2)
        self.verticalLayout.addLayout(self.horizontalLayout_11)
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.ambient_temperature_2 = QtWidgets.QLabel(self.tab_3)
        self.ambient_temperature_2.setObjectName("ambient_temperature_2")
        self.horizontalLayout_12.addWidget(self.ambient_temperature_2)
        spacerItem28 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_12.addItem(spacerItem28)
        self.ambient_temperature_lineEdit_2 = QtWidgets.QLineEdit(self.tab_3)
        self.ambient_temperature_lineEdit_2.setObjectName("ambient_temperature_lineEdit_2")
        self.ambient_temperature_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_12.addWidget(self.ambient_temperature_lineEdit_2)
        self.verticalLayout.addLayout(self.horizontalLayout_12)
        self.gridLayout_2.addLayout(self.verticalLayout, 0, 0, 1, 1)
        self.tabWidget_2.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.tab_4)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.horizontalLayout_62 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_62.setObjectName("horizontalLayout_62")
        self.horizontalLayout_26 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_26.setObjectName("horizontalLayout_26")
        self.freespanlength = QtWidgets.QLabel(self.tab_4)
        self.freespanlength.setObjectName("freespanlength")
        self.horizontalLayout_26.addWidget(self.freespanlength)
        spacerItem29 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_26.addItem(spacerItem29)
        self.free_span_length_lineEdit = QtWidgets.QLineEdit(self.tab_4)
        self.free_span_length_lineEdit.setObjectName("free_span_length_lineEdit")
        self.free_span_length_lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_26.addWidget(self.free_span_length_lineEdit)
        self.horizontalLayout_62.addLayout(self.horizontalLayout_26)
        self.horizontalLayout_27 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_27.setObjectName("horizontalLayout_27")
        spacerItem30 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_27.addItem(spacerItem30)
        self.wave_depth = QtWidgets.QLabel(self.tab_4)
        self.wave_depth.setObjectName("wave_depth")
        self.horizontalLayout_27.addWidget(self.wave_depth)
        spacerItem31 = QtWidgets.QSpacerItem(13, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_27.addItem(spacerItem31)
        self.water_depth_lineEdit = QtWidgets.QLineEdit(self.tab_4)
        self.water_depth_lineEdit.setObjectName("water_depth_lineEdit")
        self.water_depth_lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_27.addWidget(self.water_depth_lineEdit)
        self.horizontalLayout_62.addLayout(self.horizontalLayout_27)
        self.horizontalLayout_28 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_28.setObjectName("horizontalLayout_28")
        spacerItem32 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_28.addItem(spacerItem32)
        self.trench_depth = QtWidgets.QLabel(self.tab_4)
        self.trench_depth.setObjectName("trench_depth")
        self.horizontalLayout_28.addWidget(self.trench_depth)
        spacerItem33 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_28.addItem(spacerItem33)
        self.trench_depth_lineEdit = QtWidgets.QLineEdit(self.tab_4)
        self.trench_depth_lineEdit.setObjectName("trench_depth_lineEdit")
        self.trench_depth_lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_28.addWidget(self.trench_depth_lineEdit)
        self.horizontalLayout_62.addLayout(self.horizontalLayout_28)
        self.gridLayout_5.addLayout(self.horizontalLayout_62, 0, 0, 1, 2)
        self.label = QtWidgets.QLabel(self.tab_4)
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.gridLayout_5.addWidget(self.label, 1, 0, 1, 1)
        spacerItem34 = QtWidgets.QSpacerItem(300, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_5.addItem(spacerItem34, 1, 1, 1, 1)
        self.horizontalLayout_39 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_39.setObjectName("horizontalLayout_39")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.horizontalLayout_30 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_30.setObjectName("horizontalLayout_30")
        self.significant_Wave_height = QtWidgets.QLabel(self.tab_4)
        self.significant_Wave_height.setObjectName("significant_Wave_height")
        self.horizontalLayout_30.addWidget(self.significant_Wave_height)
        spacerItem35 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_30.addItem(spacerItem35)
        self.significant_wave_height_lineEdit_100 = QtWidgets.QLineEdit(self.tab_4)
        self.significant_wave_height_lineEdit_100.setObjectName("significant_wave_height_lineEdit_100")
        self.significant_wave_height_lineEdit_100.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_30.addWidget(self.significant_wave_height_lineEdit_100)
        self.verticalLayout_4.addLayout(self.horizontalLayout_30)
        self.horizontalLayout_31 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_31.setObjectName("horizontalLayout_31")
        self.wave_period = QtWidgets.QLabel(self.tab_4)
        self.wave_period.setObjectName("wave_period")
        self.horizontalLayout_31.addWidget(self.wave_period)
        spacerItem36 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_31.addItem(spacerItem36)
        self.wave_period_lineEdit_100 = QtWidgets.QLineEdit(self.tab_4)
        self.wave_period_lineEdit_100.setObjectName("wave_period_lineEdit_100")
        self.wave_period_lineEdit_100.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_31.addWidget(self.wave_period_lineEdit_100)
        self.verticalLayout_4.addLayout(self.horizontalLayout_31)
        self.horizontalLayout_32 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_32.setObjectName("horizontalLayout_32")
        self.peak_period = QtWidgets.QLabel(self.tab_4)
        self.peak_period.setObjectName("peak_period")
        self.horizontalLayout_32.addWidget(self.peak_period)
        spacerItem37 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_32.addItem(spacerItem37)
        self.peak_period_lineEdit_100 = QtWidgets.QLineEdit(self.tab_4)
        self.peak_period_lineEdit_100.setObjectName("peak_period_lineEdit_100")
        self.peak_period_lineEdit_100.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_32.addWidget(self.peak_period_lineEdit_100)
        self.verticalLayout_4.addLayout(self.horizontalLayout_32)
        self.horizontalLayout_23 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_23.setObjectName("horizontalLayout_23")
        self.Tn_Tp = QtWidgets.QLabel(self.tab_4)
        self.Tn_Tp.setObjectName("Tn_Tp")
        self.horizontalLayout_23.addWidget(self.Tn_Tp)
        spacerItem38 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_23.addItem(spacerItem38)
        self.lineEdit_Tn_by_Tp_100 = QtWidgets.QLineEdit(self.tab_4)
        self.lineEdit_Tn_by_Tp_100.setObjectName("lineEdit_Tn_by_Tp_100")
        self.lineEdit_Tn_by_Tp_100.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_23.addWidget(self.lineEdit_Tn_by_Tp_100)
        self.verticalLayout_4.addLayout(self.horizontalLayout_23)
        self.horizontalLayout_39.addLayout(self.verticalLayout_4)
        spacerItem39 = QtWidgets.QSpacerItem(13, 77, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_39.addItem(spacerItem39)
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.horizontalLayout_33 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_33.setObjectName("horizontalLayout_33")
        self.wave_direction = QtWidgets.QLabel(self.tab_4)
        self.wave_direction.setObjectName("wave_direction")
        self.horizontalLayout_33.addWidget(self.wave_direction)
        spacerItem40 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_33.addItem(spacerItem40)
        self.wave_direction_lineEdit_100 = QtWidgets.QLineEdit(self.tab_4)
        self.wave_direction_lineEdit_100.setObjectName("wave_direction_lineEdit_100")
        self.wave_direction_lineEdit_100.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_33.addWidget(self.wave_direction_lineEdit_100)
        self.verticalLayout_5.addLayout(self.horizontalLayout_33)
        self.horizontalLayout_34 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_34.setObjectName("horizontalLayout_34")
        self.current_velocity = QtWidgets.QLabel(self.tab_4)
        self.current_velocity.setObjectName("current_velocity")
        self.horizontalLayout_34.addWidget(self.current_velocity)
        spacerItem41 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_34.addItem(spacerItem41)
        self.current_velocity_lineEdit_100 = QtWidgets.QLineEdit(self.tab_4)
        self.current_velocity_lineEdit_100.setObjectName("current_velocity_lineEdit_100")
        self.current_velocity_lineEdit_100.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_34.addWidget(self.current_velocity_lineEdit_100)
        self.verticalLayout_5.addLayout(self.horizontalLayout_34)
        self.horizontalLayout_35 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_35.setObjectName("horizontalLayout_35")
        self.current_direction = QtWidgets.QLabel(self.tab_4)
        self.current_direction.setObjectName("current_direction")
        self.horizontalLayout_35.addWidget(self.current_direction)
        spacerItem42 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_35.addItem(spacerItem42)
        self.current_direction_lineEdit_100 = QtWidgets.QLineEdit(self.tab_4)
        self.current_direction_lineEdit_100.setObjectName("current_direction_lineEdit_100")
        self.current_direction_lineEdit_100.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_35.addWidget(self.current_direction_lineEdit_100)
        self.verticalLayout_5.addLayout(self.horizontalLayout_35)
        self.horizontalLayout_37 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_37.setObjectName("horizontalLayout_37")
        self.label_4 = QtWidgets.QLabel(self.tab_4)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_37.addWidget(self.label_4)
        spacerItem43 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_37.addItem(spacerItem43)


        #combo Box for UsTn_by_Hs_100.................................................................


        self.comboBox_UsTn_by_Hs_100 = QtWidgets.QComboBox(self.tab_4)
        self.comboBox_UsTn_by_Hs_100.setStyleSheet("background-color: rgb(205, 229, 247);")
        self.comboBox_UsTn_by_Hs_100.setObjectName("comboBox_UsTn_by_Hs_100")
        self.comboBox_UsTn_by_Hs_100.addItem("0.00", '0.5')
        self.comboBox_UsTn_by_Hs_100.addItem("0.00 To 0.01", '0.4951')
        self.comboBox_UsTn_by_Hs_100.addItem("0.01 To 0.02", '0.491')
        self.comboBox_UsTn_by_Hs_100.addItem("0.02 To 0.03", '0.4852')
        self.comboBox_UsTn_by_Hs_100.addItem("0.03 To 0.04", '0.4769')
        self.comboBox_UsTn_by_Hs_100.addItem("0.04 To 0.05", '0.4662')
        self.comboBox_UsTn_by_Hs_100.addItem("0.05 To 0.06", '0.4536')
        self.comboBox_UsTn_by_Hs_100.addItem("0.06 To 0.07", '0.4393')
        self.comboBox_UsTn_by_Hs_100.addItem("0.07 To 0.08", '0.4247')
        self.comboBox_UsTn_by_Hs_100.addItem("0.08 To 0.09", '0.4067')
        self.comboBox_UsTn_by_Hs_100.addItem("0.09 To 0.10", '0.3878')
        self.comboBox_UsTn_by_Hs_100.addItem("0.10 To 0.11", '0.3694')
        self.comboBox_UsTn_by_Hs_100.addItem("0.11 To 0.12", '0.3497')
        self.comboBox_UsTn_by_Hs_100.addItem("0.12 To 0.13", '0.3293')
        self.comboBox_UsTn_by_Hs_100.addItem("0.13 To 0.14", '0.3082')
        self.comboBox_UsTn_by_Hs_100.addItem("0.14 To 0.15", '0.2873')
        self.comboBox_UsTn_by_Hs_100.addItem("0.15 To 0.16", '0.2675')
        self.comboBox_UsTn_by_Hs_100.addItem("0.16 To 0.17", '0.2490')
        self.comboBox_UsTn_by_Hs_100.addItem("0.17 To 0.18", '0.2300')
        self.comboBox_UsTn_by_Hs_100.addItem("0.18 To 0.19", '0.2111')
        self.comboBox_UsTn_by_Hs_100.addItem("0.19 To 0.20", '0.1907')
        self.comboBox_UsTn_by_Hs_100.addItem("0.20 To 0.21", '0.1755')
        self.comboBox_UsTn_by_Hs_100.addItem("0.21 To 0.22", '0.1596')
        self.comboBox_UsTn_by_Hs_100.addItem("0.22 To 0.23", '0.1437')
        self.comboBox_UsTn_by_Hs_100.addItem("0.23 To 0.24", '0.1283')
        self.comboBox_UsTn_by_Hs_100.addItem("0.24 To 0.25", '0.1149')
        self.comboBox_UsTn_by_Hs_100.addItem("0.25 To 0.26", '0.1033')
        self.comboBox_UsTn_by_Hs_100.addItem("0.26 To 0.27", '0.0924')
        self.comboBox_UsTn_by_Hs_100.addItem("0.27 To 0.28", '0.0812')
        self.comboBox_UsTn_by_Hs_100.addItem("0.28 To 0.29", '0.0705')
        self.comboBox_UsTn_by_Hs_100.addItem("0.29 To 0.30", '0.0611')
        self.comboBox_UsTn_by_Hs_100.addItem("0.30 To 0.31", '0.0534')
        self.comboBox_UsTn_by_Hs_100.addItem("0.31 To 0.32", '0.0469')
        self.comboBox_UsTn_by_Hs_100.addItem("0.32 To 0.33", '0.0413')
        self.comboBox_UsTn_by_Hs_100.addItem("0.33 To 0.34", '0.0366')
        self.comboBox_UsTn_by_Hs_100.addItem("0.34 To 0.35", '0.0327')
        self.comboBox_UsTn_by_Hs_100.addItem("0.35 To 0.36", '0.0294')
        self.comboBox_UsTn_by_Hs_100.addItem("0.36 To 0.37", '0.0267')
        self.comboBox_UsTn_by_Hs_100.addItem("0.37 To 0.38", '0.0243')
        self.comboBox_UsTn_by_Hs_100.addItem("0.38 To 0.39", '0.0223')
        self.comboBox_UsTn_by_Hs_100.addItem("0.39 To 0.40", '0.0204')
        self.comboBox_UsTn_by_Hs_100.addItem("0.40 To 0.41", '0.0187')
        self.comboBox_UsTn_by_Hs_100.addItem("0.41 To 0.42", '0.0170')
        self.comboBox_UsTn_by_Hs_100.addItem("0.42 To 0.43", '0.0154')
        self.comboBox_UsTn_by_Hs_100.addItem("0.43 To 0.44", '0.0138')
        self.comboBox_UsTn_by_Hs_100.addItem("0.44 To 0.45", '0.0121')
        self.comboBox_UsTn_by_Hs_100.addItem("0.45 To 0.46", '0.0105')
        self.comboBox_UsTn_by_Hs_100.addItem("0.46 To 0.47", '0.0089')
        self.comboBox_UsTn_by_Hs_100.addItem("0.47 To 0.48", '0.0074')
        self.comboBox_UsTn_by_Hs_100.addItem("0.48 To 0.49", '0.0059')
        self.comboBox_UsTn_by_Hs_100.addItem("0.49 To 0.50", '0.0045')
        self.horizontalLayout_37.addWidget(self.comboBox_UsTn_by_Hs_100)
        spacerItem44 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_37.addItem(spacerItem44)
        self.lineEdit_UsTn_by_Hs_100 = QtWidgets.QLineEdit(self.tab_4)
        self.lineEdit_UsTn_by_Hs_100.setObjectName("lineEdit_UsTn_by_Hs_100")
        self.lineEdit_UsTn_by_Hs_100.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_37.addWidget(self.lineEdit_UsTn_by_Hs_100)
        self.verticalLayout_5.addLayout(self.horizontalLayout_37)
        self.horizontalLayout_38 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_38.setObjectName("horizontalLayout_38")
        self.label_5 = QtWidgets.QLabel(self.tab_4)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_38.addWidget(self.label_5)
        spacerItem45 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_38.addItem(spacerItem45)


        #combo Box for Tu_by_Tp_100.................................................................


        self.comboBox_Tu_by_Tp_100 = QtWidgets.QComboBox(self.tab_4)
        self.comboBox_Tu_by_Tp_100.setStyleSheet("background-color: rgb(205, 229, 247);")
        self.comboBox_Tu_by_Tp_100.setObjectName("comboBox_Tu_by_Tp_100")
        self.comboBox_Tu_by_Tp_100.addItem("0.00", '0.00')
        self.comboBox_Tu_by_Tp_100.addItem("0.00 To 0.01", '0.00')
        self.comboBox_Tu_by_Tp_100.addItem("0.01 To 0.02", '0.00')
        self.comboBox_Tu_by_Tp_100.addItem("0.02 To 0.03", '0.00')
        self.comboBox_Tu_by_Tp_100.addItem("0.03 To 0.04", '0.7555')
        self.comboBox_Tu_by_Tp_100.addItem("0.04 To 0.05", '0.7729')
        self.comboBox_Tu_by_Tp_100.addItem("0.05 To 0.06", '0.7880')
        self.comboBox_Tu_by_Tp_100.addItem("0.06 To 0.07", '0.8078')
        self.comboBox_Tu_by_Tp_100.addItem("0.07 To 0.08", '0.8237')
        self.comboBox_Tu_by_Tp_100.addItem("0.08 To 0.09", '0.8415')
        self.comboBox_Tu_by_Tp_100.addItem("0.09 To 0.10", '0.8584')
        self.comboBox_Tu_by_Tp_100.addItem("0.10 To 0.11", '0.8779')
        self.comboBox_Tu_by_Tp_100.addItem("0.11 To 0.12", '0.8949')
        self.comboBox_Tu_by_Tp_100.addItem("0.12 To 0.13", '0.9122')
        self.comboBox_Tu_by_Tp_100.addItem("0.13 To 0.14", '0.9315')
        self.comboBox_Tu_by_Tp_100.addItem("0.14 To 0.15", '0.9480')
        self.comboBox_Tu_by_Tp_100.addItem("0.15 To 0.16", '0.9657')
        self.comboBox_Tu_by_Tp_100.addItem("0.16 To 0.17", '0.9855')
        self.comboBox_Tu_by_Tp_100.addItem("0.17 To 0.18", '1.0009')
        self.comboBox_Tu_by_Tp_100.addItem("0.18 To 0.19", '1.0179')
        self.comboBox_Tu_by_Tp_100.addItem("0.19 To 0.20", '1.0345')
        self.comboBox_Tu_by_Tp_100.addItem("0.20 To 0.21", '1.0510')
        self.comboBox_Tu_by_Tp_100.addItem("0.21 To 0.22", '1.0674')
        self.comboBox_Tu_by_Tp_100.addItem("0.22 To 0.23", '1.0839')
        self.comboBox_Tu_by_Tp_100.addItem("0.23 To 0.24", '1.1002')
        self.comboBox_Tu_by_Tp_100.addItem("0.24 To 0.25", '1.1154')
        self.comboBox_Tu_by_Tp_100.addItem("0.25 To 0.26", '1.1292')
        self.comboBox_Tu_by_Tp_100.addItem("0.26 To 0.27", '1.1427')
        self.comboBox_Tu_by_Tp_100.addItem("0.27 To 0.28", '1.1570')
        self.comboBox_Tu_by_Tp_100.addItem("0.28 To 0.29", '1.1723')
        self.comboBox_Tu_by_Tp_100.addItem("0.29 To 0.30", '1.1878')
        self.comboBox_Tu_by_Tp_100.addItem("0.30 To 0.31", '1.2025')
        self.comboBox_Tu_by_Tp_100.addItem("0.31 To 0.32", '1.2154')
        self.comboBox_Tu_by_Tp_100.addItem("0.32 To 0.33", '1.2270')
        self.comboBox_Tu_by_Tp_100.addItem("0.33 To 0.34", '1.2380')
        self.comboBox_Tu_by_Tp_100.addItem("0.34 To 0.35", '1.2486')
        self.comboBox_Tu_by_Tp_100.addItem("0.35 To 0.36", '1.2595')
        self.comboBox_Tu_by_Tp_100.addItem("0.36 To 0.37", '1.2720')
        self.comboBox_Tu_by_Tp_100.addItem("0.37 To 0.38", '1.2840')
        self.comboBox_Tu_by_Tp_100.addItem("0.38 To 0.39", '1.2939')
        self.comboBox_Tu_by_Tp_100.addItem("0.39 To 0.40", '1.3045')
        self.comboBox_Tu_by_Tp_100.addItem("0.40 To 0.41", '1.3163')
        self.comboBox_Tu_by_Tp_100.addItem("0.41 To 0.42", '1.3266')
        self.comboBox_Tu_by_Tp_100.addItem("0.42 To 0.43", '1.3373')
        self.comboBox_Tu_by_Tp_100.addItem("0.43 To 0.44", '1.3487')
        self.comboBox_Tu_by_Tp_100.addItem("0.44 To 0.45", '1.3581')
        self.comboBox_Tu_by_Tp_100.addItem("0.45 To 0.46", '1.3687')
        self.comboBox_Tu_by_Tp_100.addItem("0.46 To 0.47", '1.3794')
        self.comboBox_Tu_by_Tp_100.addItem("0.47 To 0.48", '1.3899')
        self.comboBox_Tu_by_Tp_100.addItem("0.48 To 0.49", '1.4005')
        self.comboBox_Tu_by_Tp_100.addItem("0.49 To 0.50", '0.00')
        self.horizontalLayout_38.addWidget(self.comboBox_Tu_by_Tp_100)
        spacerItem46 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_38.addItem(spacerItem46)
        self.lineEdit_Tu_by_Tp_100 = QtWidgets.QLineEdit(self.tab_4)
        self.lineEdit_Tu_by_Tp_100.setObjectName("lineEdit_Tu_by_Tp_100")
        self.lineEdit_Tu_by_Tp_100.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_38.addWidget(self.lineEdit_Tu_by_Tp_100)
        self.verticalLayout_5.addLayout(self.horizontalLayout_38)
        self.horizontalLayout_39.addLayout(self.verticalLayout_5)
        self.gridLayout_5.addLayout(self.horizontalLayout_39, 2, 0, 1, 2)
        self.label_2 = QtWidgets.QLabel(self.tab_4)
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.gridLayout_5.addWidget(self.label_2, 4, 0, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.tab_4)
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.gridLayout_5.addWidget(self.label_3, 7, 0, 1, 1)
        self.horizontalLayout_42 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_42.setObjectName("horizontalLayout_42")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout()
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.horizontalLayout_43 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_43.setObjectName("horizontalLayout_43")
        self.significant_Wave_height_2 = QtWidgets.QLabel(self.tab_4)
        self.significant_Wave_height_2.setObjectName("significant_Wave_height_2")
        self.horizontalLayout_43.addWidget(self.significant_Wave_height_2)
        spacerItem47 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_43.addItem(spacerItem47)
        self.significant_wave_height_lineEdit_10 = QtWidgets.QLineEdit(self.tab_4)
        self.significant_wave_height_lineEdit_10.setObjectName("significant_wave_height_lineEdit_10")
        self.significant_wave_height_lineEdit_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_43.addWidget(self.significant_wave_height_lineEdit_10)
        self.verticalLayout_7.addLayout(self.horizontalLayout_43)
        self.horizontalLayout_51 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_51.setObjectName("horizontalLayout_51")
        self.wave_period_2 = QtWidgets.QLabel(self.tab_4)
        self.wave_period_2.setObjectName("wave_period_2")
        self.horizontalLayout_51.addWidget(self.wave_period_2)
        spacerItem48 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_51.addItem(spacerItem48)
        self.wave_period_lineEdit_10 = QtWidgets.QLineEdit(self.tab_4)
        self.wave_period_lineEdit_10.setObjectName("wave_period_lineEdit_10")
        self.wave_period_lineEdit_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_51.addWidget(self.wave_period_lineEdit_10)
        self.verticalLayout_7.addLayout(self.horizontalLayout_51)
        self.horizontalLayout_52 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_52.setObjectName("horizontalLayout_52")
        self.peak_period_2 = QtWidgets.QLabel(self.tab_4)
        self.peak_period_2.setObjectName("peak_period_2")
        self.horizontalLayout_52.addWidget(self.peak_period_2)
        spacerItem49 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_52.addItem(spacerItem49)
        self.peak_period_lineEdit_10 = QtWidgets.QLineEdit(self.tab_4)
        self.peak_period_lineEdit_10.setObjectName("peak_period_lineEdit_10")
        self.peak_period_lineEdit_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_52.addWidget(self.peak_period_lineEdit_10)
        self.verticalLayout_7.addLayout(self.horizontalLayout_52)
        self.horizontalLayout_24 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_24.setObjectName("horizontalLayout_24")
        self.Tn_Tp_2 = QtWidgets.QLabel(self.tab_4)
        self.Tn_Tp_2.setObjectName("Tn_Tp_2")
        self.horizontalLayout_24.addWidget(self.Tn_Tp_2)
        spacerItem50 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_24.addItem(spacerItem50)
        self.lineEdit_Tn_by_Tp_10 = QtWidgets.QLineEdit(self.tab_4)
        self.lineEdit_Tn_by_Tp_10.setObjectName("lineEdit_Tn_by_Tp_10")
        self.lineEdit_Tn_by_Tp_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_24.addWidget(self.lineEdit_Tn_by_Tp_10)
        self.verticalLayout_7.addLayout(self.horizontalLayout_24)
        self.horizontalLayout_42.addLayout(self.verticalLayout_7)
        spacerItem51 = QtWidgets.QSpacerItem(13, 77, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_42.addItem(spacerItem51)
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.horizontalLayout_53 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_53.setObjectName("horizontalLayout_53")
        self.wave_direction_2 = QtWidgets.QLabel(self.tab_4)
        self.wave_direction_2.setObjectName("wave_direction_2")
        self.horizontalLayout_53.addWidget(self.wave_direction_2)
        spacerItem52 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_53.addItem(spacerItem52)
        self.wave_direction_lineEdit_10 = QtWidgets.QLineEdit(self.tab_4)
        self.wave_direction_lineEdit_10.setObjectName("wave_direction_lineEdit_10")
        self.wave_direction_lineEdit_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_53.addWidget(self.wave_direction_lineEdit_10)
        self.verticalLayout_8.addLayout(self.horizontalLayout_53)
        self.horizontalLayout_54 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_54.setObjectName("horizontalLayout_54")
        self.current_velocity_2 = QtWidgets.QLabel(self.tab_4)
        self.current_velocity_2.setObjectName("current_velocity_2")
        self.horizontalLayout_54.addWidget(self.current_velocity_2)
        spacerItem53 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_54.addItem(spacerItem53)
        self.current_velocity_lineEdit_10 = QtWidgets.QLineEdit(self.tab_4)
        self.current_velocity_lineEdit_10.setObjectName("current_velocity_lineEdit_10")
        self.current_velocity_lineEdit_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_54.addWidget(self.current_velocity_lineEdit_10)
        self.verticalLayout_8.addLayout(self.horizontalLayout_54)
        self.horizontalLayout_55 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_55.setObjectName("horizontalLayout_55")
        self.current_direction_2 = QtWidgets.QLabel(self.tab_4)
        self.current_direction_2.setObjectName("current_direction_2")
        self.horizontalLayout_55.addWidget(self.current_direction_2)
        spacerItem54 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_55.addItem(spacerItem54)
        self.current_direction_lineEdit_10 = QtWidgets.QLineEdit(self.tab_4)
        self.current_direction_lineEdit_10.setObjectName("current_direction_lineEdit_10")
        self.current_direction_lineEdit_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_55.addWidget(self.current_direction_lineEdit_10)
        self.verticalLayout_8.addLayout(self.horizontalLayout_55)
        self.horizontalLayout_40 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_40.setObjectName("horizontalLayout_40")
        self.label_6 = QtWidgets.QLabel(self.tab_4)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.horizontalLayout_40.addWidget(self.label_6)
        spacerItem55 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_40.addItem(spacerItem55)


        #combo Box for UsTn_by_Hs_10.................................................................


        self.comboBox_UsTn_by_Hs_10 = QtWidgets.QComboBox(self.tab_4)
        self.comboBox_UsTn_by_Hs_10.setStyleSheet("background-color: rgb(205, 229, 247);")
        self.comboBox_UsTn_by_Hs_10.setObjectName("comboBox_UsTn_by_Hs_10")
        self.comboBox_UsTn_by_Hs_10.addItem("0.00", '0.5')
        self.comboBox_UsTn_by_Hs_10.addItem("0.00 To 0.01", '0.4951')
        self.comboBox_UsTn_by_Hs_10.addItem("0.01 To 0.02", '0.491')
        self.comboBox_UsTn_by_Hs_10.addItem("0.02 To 0.03", '0.4852')
        self.comboBox_UsTn_by_Hs_10.addItem("0.03 To 0.04", '0.4769')
        self.comboBox_UsTn_by_Hs_10.addItem("0.04 To 0.05", '0.4662')
        self.comboBox_UsTn_by_Hs_10.addItem("0.05 To 0.06", '0.4536')
        self.comboBox_UsTn_by_Hs_10.addItem("0.06 To 0.07", '0.4393')
        self.comboBox_UsTn_by_Hs_10.addItem("0.07 To 0.08", '0.4247')
        self.comboBox_UsTn_by_Hs_10.addItem("0.08 To 0.09", '0.4067')
        self.comboBox_UsTn_by_Hs_10.addItem("0.09 To 0.10", '0.3878')
        self.comboBox_UsTn_by_Hs_10.addItem("0.10 To 0.11", '0.3694')
        self.comboBox_UsTn_by_Hs_10.addItem("0.11 To 0.12", '0.3497')
        self.comboBox_UsTn_by_Hs_10.addItem("0.12 To 0.13", '0.3293')
        self.comboBox_UsTn_by_Hs_10.addItem("0.13 To 0.14", '0.3082')
        self.comboBox_UsTn_by_Hs_10.addItem("0.14 To 0.15", '0.2873')
        self.comboBox_UsTn_by_Hs_10.addItem("0.15 To 0.16", '0.2675')
        self.comboBox_UsTn_by_Hs_10.addItem("0.16 To 0.17", '0.2490')
        self.comboBox_UsTn_by_Hs_10.addItem("0.17 To 0.18", '0.2300')
        self.comboBox_UsTn_by_Hs_10.addItem("0.18 To 0.19", '0.2111')
        self.comboBox_UsTn_by_Hs_10.addItem("0.19 To 0.20", '0.1907')
        self.comboBox_UsTn_by_Hs_10.addItem("0.20 To 0.21", '0.1755')
        self.comboBox_UsTn_by_Hs_10.addItem("0.21 To 0.22", '0.1596')
        self.comboBox_UsTn_by_Hs_10.addItem("0.22 To 0.23", '0.1437')
        self.comboBox_UsTn_by_Hs_10.addItem("0.23 To 0.24", '0.1283')
        self.comboBox_UsTn_by_Hs_10.addItem("0.24 To 0.25", '0.1149')
        self.comboBox_UsTn_by_Hs_10.addItem("0.25 To 0.26", '0.1033')
        self.comboBox_UsTn_by_Hs_10.addItem("0.26 To 0.27", '0.0924')
        self.comboBox_UsTn_by_Hs_10.addItem("0.27 To 0.28", '0.0812')
        self.comboBox_UsTn_by_Hs_10.addItem("0.28 To 0.29", '0.0705')
        self.comboBox_UsTn_by_Hs_10.addItem("0.29 To 0.30", '0.0611')
        self.comboBox_UsTn_by_Hs_10.addItem("0.30 To 0.31", '0.0534')
        self.comboBox_UsTn_by_Hs_10.addItem("0.31 To 0.32", '0.0469')
        self.comboBox_UsTn_by_Hs_10.addItem("0.32 To 0.33", '0.0413')
        self.comboBox_UsTn_by_Hs_10.addItem("0.33 To 0.34", '0.0366')
        self.comboBox_UsTn_by_Hs_10.addItem("0.34 To 0.35", '0.0327')
        self.comboBox_UsTn_by_Hs_10.addItem("0.35 To 0.36", '0.0294')
        self.comboBox_UsTn_by_Hs_10.addItem("0.36 To 0.37", '0.0267')
        self.comboBox_UsTn_by_Hs_10.addItem("0.37 To 0.38", '0.0243')
        self.comboBox_UsTn_by_Hs_10.addItem("0.38 To 0.39", '0.0223')
        self.comboBox_UsTn_by_Hs_10.addItem("0.39 To 0.40", '0.0204')
        self.comboBox_UsTn_by_Hs_10.addItem("0.40 To 0.41", '0.0187')
        self.comboBox_UsTn_by_Hs_10.addItem("0.41 To 0.42", '0.0170')
        self.comboBox_UsTn_by_Hs_10.addItem("0.42 To 0.43", '0.0154')
        self.comboBox_UsTn_by_Hs_10.addItem("0.43 To 0.44", '0.0138')
        self.comboBox_UsTn_by_Hs_10.addItem("0.44 To 0.45", '0.0121')
        self.comboBox_UsTn_by_Hs_10.addItem("0.45 To 0.46", '0.0105')
        self.comboBox_UsTn_by_Hs_10.addItem("0.46 To 0.47", '0.0089')
        self.comboBox_UsTn_by_Hs_10.addItem("0.47 To 0.48", '0.0074')
        self.comboBox_UsTn_by_Hs_10.addItem("0.48 To 0.49", '0.0059')
        self.comboBox_UsTn_by_Hs_10.addItem("0.49 To 0.50", '0.0045')
        self.horizontalLayout_40.addWidget(self.comboBox_UsTn_by_Hs_10)
        spacerItem56 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_40.addItem(spacerItem56)
        self.lineEdit_UsTn_by_Hs_10 = QtWidgets.QLineEdit(self.tab_4)
        self.lineEdit_UsTn_by_Hs_10.setObjectName("lineEdit_UsTn_by_Hs_10")
        self.lineEdit_UsTn_by_Hs_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_40.addWidget(self.lineEdit_UsTn_by_Hs_10)
        self.verticalLayout_8.addLayout(self.horizontalLayout_40)
        self.horizontalLayout_41 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_41.setObjectName("horizontalLayout_41")
        self.label_7 = QtWidgets.QLabel(self.tab_4)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_41.addWidget(self.label_7)
        spacerItem57 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_41.addItem(spacerItem57)


        #combo Box for Tu_by_Tp_10.................................................................


        self.comboBox_Tu_by_Tp_10 = QtWidgets.QComboBox(self.tab_4)
        self.comboBox_Tu_by_Tp_10.setStyleSheet("background-color: rgb(205, 229, 247);")
        self.comboBox_Tu_by_Tp_10.setObjectName("comboBox_Tu_by_Tp_10")
        self.comboBox_Tu_by_Tp_10.addItem("0.00", '0.00')
        self.comboBox_Tu_by_Tp_10.addItem("0.00 To 0.01", '0.00')
        self.comboBox_Tu_by_Tp_10.addItem("0.01 To 0.02", '0.00')
        self.comboBox_Tu_by_Tp_10.addItem("0.02 To 0.03", '0.00')
        self.comboBox_Tu_by_Tp_10.addItem("0.03 To 0.04", '0.7555')
        self.comboBox_Tu_by_Tp_10.addItem("0.04 To 0.05", '0.7729')
        self.comboBox_Tu_by_Tp_10.addItem("0.05 To 0.06", '0.7880')
        self.comboBox_Tu_by_Tp_10.addItem("0.06 To 0.07", '0.8078')
        self.comboBox_Tu_by_Tp_10.addItem("0.07 To 0.08", '0.8237')
        self.comboBox_Tu_by_Tp_10.addItem("0.08 To 0.09", '0.8415')
        self.comboBox_Tu_by_Tp_10.addItem("0.09 To 0.10", '0.8584')
        self.comboBox_Tu_by_Tp_10.addItem("0.10 To 0.11", '0.8779')
        self.comboBox_Tu_by_Tp_10.addItem("0.11 To 0.12", '0.8949')
        self.comboBox_Tu_by_Tp_10.addItem("0.12 To 0.13", '0.9122')
        self.comboBox_Tu_by_Tp_10.addItem("0.13 To 0.14", '0.9315')
        self.comboBox_Tu_by_Tp_10.addItem("0.14 To 0.15", '0.9480')
        self.comboBox_Tu_by_Tp_10.addItem("0.15 To 0.16", '0.9657')
        self.comboBox_Tu_by_Tp_10.addItem("0.16 To 0.17", '0.9855')
        self.comboBox_Tu_by_Tp_10.addItem("0.17 To 0.18", '1.0009')
        self.comboBox_Tu_by_Tp_10.addItem("0.18 To 0.19", '1.0179')
        self.comboBox_Tu_by_Tp_10.addItem("0.19 To 0.20", '1.0345')
        self.comboBox_Tu_by_Tp_10.addItem("0.20 To 0.21", '1.0510')
        self.comboBox_Tu_by_Tp_10.addItem("0.21 To 0.22", '1.0674')
        self.comboBox_Tu_by_Tp_10.addItem("0.22 To 0.23", '1.0839')
        self.comboBox_Tu_by_Tp_10.addItem("0.23 To 0.24", '1.1002')
        self.comboBox_Tu_by_Tp_10.addItem("0.24 To 0.25", '1.1154')
        self.comboBox_Tu_by_Tp_10.addItem("0.25 To 0.26", '1.1292')
        self.comboBox_Tu_by_Tp_10.addItem("0.26 To 0.27", '1.1427')
        self.comboBox_Tu_by_Tp_10.addItem("0.27 To 0.28", '1.1570')
        self.comboBox_Tu_by_Tp_10.addItem("0.28 To 0.29", '1.1723')
        self.comboBox_Tu_by_Tp_10.addItem("0.29 To 0.30", '1.1878')
        self.comboBox_Tu_by_Tp_10.addItem("0.30 To 0.31", '1.2025')
        self.comboBox_Tu_by_Tp_10.addItem("0.31 To 0.32", '1.2154')
        self.comboBox_Tu_by_Tp_10.addItem("0.32 To 0.33", '1.2270')
        self.comboBox_Tu_by_Tp_10.addItem("0.33 To 0.34", '1.2380')
        self.comboBox_Tu_by_Tp_10.addItem("0.34 To 0.35", '1.2486')
        self.comboBox_Tu_by_Tp_10.addItem("0.35 To 0.36", '1.2595')
        self.comboBox_Tu_by_Tp_10.addItem("0.36 To 0.37", '1.2720')
        self.comboBox_Tu_by_Tp_10.addItem("0.37 To 0.38", '1.2840')
        self.comboBox_Tu_by_Tp_10.addItem("0.38 To 0.39", '1.2939')
        self.comboBox_Tu_by_Tp_10.addItem("0.39 To 0.40", '1.3045')
        self.comboBox_Tu_by_Tp_10.addItem("0.40 To 0.41", '1.3163')
        self.comboBox_Tu_by_Tp_10.addItem("0.41 To 0.42", '1.3266')
        self.comboBox_Tu_by_Tp_10.addItem("0.42 To 0.43", '1.3373')
        self.comboBox_Tu_by_Tp_10.addItem("0.43 To 0.44", '1.3487')
        self.comboBox_Tu_by_Tp_10.addItem("0.44 To 0.45", '1.3581')
        self.comboBox_Tu_by_Tp_10.addItem("0.45 To 0.46", '1.3687')
        self.comboBox_Tu_by_Tp_10.addItem("0.46 To 0.47", '1.3794')
        self.comboBox_Tu_by_Tp_10.addItem("0.47 To 0.48", '1.3899')
        self.comboBox_Tu_by_Tp_10.addItem("0.48 To 0.49", '1.4005')
        self.comboBox_Tu_by_Tp_10.addItem("0.49 To 0.50", '0.00')
        self.horizontalLayout_41.addWidget(self.comboBox_Tu_by_Tp_10)
        spacerItem58 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_41.addItem(spacerItem58)
        self.lineEdit_Tu_by_Tp_10 = QtWidgets.QLineEdit(self.tab_4)
        self.lineEdit_Tu_by_Tp_10.setObjectName("lineEdit_Tu_by_Tp_10")
        self.lineEdit_Tu_by_Tp_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_41.addWidget(self.lineEdit_Tu_by_Tp_10)
        self.verticalLayout_8.addLayout(self.horizontalLayout_41)
        self.horizontalLayout_42.addLayout(self.verticalLayout_8)
        self.gridLayout_5.addLayout(self.horizontalLayout_42, 5, 0, 1, 2)
        spacerItem59 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_5.addItem(spacerItem59, 3, 0, 1, 1)
        self.horizontalLayout_29 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_29.setObjectName("horizontalLayout_29")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout()
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.horizontalLayout_56 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_56.setObjectName("horizontalLayout_56")
        self.significant_Wave_height_3 = QtWidgets.QLabel(self.tab_4)
        self.significant_Wave_height_3.setObjectName("significant_Wave_height_3")
        self.horizontalLayout_56.addWidget(self.significant_Wave_height_3)
        spacerItem60 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_56.addItem(spacerItem60)
        self.significant_wave_height_lineEdit_1yer = QtWidgets.QLineEdit(self.tab_4)
        self.significant_wave_height_lineEdit_1yer.setObjectName("significant_wave_height_lineEdit_1yer")
        self.significant_wave_height_lineEdit_1yer.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_56.addWidget(self.significant_wave_height_lineEdit_1yer)
        self.verticalLayout_9.addLayout(self.horizontalLayout_56)
        self.horizontalLayout_57 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_57.setObjectName("horizontalLayout_57")
        self.wave_period_3 = QtWidgets.QLabel(self.tab_4)
        self.wave_period_3.setObjectName("wave_period_3")
        self.horizontalLayout_57.addWidget(self.wave_period_3)
        spacerItem61 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_57.addItem(spacerItem61)
        self.wave_period_lineEdit_1yer = QtWidgets.QLineEdit(self.tab_4)
        self.wave_period_lineEdit_1yer.setObjectName("wave_period_lineEdit_1yer")
        self.wave_period_lineEdit_1yer.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_57.addWidget(self.wave_period_lineEdit_1yer)
        self.verticalLayout_9.addLayout(self.horizontalLayout_57)
        self.horizontalLayout_58 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_58.setObjectName("horizontalLayout_58")
        self.peak_period_3 = QtWidgets.QLabel(self.tab_4)
        self.peak_period_3.setObjectName("peak_period_3")
        self.horizontalLayout_58.addWidget(self.peak_period_3)
        spacerItem62 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_58.addItem(spacerItem62)
        self.peak_period_lineEdit_1yer = QtWidgets.QLineEdit(self.tab_4)
        self.peak_period_lineEdit_1yer.setObjectName("peak_period_lineEdit_1yer")
        self.peak_period_lineEdit_1yer.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_58.addWidget(self.peak_period_lineEdit_1yer)
        self.verticalLayout_9.addLayout(self.horizontalLayout_58)
        self.horizontalLayout_63 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_63.setObjectName("horizontalLayout_63")
        self.Tn_Tp_3 = QtWidgets.QLabel(self.tab_4)
        self.Tn_Tp_3.setObjectName("Tn_Tp_3")
        self.horizontalLayout_63.addWidget(self.Tn_Tp_3)
        spacerItem63 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_63.addItem(spacerItem63)
        self.lineEdit_Tn_by_Tp_1yer = QtWidgets.QLineEdit(self.tab_4)
        self.lineEdit_Tn_by_Tp_1yer.setObjectName("lineEdit_Tn_by_Tp_1yer")
        self.lineEdit_Tn_by_Tp_1yer.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_63.addWidget(self.lineEdit_Tn_by_Tp_1yer)
        self.verticalLayout_9.addLayout(self.horizontalLayout_63)
        self.horizontalLayout_29.addLayout(self.verticalLayout_9)
        spacerItem64 = QtWidgets.QSpacerItem(13, 77, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_29.addItem(spacerItem64)
        self.verticalLayout_10 = QtWidgets.QVBoxLayout()
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.horizontalLayout_59 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_59.setObjectName("horizontalLayout_59")
        self.wave_direction_3 = QtWidgets.QLabel(self.tab_4)
        self.wave_direction_3.setObjectName("wave_direction_3")
        self.horizontalLayout_59.addWidget(self.wave_direction_3)
        spacerItem65 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_59.addItem(spacerItem65)
        self.wave_direction_lineEdit_1yer = QtWidgets.QLineEdit(self.tab_4)
        self.wave_direction_lineEdit_1yer.setObjectName("wave_direction_lineEdit_1yer")
        self.wave_direction_lineEdit_1yer.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_59.addWidget(self.wave_direction_lineEdit_1yer)
        self.verticalLayout_10.addLayout(self.horizontalLayout_59)
        self.horizontalLayout_60 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_60.setObjectName("horizontalLayout_60")
        self.current_velocity_3 = QtWidgets.QLabel(self.tab_4)
        self.current_velocity_3.setObjectName("current_velocity_3")
        self.horizontalLayout_60.addWidget(self.current_velocity_3)
        spacerItem66 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_60.addItem(spacerItem66)
        self.current_velocity_lineEdit_1yer = QtWidgets.QLineEdit(self.tab_4)
        self.current_velocity_lineEdit_1yer.setObjectName("current_velocity_lineEdit_1yer")
        self.current_velocity_lineEdit_1yer.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_60.addWidget(self.current_velocity_lineEdit_1yer)
        self.verticalLayout_10.addLayout(self.horizontalLayout_60)
        self.horizontalLayout_61 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_61.setObjectName("horizontalLayout_61")
        self.current_direction_3 = QtWidgets.QLabel(self.tab_4)
        self.current_direction_3.setObjectName("current_direction_3")
        self.horizontalLayout_61.addWidget(self.current_direction_3)
        spacerItem67 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_61.addItem(spacerItem67)
        self.current_direction_lineEdit_1yer = QtWidgets.QLineEdit(self.tab_4)
        self.current_direction_lineEdit_1yer.setObjectName("current_direction_lineEdit_1yer")
        self.current_direction_lineEdit_1yer.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_61.addWidget(self.current_direction_lineEdit_1yer)
        self.verticalLayout_10.addLayout(self.horizontalLayout_61)
        self.horizontalLayout_64 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_64.setObjectName("horizontalLayout_64")
        self.label_8 = QtWidgets.QLabel(self.tab_4)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_64.addWidget(self.label_8)
        spacerItem68 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_64.addItem(spacerItem68)


        #combo Box for UsTn_by_Hs_1y.................................................................


        self.comboBox_UsTn_by_Hs_1y = QtWidgets.QComboBox(self.tab_4)
        self.comboBox_UsTn_by_Hs_1y.setStyleSheet("background-color: rgb(205, 229, 247);")
        self.comboBox_UsTn_by_Hs_1y.setObjectName("comboBox_UsTn_by_Hs_1y")
        self.comboBox_UsTn_by_Hs_1y.addItem("0.00", '0.5')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.00 To 0.01", '0.4951')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.01 To 0.02", '0.491')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.02 To 0.03", '0.4852')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.03 To 0.04", '0.4769')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.04 To 0.05", '0.4662')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.05 To 0.06", '0.4536')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.06 To 0.07", '0.4393')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.07 To 0.08", '0.4247')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.08 To 0.09", '0.4067')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.09 To 0.10", '0.3878')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.10 To 0.11", '0.3694')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.11 To 0.12", '0.3497')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.12 To 0.13", '0.3293')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.13 To 0.14", '0.3082')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.14 To 0.15", '0.2873')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.15 To 0.16", '0.2675')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.16 To 0.17", '0.2490')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.17 To 0.18", '0.2300')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.18 To 0.19", '0.2111')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.19 To 0.20", '0.1907')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.20 To 0.21", '0.1755')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.21 To 0.22", '0.1596')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.22 To 0.23", '0.1437')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.23 To 0.24", '0.1283')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.24 To 0.25", '0.1149')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.25 To 0.26", '0.1033')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.26 To 0.27", '0.0924')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.27 To 0.28", '0.0812')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.28 To 0.29", '0.0705')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.29 To 0.30", '0.0611')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.30 To 0.31", '0.0534')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.31 To 0.32", '0.0469')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.32 To 0.33", '0.0413')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.33 To 0.34", '0.0366')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.34 To 0.35", '0.0327')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.35 To 0.36", '0.0294')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.36 To 0.37", '0.0267')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.37 To 0.38", '0.0243')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.38 To 0.39", '0.0223')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.39 To 0.40", '0.0204')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.40 To 0.41", '0.0187')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.41 To 0.42", '0.0170')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.42 To 0.43", '0.0154')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.43 To 0.44", '0.0138')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.44 To 0.45", '0.0121')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.45 To 0.46", '0.0105')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.46 To 0.47", '0.0089')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.47 To 0.48", '0.0074')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.48 To 0.49", '0.0059')
        self.comboBox_UsTn_by_Hs_1y.addItem("0.49 To 0.50", '0.0045')
        self.horizontalLayout_64.addWidget(self.comboBox_UsTn_by_Hs_1y)
        spacerItem69 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_64.addItem(spacerItem69)
        self.lineEdit_UsTn_by_Hs_1y = QtWidgets.QLineEdit(self.tab_4)
        self.lineEdit_UsTn_by_Hs_1y.setObjectName("lineEdit_UsTn_by_Hs_1y")
        self.lineEdit_UsTn_by_Hs_1y.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_64.addWidget(self.lineEdit_UsTn_by_Hs_1y)
        self.verticalLayout_10.addLayout(self.horizontalLayout_64)
        self.horizontalLayout_65 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_65.setObjectName("horizontalLayout_65")
        self.label_9 = QtWidgets.QLabel(self.tab_4)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.horizontalLayout_65.addWidget(self.label_9)
        spacerItem70 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_65.addItem(spacerItem70)


        #combo Box for Tu_by_Tp_1y.................................................................


        self.comboBox_Tu_by_Tp_1y = QtWidgets.QComboBox(self.tab_4)
        self.comboBox_Tu_by_Tp_1y.setStyleSheet("background-color: rgb(205, 229, 247);")
        self.comboBox_Tu_by_Tp_1y.setObjectName("comboBox_Tu_by_Tp_1y")
        self.comboBox_Tu_by_Tp_1y.addItem("0.00", '0.00')
        self.comboBox_Tu_by_Tp_1y.addItem("0.00 To 0.01", '0.00')
        self.comboBox_Tu_by_Tp_1y.addItem("0.01 To 0.02", '0.00')
        self.comboBox_Tu_by_Tp_1y.addItem("0.02 To 0.03", '0.00')
        self.comboBox_Tu_by_Tp_1y.addItem("0.03 To 0.04", '0.7555')
        self.comboBox_Tu_by_Tp_1y.addItem("0.04 To 0.05", '0.7729')
        self.comboBox_Tu_by_Tp_1y.addItem("0.05 To 0.06", '0.7880')
        self.comboBox_Tu_by_Tp_1y.addItem("0.06 To 0.07", '0.8078')
        self.comboBox_Tu_by_Tp_1y.addItem("0.07 To 0.08", '0.8237')
        self.comboBox_Tu_by_Tp_1y.addItem("0.08 To 0.09", '0.8415')
        self.comboBox_Tu_by_Tp_1y.addItem("0.09 To 0.10", '0.8584')
        self.comboBox_Tu_by_Tp_1y.addItem("0.10 To 0.11", '0.8779')
        self.comboBox_Tu_by_Tp_1y.addItem("0.11 To 0.12", '0.8949')
        self.comboBox_Tu_by_Tp_1y.addItem("0.12 To 0.13", '0.9122')
        self.comboBox_Tu_by_Tp_1y.addItem("0.13 To 0.14", '0.9315')
        self.comboBox_Tu_by_Tp_1y.addItem("0.14 To 0.15", '0.9480')
        self.comboBox_Tu_by_Tp_1y.addItem("0.15 To 0.16", '0.9657')
        self.comboBox_Tu_by_Tp_1y.addItem("0.16 To 0.17", '0.9855')
        self.comboBox_Tu_by_Tp_1y.addItem("0.17 To 0.18", '1.0009')
        self.comboBox_Tu_by_Tp_1y.addItem("0.18 To 0.19", '1.0179')
        self.comboBox_Tu_by_Tp_1y.addItem("0.19 To 0.20", '1.0345')
        self.comboBox_Tu_by_Tp_1y.addItem("0.20 To 0.21", '1.0510')
        self.comboBox_Tu_by_Tp_1y.addItem("0.21 To 0.22", '1.0674')
        self.comboBox_Tu_by_Tp_1y.addItem("0.22 To 0.23", '1.0839')
        self.comboBox_Tu_by_Tp_1y.addItem("0.23 To 0.24", '1.1002')
        self.comboBox_Tu_by_Tp_1y.addItem("0.24 To 0.25", '1.1154')
        self.comboBox_Tu_by_Tp_1y.addItem("0.25 To 0.26", '1.1292')
        self.comboBox_Tu_by_Tp_1y.addItem("0.26 To 0.27", '1.1427')
        self.comboBox_Tu_by_Tp_1y.addItem("0.27 To 0.28", '1.1570')
        self.comboBox_Tu_by_Tp_1y.addItem("0.28 To 0.29", '1.1723')
        self.comboBox_Tu_by_Tp_1y.addItem("0.29 To 0.30", '1.1878')
        self.comboBox_Tu_by_Tp_1y.addItem("0.30 To 0.31", '1.2025')
        self.comboBox_Tu_by_Tp_1y.addItem("0.31 To 0.32", '1.2154')
        self.comboBox_Tu_by_Tp_1y.addItem("0.32 To 0.33", '1.2270')
        self.comboBox_Tu_by_Tp_1y.addItem("0.33 To 0.34", '1.2380')
        self.comboBox_Tu_by_Tp_1y.addItem("0.34 To 0.35", '1.2486')
        self.comboBox_Tu_by_Tp_1y.addItem("0.35 To 0.36", '1.2595')
        self.comboBox_Tu_by_Tp_1y.addItem("0.36 To 0.37", '1.2720')
        self.comboBox_Tu_by_Tp_1y.addItem("0.37 To 0.38", '1.2840')
        self.comboBox_Tu_by_Tp_1y.addItem("0.38 To 0.39", '1.2939')
        self.comboBox_Tu_by_Tp_1y.addItem("0.39 To 0.40", '1.3045')
        self.comboBox_Tu_by_Tp_1y.addItem("0.40 To 0.41", '1.3163')
        self.comboBox_Tu_by_Tp_1y.addItem("0.41 To 0.42", '1.3266')
        self.comboBox_Tu_by_Tp_1y.addItem("0.42 To 0.43", '1.3373')
        self.comboBox_Tu_by_Tp_1y.addItem("0.43 To 0.44", '1.3487')
        self.comboBox_Tu_by_Tp_1y.addItem("0.44 To 0.45", '1.3581')
        self.comboBox_Tu_by_Tp_1y.addItem("0.45 To 0.46", '1.3687')
        self.comboBox_Tu_by_Tp_1y.addItem("0.46 To 0.47", '1.3794')
        self.comboBox_Tu_by_Tp_1y.addItem("0.47 To 0.48", '1.3899')
        self.comboBox_Tu_by_Tp_1y.addItem("0.48 To 0.49", '1.4005')
        self.comboBox_Tu_by_Tp_1y.addItem("0.49 To 0.50", '0.00')
        self.horizontalLayout_65.addWidget(self.comboBox_Tu_by_Tp_1y)
        spacerItem71 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_65.addItem(spacerItem71)
        self.lineEdit_Tu_by_Tp_1y = QtWidgets.QLineEdit(self.tab_4)
        self.lineEdit_Tu_by_Tp_1y.setObjectName("lineEdit_Tu_by_Tp_1y")
        self.lineEdit_Tu_by_Tp_1y.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_65.addWidget(self.lineEdit_Tu_by_Tp_1y)
        self.verticalLayout_10.addLayout(self.horizontalLayout_65)
        self.horizontalLayout_29.addLayout(self.verticalLayout_10)
        self.gridLayout_5.addLayout(self.horizontalLayout_29, 8, 0, 1, 2)
        self.horizontalLayout_68 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_68.setObjectName("horizontalLayout_68")
        spacerItem72 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_68.addItem(spacerItem72)
        self.pushButton_cal_1y = QtWidgets.QPushButton(self.tab_4)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.pushButton_cal_1y.setFont(font)
        self.pushButton_cal_1y.setObjectName("pushButton_cal_1y")
        self.pushButton_cal_1y.setStyleSheet("background-color: rgb(205, 229, 247);")
        self.horizontalLayout_68.addWidget(self.pushButton_cal_1y)
        spacerItem73 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_68.addItem(spacerItem73)
        self.gridLayout_5.addLayout(self.horizontalLayout_68, 9, 0, 1, 1)
        spacerItem74 = QtWidgets.QSpacerItem(20, 52, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_5.addItem(spacerItem74, 10, 0, 1, 1)
        spacerItem75 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_5.addItem(spacerItem75, 6, 0, 1, 1)
        self.tabWidget_2.addTab(self.tab_4, "")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.tab_5)
        self.gridLayout_4.setObjectName("gridLayout_4")
        spacerItem76 = QtWidgets.QSpacerItem(20, 37, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_4.addItem(spacerItem76, 3, 0, 1, 1)
        self.boundary_condition_fixed_fixed_2 = QtWidgets.QLabel(self.tab_5)
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(14)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.boundary_condition_fixed_fixed_2.setFont(font)
        self.boundary_condition_fixed_fixed_2.setStyleSheet("font: 12pt \"Times New Roman\";\n"
"background-color: #faf5f5;\n"
"font: 14pt \"MS Shell Dlg 2\";")
        self.boundary_condition_fixed_fixed_2.setObjectName("boundary_condition_fixed_fixed_2")
        self.gridLayout_4.addWidget(self.boundary_condition_fixed_fixed_2, 4, 0, 1, 2)
        spacerItem77 = QtWidgets.QSpacerItem(20, 79, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_4.addItem(spacerItem77, 5, 1, 1, 1)
        self.verticalLayout_11 = QtWidgets.QVBoxLayout()
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.horizontalLayout_124 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_124.setObjectName("horizontalLayout_124")
        self.usage_factor_for_equivalent_stress_check_7 = QtWidgets.QLabel(self.tab_5)
        self.usage_factor_for_equivalent_stress_check_7.setObjectName("usage_factor_for_equivalent_stress_check_7")
        self.horizontalLayout_124.addWidget(self.usage_factor_for_equivalent_stress_check_7)
        spacerItem78 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_124.addItem(spacerItem78)
        spacerItem79 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_124.addItem(spacerItem79)
        self.lineEdit_boundary_condition_C1 = QtWidgets.QLineEdit(self.tab_5)
        self.lineEdit_boundary_condition_C1.setObjectName("lineEdit_boundary_condition_C1")
        self.lineEdit_boundary_condition_C1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_124.addWidget(self.lineEdit_boundary_condition_C1)
        self.verticalLayout_11.addLayout(self.horizontalLayout_124)
        self.horizontalLayout_125 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_125.setObjectName("horizontalLayout_125")
        self.usage_factor_for_equivalent_stress_check_8 = QtWidgets.QLabel(self.tab_5)
        self.usage_factor_for_equivalent_stress_check_8.setObjectName("usage_factor_for_equivalent_stress_check_8")
        self.horizontalLayout_125.addWidget(self.usage_factor_for_equivalent_stress_check_8)
        spacerItem80 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_125.addItem(spacerItem80)
        spacerItem81 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_125.addItem(spacerItem81)
        self.lineEdit_boundary_condition_C2 = QtWidgets.QLineEdit(self.tab_5)
        self.lineEdit_boundary_condition_C2.setObjectName("lineEdit_boundary_condition_C2")
        self.lineEdit_boundary_condition_C2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_125.addWidget(self.lineEdit_boundary_condition_C2)
        self.verticalLayout_11.addLayout(self.horizontalLayout_125)
        self.horizontalLayout_126 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_126.setObjectName("horizontalLayout_126")
        self.usage_factor_for_equivalent_stress_check_9 = QtWidgets.QLabel(self.tab_5)
        self.usage_factor_for_equivalent_stress_check_9.setObjectName("usage_factor_for_equivalent_stress_check_9")
        self.horizontalLayout_126.addWidget(self.usage_factor_for_equivalent_stress_check_9)
        spacerItem82 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_126.addItem(spacerItem82)
        spacerItem83 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_126.addItem(spacerItem83)
        self.lineEdit_boundary_condition_C3 = QtWidgets.QLineEdit(self.tab_5)
        self.lineEdit_boundary_condition_C3.setObjectName("lineEdit_boundary_condition_C3")
        self.lineEdit_boundary_condition_C3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_126.addWidget(self.lineEdit_boundary_condition_C3)
        self.verticalLayout_11.addLayout(self.horizontalLayout_126)
        self.horizontalLayout_127 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_127.setObjectName("horizontalLayout_127")
        self.usage_factor_for_equivalent_stress_check_10 = QtWidgets.QLabel(self.tab_5)
        self.usage_factor_for_equivalent_stress_check_10.setObjectName("usage_factor_for_equivalent_stress_check_10")
        self.horizontalLayout_127.addWidget(self.usage_factor_for_equivalent_stress_check_10)
        spacerItem84 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_127.addItem(spacerItem84)
        spacerItem85 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_127.addItem(spacerItem85)
        self.lineEdit_boundary_condition_C4 = QtWidgets.QLineEdit(self.tab_5)
        self.lineEdit_boundary_condition_C4.setObjectName("lineEdit_boundary_condition_C4")
        self.lineEdit_boundary_condition_C4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_127.addWidget(self.lineEdit_boundary_condition_C4)
        self.verticalLayout_11.addLayout(self.horizontalLayout_127)
        self.horizontalLayout_128 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_128.setObjectName("horizontalLayout_128")
        self.usage_factor_for_equivalent_stress_check_11 = QtWidgets.QLabel(self.tab_5)
        self.usage_factor_for_equivalent_stress_check_11.setObjectName("usage_factor_for_equivalent_stress_check_11")
        self.horizontalLayout_128.addWidget(self.usage_factor_for_equivalent_stress_check_11)
        spacerItem86 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_128.addItem(spacerItem86)
        spacerItem87 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_128.addItem(spacerItem87)
        self.lineEdit_boundary_condition_C5 = QtWidgets.QLineEdit(self.tab_5)
        self.lineEdit_boundary_condition_C5.setObjectName("lineEdit_boundary_condition_C5")
        self.lineEdit_boundary_condition_C5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_128.addWidget(self.lineEdit_boundary_condition_C5)
        self.verticalLayout_11.addLayout(self.horizontalLayout_128)
        self.horizontalLayout_129 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_129.setObjectName("horizontalLayout_129")
        self.usage_factor_for_equivalent_stress_check_12 = QtWidgets.QLabel(self.tab_5)
        self.usage_factor_for_equivalent_stress_check_12.setObjectName("usage_factor_for_equivalent_stress_check_12")
        self.horizontalLayout_129.addWidget(self.usage_factor_for_equivalent_stress_check_12)
        spacerItem88 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_129.addItem(spacerItem88)
        spacerItem89 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_129.addItem(spacerItem89)
        self.lineEdit_boundary_condition_C6 = QtWidgets.QLineEdit(self.tab_5)
        self.lineEdit_boundary_condition_C6.setObjectName("lineEdit_boundary_condition_C6")
        self.lineEdit_boundary_condition_C6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_129.addWidget(self.lineEdit_boundary_condition_C6)
        self.verticalLayout_11.addLayout(self.horizontalLayout_129)
        self.gridLayout_4.addLayout(self.verticalLayout_11, 6, 0, 1, 4)
        spacerItem90 = QtWidgets.QSpacerItem(176, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_4.addItem(spacerItem90, 6, 4, 1, 1)
        # self.submitbutton = QtWidgets.QPushButton(self.tab_5)
        # font = QtGui.QFont()
        # font.setBold(True)
        # font.setWeight(75)
        # self.submitbutton.setFont(font)
        # self.submitbutton.setObjectName("submitbutton")
        # self.gridLayout_4.addWidget(self.submitbutton, 7, 5, 1, 1)
        spacerItem91 = QtWidgets.QSpacerItem(20, 79, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_4.addItem(spacerItem91, 7, 6, 1, 1)
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.horizontalLayout_111 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_111.setObjectName("horizontalLayout_111")
        self.inline_static_deflection = QtWidgets.QLabel(self.tab_5)
        self.inline_static_deflection.setObjectName("inline_static_deflection")
        self.horizontalLayout_111.addWidget(self.inline_static_deflection)
        spacerItem92 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_111.addItem(spacerItem92)
        self.inline_static_deflection_lineEdit_2 = QtWidgets.QLineEdit(self.tab_5)
        self.inline_static_deflection_lineEdit_2.setObjectName("inline_static_deflection_lineEdit_2")
        self.inline_static_deflection_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_111.addWidget(self.inline_static_deflection_lineEdit_2)
        self.verticalLayout_6.addLayout(self.horizontalLayout_111)
        self.horizontalLayout_112 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_112.setObjectName("horizontalLayout_112")
        self.pressure_load_effect_factor = QtWidgets.QLabel(self.tab_5)
        self.pressure_load_effect_factor.setObjectName("pressure_load_effect_factor")
        self.horizontalLayout_112.addWidget(self.pressure_load_effect_factor)
        spacerItem93 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_112.addItem(spacerItem93)
        self.pressure_load_effect_factor_lineEdit_2 = QtWidgets.QLineEdit(self.tab_5)
        self.pressure_load_effect_factor_lineEdit_2.setObjectName("pressure_load_effect_factor_lineEdit_2")
        self.pressure_load_effect_factor_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_112.addWidget(self.pressure_load_effect_factor_lineEdit_2)
        self.verticalLayout_6.addLayout(self.horizontalLayout_112)
        self.horizontalLayout_113 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_113.setObjectName("horizontalLayout_113")
        self.usage_factor_for_equivalent_stress_check = QtWidgets.QLabel(self.tab_5)
        self.usage_factor_for_equivalent_stress_check.setObjectName("usage_factor_for_equivalent_stress_check")
        self.horizontalLayout_113.addWidget(self.usage_factor_for_equivalent_stress_check)
        spacerItem94 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_113.addItem(spacerItem94)
        self.usage_factor_for_equivalent_stress_check_lineEdit_2 = QtWidgets.QLineEdit(self.tab_5)
        self.usage_factor_for_equivalent_stress_check_lineEdit_2.setObjectName("usage_factor_for_equivalent_stress_check_lineEdit_2")
        self.usage_factor_for_equivalent_stress_check_lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_113.addWidget(self.usage_factor_for_equivalent_stress_check_lineEdit_2)
        self.verticalLayout_6.addLayout(self.horizontalLayout_113)
        self.horizontalLayout_119 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_119.setObjectName("horizontalLayout_119")
        self.usage_factor_for_equivalent_stress_check_2 = QtWidgets.QLabel(self.tab_5)
        self.usage_factor_for_equivalent_stress_check_2.setObjectName("usage_factor_for_equivalent_stress_check_2")
        self.horizontalLayout_119.addWidget(self.usage_factor_for_equivalent_stress_check_2)
        spacerItem95 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_119.addItem(spacerItem95)
        self.usage_factor_for_equivalent_stress_check_lineEdit_3 = QtWidgets.QLineEdit(self.tab_5)
        self.usage_factor_for_equivalent_stress_check_lineEdit_3.setObjectName("usage_factor_for_equivalent_stress_check_lineEdit_3")
        self.usage_factor_for_equivalent_stress_check_lineEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_119.addWidget(self.usage_factor_for_equivalent_stress_check_lineEdit_3)
        self.verticalLayout_6.addLayout(self.horizontalLayout_119)
        self.horizontalLayout_120 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_120.setObjectName("horizontalLayout_120")
        self.usage_factor_for_equivalent_stress_check_3 = QtWidgets.QLabel(self.tab_5)
        self.usage_factor_for_equivalent_stress_check_3.setObjectName("usage_factor_for_equivalent_stress_check_3")
        self.horizontalLayout_120.addWidget(self.usage_factor_for_equivalent_stress_check_3)
        spacerItem96 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_120.addItem(spacerItem96)
        self.usage_factor_for_equivalent_stress_check_lineEdit_4 = QtWidgets.QLineEdit(self.tab_5)
        self.usage_factor_for_equivalent_stress_check_lineEdit_4.setObjectName("usage_factor_for_equivalent_stress_check_lineEdit_4")
        self.usage_factor_for_equivalent_stress_check_lineEdit_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_120.addWidget(self.usage_factor_for_equivalent_stress_check_lineEdit_4)
        self.verticalLayout_6.addLayout(self.horizontalLayout_120)
        self.horizontalLayout_121 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_121.setObjectName("horizontalLayout_121")
        self.usage_factor_for_equivalent_stress_check_4 = QtWidgets.QLabel(self.tab_5)
        self.usage_factor_for_equivalent_stress_check_4.setObjectName("usage_factor_for_equivalent_stress_check_4")
        self.horizontalLayout_121.addWidget(self.usage_factor_for_equivalent_stress_check_4)
        spacerItem97 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_121.addItem(spacerItem97)
        self.usage_factor_for_equivalent_stress_check_lineEdit_5 = QtWidgets.QLineEdit(self.tab_5)
        self.usage_factor_for_equivalent_stress_check_lineEdit_5.setObjectName("usage_factor_for_equivalent_stress_check_lineEdit_5")
        self.usage_factor_for_equivalent_stress_check_lineEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_121.addWidget(self.usage_factor_for_equivalent_stress_check_lineEdit_5)
        self.verticalLayout_6.addLayout(self.horizontalLayout_121)
        self.horizontalLayout_122 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_122.setObjectName("horizontalLayout_122")
        self.usage_factor_for_equivalent_stress_check_5 = QtWidgets.QLabel(self.tab_5)
        self.usage_factor_for_equivalent_stress_check_5.setObjectName("usage_factor_for_equivalent_stress_check_5")
        self.horizontalLayout_122.addWidget(self.usage_factor_for_equivalent_stress_check_5)
        spacerItem98 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_122.addItem(spacerItem98)
        self.usage_factor_for_equivalent_stress_check_lineEdit_6 = QtWidgets.QLineEdit(self.tab_5)
        self.usage_factor_for_equivalent_stress_check_lineEdit_6.setObjectName("usage_factor_for_equivalent_stress_check_lineEdit_6")
        self.usage_factor_for_equivalent_stress_check_lineEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_122.addWidget(self.usage_factor_for_equivalent_stress_check_lineEdit_6)
        self.verticalLayout_6.addLayout(self.horizontalLayout_122)
        self.horizontalLayout_123 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_123.setObjectName("horizontalLayout_123")
        self.usage_factor_for_equivalent_stress_check_6 = QtWidgets.QLabel(self.tab_5)
        self.usage_factor_for_equivalent_stress_check_6.setObjectName("usage_factor_for_equivalent_stress_check_6")
        self.horizontalLayout_123.addWidget(self.usage_factor_for_equivalent_stress_check_6)
        spacerItem99 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_123.addItem(spacerItem99)
        self.usage_factor_for_equivalent_stress_check_lineEdit_7 = QtWidgets.QLineEdit(self.tab_5)
        self.usage_factor_for_equivalent_stress_check_lineEdit_7.setObjectName("usage_factor_for_equivalent_stress_check_lineEdit_7")
        self.usage_factor_for_equivalent_stress_check_lineEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_123.addWidget(self.usage_factor_for_equivalent_stress_check_lineEdit_7)
        self.verticalLayout_6.addLayout(self.horizontalLayout_123)
        self.gridLayout_4.addLayout(self.verticalLayout_6, 0, 3, 3, 4)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout_44 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_44.setObjectName("horizontalLayout_44")
        self.safety_factor_on_Inline_frequency = QtWidgets.QLabel(self.tab_5)
        self.safety_factor_on_Inline_frequency.setObjectName("safety_factor_on_Inline_frequency")
        self.horizontalLayout_44.addWidget(self.safety_factor_on_Inline_frequency)
        spacerItem100 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_44.addItem(spacerItem100)
        self.safety_factor_on_Inline_frequency_lineEdit = QtWidgets.QLineEdit(self.tab_5)
        self.safety_factor_on_Inline_frequency_lineEdit.setObjectName("safety_factor_on_Inline_frequency_lineEdit")
        self.safety_factor_on_Inline_frequency_lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_44.addWidget(self.safety_factor_on_Inline_frequency_lineEdit)
        self.verticalLayout_3.addLayout(self.horizontalLayout_44)
        self.horizontalLayout_45 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_45.setObjectName("horizontalLayout_45")
        self.safety_factor_on_crossflow_frequency = QtWidgets.QLabel(self.tab_5)
        self.safety_factor_on_crossflow_frequency.setObjectName("safety_factor_on_crossflow_frequency")
        self.horizontalLayout_45.addWidget(self.safety_factor_on_crossflow_frequency)
        spacerItem101 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_45.addItem(spacerItem101)
        self.safety_factor_on_crossflow_frequency_lineEdit = QtWidgets.QLineEdit(self.tab_5)
        self.safety_factor_on_crossflow_frequency_lineEdit.setObjectName("safety_factor_on_crossflow_frequency_lineEdit")
        self.safety_factor_on_crossflow_frequency_lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_45.addWidget(self.safety_factor_on_crossflow_frequency_lineEdit)
        self.verticalLayout_3.addLayout(self.horizontalLayout_45)
        self.horizontalLayout_46 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_46.setObjectName("horizontalLayout_46")
        self.safety_factor_on_stress_range = QtWidgets.QLabel(self.tab_5)
        self.safety_factor_on_stress_range.setObjectName("safety_factor_on_stress_range")
        self.horizontalLayout_46.addWidget(self.safety_factor_on_stress_range)
        spacerItem102 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_46.addItem(spacerItem102)
        self.safety_factor_on_stress_range_lineEdit = QtWidgets.QLineEdit(self.tab_5)
        self.safety_factor_on_stress_range_lineEdit.setObjectName("safety_factor_on_stress_range_lineEdit")
        self.safety_factor_on_stress_range_lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_46.addWidget(self.safety_factor_on_stress_range_lineEdit)
        self.verticalLayout_3.addLayout(self.horizontalLayout_46)
        self.horizontalLayout_47 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_47.setObjectName("horizontalLayout_47")
        self.safety_factor_on_natural_frequency = QtWidgets.QLabel(self.tab_5)
        self.safety_factor_on_natural_frequency.setObjectName("safety_factor_on_natural_frequency")
        self.horizontalLayout_47.addWidget(self.safety_factor_on_natural_frequency)
        spacerItem103 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_47.addItem(spacerItem103)
        self.safety_factor_on_natural_frequency_lineEdit = QtWidgets.QLineEdit(self.tab_5)
        self.safety_factor_on_natural_frequency_lineEdit.setObjectName("safety_factor_on_natural_frequency_lineEdit")
        self.safety_factor_on_natural_frequency_lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_47.addWidget(self.safety_factor_on_natural_frequency_lineEdit)
        self.verticalLayout_3.addLayout(self.horizontalLayout_47)
        self.horizontalLayout_48 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_48.setObjectName("horizontalLayout_48")
        self.safety_on_damping = QtWidgets.QLabel(self.tab_5)
        self.safety_on_damping.setObjectName("safety_on_damping")
        self.horizontalLayout_48.addWidget(self.safety_on_damping)
        spacerItem104 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_48.addItem(spacerItem104)
        self.safety_on_damping_lineEdit = QtWidgets.QLineEdit(self.tab_5)
        self.safety_on_damping_lineEdit.setObjectName("safety_on_damping_lineEdit")
        self.safety_on_damping_lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_48.addWidget(self.safety_on_damping_lineEdit)
        self.verticalLayout_3.addLayout(self.horizontalLayout_48)
        self.horizontalLayout_49 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_49.setObjectName("horizontalLayout_49")
        self.safety_factor_on_onset_of_VrIL = QtWidgets.QLabel(self.tab_5)
        self.safety_factor_on_onset_of_VrIL.setObjectName("safety_factor_on_onset_of_VrIL")
        self.horizontalLayout_49.addWidget(self.safety_factor_on_onset_of_VrIL)
        spacerItem105 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_49.addItem(spacerItem105)
        self.safety_factor_on_onset_of_VrIL_lineEdit = QtWidgets.QLineEdit(self.tab_5)
        self.safety_factor_on_onset_of_VrIL_lineEdit.setObjectName("safety_factor_on_onset_of_VrIL_lineEdit")
        self.safety_factor_on_onset_of_VrIL_lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_49.addWidget(self.safety_factor_on_onset_of_VrIL_lineEdit)
        self.verticalLayout_3.addLayout(self.horizontalLayout_49)
        self.horizontalLayout_50 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_50.setObjectName("horizontalLayout_50")
        self.safety_factor_on_onset_of_VrCF = QtWidgets.QLabel(self.tab_5)
        self.safety_factor_on_onset_of_VrCF.setObjectName("safety_factor_on_onset_of_VrCF")
        self.horizontalLayout_50.addWidget(self.safety_factor_on_onset_of_VrCF)
        spacerItem106 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_50.addItem(spacerItem106)
        self.safety_factor_on_onset_of_VrCF_lineEdit = QtWidgets.QLineEdit(self.tab_5)
        self.safety_factor_on_onset_of_VrCF_lineEdit.setObjectName("safety_factor_on_onset_of_VrCF_lineEdit")
        self.safety_factor_on_onset_of_VrCF_lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_50.addWidget(self.safety_factor_on_onset_of_VrCF_lineEdit)
        self.verticalLayout_3.addLayout(self.horizontalLayout_50)
        self.horizontalLayout_114 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_114.setObjectName("horizontalLayout_114")
        self.structural_damping_2 = QtWidgets.QLabel(self.tab_5)
        self.structural_damping_2.setObjectName("structural_damping_2")
        self.horizontalLayout_114.addWidget(self.structural_damping_2)
        spacerItem107 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_114.addItem(spacerItem107)
        self.structural_damping_lineEdit_3 = QtWidgets.QLineEdit(self.tab_5)
        self.structural_damping_lineEdit_3.setObjectName("structural_damping_lineEdit_3")
        self.structural_damping_lineEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_114.addWidget(self.structural_damping_lineEdit_3)
        self.verticalLayout_3.addLayout(self.horizontalLayout_114)
        self.horizontalLayout_116 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_116.setObjectName("horizontalLayout_116")
        self.soil_damping_2 = QtWidgets.QLabel(self.tab_5)
        self.soil_damping_2.setObjectName("soil_damping_2")
        self.horizontalLayout_116.addWidget(self.soil_damping_2)
        spacerItem108 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_116.addItem(spacerItem108)
        self.soil_damping_lineEdit_3 = QtWidgets.QLineEdit(self.tab_5)
        self.soil_damping_lineEdit_3.setObjectName("soil_damping_lineEdit_3")
        self.soil_damping_lineEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_116.addWidget(self.soil_damping_lineEdit_3)
        self.verticalLayout_3.addLayout(self.horizontalLayout_116)
        self.horizontalLayout_117 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_117.setObjectName("horizontalLayout_117")
        self.hydrodynamic_damping_2 = QtWidgets.QLabel(self.tab_5)
        self.hydrodynamic_damping_2.setObjectName("hydrodynamic_damping_2")
        self.horizontalLayout_117.addWidget(self.hydrodynamic_damping_2)
        spacerItem109 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_117.addItem(spacerItem109)
        self.hydrodynamic_damping_lineEdit_3 = QtWidgets.QLineEdit(self.tab_5)
        self.hydrodynamic_damping_lineEdit_3.setObjectName("hydrodynamic_damping_lineEdit_3")
        self.hydrodynamic_damping_lineEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.horizontalLayout_117.addWidget(self.hydrodynamic_damping_lineEdit_3)
        self.verticalLayout_3.addLayout(self.horizontalLayout_117)
        self.gridLayout_4.addLayout(self.verticalLayout_3, 0, 0, 3, 2)
        spacerItem110 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_4.addItem(spacerItem110, 0, 2, 1, 1)
        self.tabWidget_2.addTab(self.tab_5, "")
        self.gridLayout_3.addWidget(self.tabWidget_2, 0, 2, 1, 1)
        spacerItem111 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem111, 1, 2, 1, 1)
        self.Input_tab.addTab(self.Inputs, "")
        self.Calculation = QtWidgets.QWidget()
        self.Calculation.setObjectName("Calculation")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.Calculation)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.scrollArea = QtWidgets.QScrollArea(self.Calculation)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, 0, 713, 1644))
        self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
        self.verticalLayout_14 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents_2)
        self.verticalLayout_14.setObjectName("verticalLayout_14")
        self.frame_2 = QtWidgets.QFrame(self.scrollAreaWidgetContents_2)
        self.frame_2.setMinimumSize(QtCore.QSize(0, 1600))
        self.frame_2.setStyleSheet("background-color: rgb(225, 252, 255);")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.frame_2)
        self.gridLayout_8.setObjectName("gridLayout_8")
        spacerItem112 = QtWidgets.QSpacerItem(402, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_8.addItem(spacerItem112, 1, 1, 1, 1)
        self.dockWidget = QtWidgets.QDockWidget(self.frame_2)
        self.dockWidget.setStyleSheet("background-color: rgb(242, 255, 253);")
        self.dockWidget.setFeatures(QtWidgets.QDockWidget.DockWidgetFloatable|QtWidgets.QDockWidget.DockWidgetMovable)
        self.dockWidget.setObjectName("dockWidget")
        self.dockWidgetContents_2 = QtWidgets.QWidget()
        self.dockWidgetContents_2.setObjectName("dockWidgetContents_2")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.dockWidgetContents_2)
        self.gridLayout_9.setObjectName("gridLayout_9")
        spacerItem113 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_9.addItem(spacerItem113, 1, 0, 1, 1)
        self.verticalLayout_15 = QtWidgets.QVBoxLayout()
        self.verticalLayout_15.setObjectName("verticalLayout_15")
        self.frame_2.hide()


#.........................Radio Buttons..............................................................................................
        self.radioButton_9 = QtWidgets.QRadioButton(self.dockWidgetContents_2)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.radioButton_9.setFont(font)
        self.radioButton_9.setObjectName("radioButton_9")
        self.verticalLayout_15.addWidget(self.radioButton_9)
        self.radioButton_10 = QtWidgets.QRadioButton(self.dockWidgetContents_2)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.radioButton_10.setFont(font)
        self.radioButton_10.setObjectName("radioButton_10")
        self.verticalLayout_15.addWidget(self.radioButton_10)
        self.radioButton_11 = QtWidgets.QRadioButton(self.dockWidgetContents_2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.radioButton_11.setFont(font)
        self.radioButton_11.setObjectName("radioButton_11")
        self.verticalLayout_15.addWidget(self.radioButton_11)
        self.radioButton_12 = QtWidgets.QRadioButton(self.dockWidgetContents_2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.radioButton_12.setFont(font)
        self.radioButton_12.setObjectName("radioButton_12")
        self.verticalLayout_15.addWidget(self.radioButton_12)
        self.radioButton_13 = QtWidgets.QRadioButton(self.dockWidgetContents_2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.radioButton_13.setFont(font)
        self.radioButton_13.setObjectName("radioButton_13")
        self.verticalLayout_15.addWidget(self.radioButton_13)
        self.radioButton_14 = QtWidgets.QRadioButton(self.dockWidgetContents_2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.radioButton_14.setFont(font)
        self.radioButton_14.setObjectName("radioButton_14")
        self.verticalLayout_15.addWidget(self.radioButton_14)
        self.radioButton_15 = QtWidgets.QRadioButton(self.dockWidgetContents_2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.radioButton_15.setFont(font)
        self.radioButton_15.setObjectName("radioButton_15")
        self.verticalLayout_15.addWidget(self.radioButton_15)
        self.radioButton_16 = QtWidgets.QRadioButton(self.dockWidgetContents_2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.radioButton_16.setFont(font)
        self.radioButton_16.setObjectName("radioButton_16")
        self.verticalLayout_15.addWidget(self.radioButton_16)
        spacerItem114 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_15.addItem(spacerItem114)
        self.gridLayout_9.addLayout(self.verticalLayout_15, 0, 0, 1, 1)
        self.dockWidget.setWidget(self.dockWidgetContents_2)
        self.gridLayout_8.addWidget(self.dockWidget, 0, 0, 1, 1)
        self.verticalLayout_34 = QtWidgets.QVBoxLayout()
        self.verticalLayout_34.setObjectName("verticalLayout_34")
        self.verticalLayout_35 = QtWidgets.QVBoxLayout()
        self.verticalLayout_35.setObjectName("verticalLayout_35")
        self.horizontalLayout_133 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_133.setObjectName("horizontalLayout_133")
        self.Name_51 = QtWidgets.QLabel(self.frame_2)
        self.Name_51.setObjectName("Name_51")
        self.horizontalLayout_133.addWidget(self.Name_51)
        spacerItem115 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_133.addItem(spacerItem115)
        self.symbol_51 = QtWidgets.QLabel(self.frame_2)
        self.symbol_51.setObjectName("symbol_51")
        self.horizontalLayout_133.addWidget(self.symbol_51)
        spacerItem116 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_133.addItem(spacerItem116)
        self.lineEdit_51 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_51.setObjectName("lineEdit_51")
        self.lineEdit_51.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_133.addWidget(self.lineEdit_51)
        spacerItem117 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_133.addItem(spacerItem117)
        self.unit_51 = QtWidgets.QLabel(self.frame_2)
        self.unit_51.setObjectName("unit_51")
        self.horizontalLayout_133.addWidget(self.unit_51)
        self.verticalLayout_35.addLayout(self.horizontalLayout_133)
        self.horizontalLayout_134 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_134.setObjectName("horizontalLayout_134")
        self.Name_52 = QtWidgets.QLabel(self.frame_2)
        self.Name_52.setObjectName("Name_52")
        self.horizontalLayout_134.addWidget(self.Name_52)
        spacerItem118 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_134.addItem(spacerItem118)
        self.symbol_52 = QtWidgets.QLabel(self.frame_2)
        self.symbol_52.setObjectName("symbol_52")
        self.horizontalLayout_134.addWidget(self.symbol_52)
        spacerItem119 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_134.addItem(spacerItem119)
        self.lineEdit_52 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_52.setObjectName("lineEdit_52")
        self.lineEdit_52.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_134.addWidget(self.lineEdit_52)
        spacerItem120 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_134.addItem(spacerItem120)
        self.unit_52 = QtWidgets.QLabel(self.frame_2)
        self.unit_52.setObjectName("unit_52")
        self.horizontalLayout_134.addWidget(self.unit_52)
        self.verticalLayout_35.addLayout(self.horizontalLayout_134)
        self.horizontalLayout_135 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_135.setObjectName("horizontalLayout_135")
        self.Name_53 = QtWidgets.QLabel(self.frame_2)
        self.Name_53.setObjectName("Name_53")
        self.horizontalLayout_135.addWidget(self.Name_53)
        spacerItem121 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_135.addItem(spacerItem121)
        self.symbol_53 = QtWidgets.QLabel(self.frame_2)
        self.symbol_53.setObjectName("symbol_53")
        self.horizontalLayout_135.addWidget(self.symbol_53)
        spacerItem122 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_135.addItem(spacerItem122)
        self.lineEdit_53 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_53.setObjectName("lineEdit_53")
        self.lineEdit_53.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_135.addWidget(self.lineEdit_53)
        spacerItem123 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_135.addItem(spacerItem123)
        self.unit_53 = QtWidgets.QLabel(self.frame_2)
        self.unit_53.setObjectName("unit_53")
        self.horizontalLayout_135.addWidget(self.unit_53)
        self.verticalLayout_35.addLayout(self.horizontalLayout_135)
        self.horizontalLayout_136 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_136.setObjectName("horizontalLayout_136")
        self.Name_54 = QtWidgets.QLabel(self.frame_2)
        self.Name_54.setObjectName("Name_54")
        self.horizontalLayout_136.addWidget(self.Name_54)
        spacerItem124 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_136.addItem(spacerItem124)
        self.symbol_54 = QtWidgets.QLabel(self.frame_2)
        self.symbol_54.setObjectName("symbol_54")
        self.horizontalLayout_136.addWidget(self.symbol_54)
        spacerItem125 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_136.addItem(spacerItem125)
        self.lineEdit_54 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_54.setObjectName("lineEdit_54")
        self.lineEdit_54.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_136.addWidget(self.lineEdit_54)
        spacerItem126 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_136.addItem(spacerItem126)
        self.unit_54 = QtWidgets.QLabel(self.frame_2)
        self.unit_54.setObjectName("unit_54")
        self.horizontalLayout_136.addWidget(self.unit_54)
        self.verticalLayout_35.addLayout(self.horizontalLayout_136)
        self.horizontalLayout_137 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_137.setObjectName("horizontalLayout_137")
        self.Name_55 = QtWidgets.QLabel(self.frame_2)
        self.Name_55.setObjectName("Name_55")
        self.horizontalLayout_137.addWidget(self.Name_55)
        spacerItem127 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_137.addItem(spacerItem127)
        self.symbol_55 = QtWidgets.QLabel(self.frame_2)
        self.symbol_55.setObjectName("symbol_55")
        self.horizontalLayout_137.addWidget(self.symbol_55)
        spacerItem128 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_137.addItem(spacerItem128)
        self.lineEdit_55 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_55.setObjectName("lineEdit_55")
        self.lineEdit_55.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_137.addWidget(self.lineEdit_55)
        spacerItem129 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_137.addItem(spacerItem129)
        self.unit_55 = QtWidgets.QLabel(self.frame_2)
        self.unit_55.setObjectName("unit_55")
        self.horizontalLayout_137.addWidget(self.unit_55)
        self.verticalLayout_35.addLayout(self.horizontalLayout_137)
        self.horizontalLayout_138 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_138.setObjectName("horizontalLayout_138")
        self.Name_56 = QtWidgets.QLabel(self.frame_2)
        self.Name_56.setObjectName("Name_56")
        self.horizontalLayout_138.addWidget(self.Name_56)
        spacerItem130 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_138.addItem(spacerItem130)
        self.symbol_56 = QtWidgets.QLabel(self.frame_2)
        self.symbol_56.setObjectName("symbol_56")
        self.horizontalLayout_138.addWidget(self.symbol_56)
        spacerItem131 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_138.addItem(spacerItem131)
        self.lineEdit_56 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_56.setObjectName("lineEdit_56")
        self.lineEdit_56.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_138.addWidget(self.lineEdit_56)
        spacerItem132 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_138.addItem(spacerItem132)
        self.unit_56 = QtWidgets.QLabel(self.frame_2)
        self.unit_56.setObjectName("unit_56")
        self.horizontalLayout_138.addWidget(self.unit_56)
        self.verticalLayout_35.addLayout(self.horizontalLayout_138)
        self.horizontalLayout_139 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_139.setObjectName("horizontalLayout_139")
        self.Name_57 = QtWidgets.QLabel(self.frame_2)
        self.Name_57.setObjectName("Name_57")
        self.horizontalLayout_139.addWidget(self.Name_57)
        spacerItem133 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_139.addItem(spacerItem133)
        self.symbol_57 = QtWidgets.QLabel(self.frame_2)
        self.symbol_57.setObjectName("symbol_57")
        self.horizontalLayout_139.addWidget(self.symbol_57)
        spacerItem134 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_139.addItem(spacerItem134)
        self.lineEdit_57 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_57.setObjectName("lineEdit_57")
        self.lineEdit_57.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_139.addWidget(self.lineEdit_57)
        spacerItem135 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_139.addItem(spacerItem135)
        self.unit_57 = QtWidgets.QLabel(self.frame_2)
        self.unit_57.setObjectName("unit_57")
        self.horizontalLayout_139.addWidget(self.unit_57)
        self.verticalLayout_35.addLayout(self.horizontalLayout_139)
        self.horizontalLayout_140 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_140.setObjectName("horizontalLayout_140")
        self.Name_58 = QtWidgets.QLabel(self.frame_2)
        self.Name_58.setObjectName("Name_58")
        self.horizontalLayout_140.addWidget(self.Name_58)
        spacerItem136 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_140.addItem(spacerItem136)
        self.symbol_58 = QtWidgets.QLabel(self.frame_2)
        self.symbol_58.setObjectName("symbol_58")
        self.horizontalLayout_140.addWidget(self.symbol_58)
        spacerItem137 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_140.addItem(spacerItem137)
        self.lineEdit_58 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_58.setObjectName("lineEdit_58")
        self.lineEdit_58.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_140.addWidget(self.lineEdit_58)
        spacerItem138 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_140.addItem(spacerItem138)
        self.unit_58 = QtWidgets.QLabel(self.frame_2)
        self.unit_58.setObjectName("unit_58")
        self.horizontalLayout_140.addWidget(self.unit_58)
        self.verticalLayout_35.addLayout(self.horizontalLayout_140)
        self.horizontalLayout_141 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_141.setObjectName("horizontalLayout_141")
        self.Name_59 = QtWidgets.QLabel(self.frame_2)
        self.Name_59.setObjectName("Name_59")
        self.horizontalLayout_141.addWidget(self.Name_59)
        spacerItem139 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_141.addItem(spacerItem139)
        self.symbol_59 = QtWidgets.QLabel(self.frame_2)
        self.symbol_59.setObjectName("symbol_59")
        self.horizontalLayout_141.addWidget(self.symbol_59)
        spacerItem140 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_141.addItem(spacerItem140)
        self.lineEdit_59 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_59.setObjectName("lineEdit_59")
        self.lineEdit_59.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_141.addWidget(self.lineEdit_59)
        spacerItem141 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_141.addItem(spacerItem141)
        self.unit_59 = QtWidgets.QLabel(self.frame_2)
        self.unit_59.setObjectName("unit_59")
        self.horizontalLayout_141.addWidget(self.unit_59)
        self.verticalLayout_35.addLayout(self.horizontalLayout_141)
        self.horizontalLayout_142 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_142.setObjectName("horizontalLayout_142")
        self.Name_60 = QtWidgets.QLabel(self.frame_2)
        self.Name_60.setObjectName("Name_60")
        self.horizontalLayout_142.addWidget(self.Name_60)
        spacerItem142 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_142.addItem(spacerItem142)
        self.symbol_60 = QtWidgets.QLabel(self.frame_2)
        self.symbol_60.setObjectName("symbol_60")
        self.horizontalLayout_142.addWidget(self.symbol_60)
        spacerItem143 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_142.addItem(spacerItem143)
        self.lineEdit_60 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_60.setObjectName("lineEdit_60")
        self.lineEdit_60.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_142.addWidget(self.lineEdit_60)
        spacerItem144 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_142.addItem(spacerItem144)
        self.unit_60 = QtWidgets.QLabel(self.frame_2)
        self.unit_60.setObjectName("unit_60")
        self.horizontalLayout_142.addWidget(self.unit_60)
        self.verticalLayout_35.addLayout(self.horizontalLayout_142)
        self.verticalLayout_34.addLayout(self.verticalLayout_35)
        self.verticalLayout_36 = QtWidgets.QVBoxLayout()
        self.verticalLayout_36.setObjectName("verticalLayout_36")
        self.horizontalLayout_143 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_143.setObjectName("horizontalLayout_143")
        self.Name_61 = QtWidgets.QLabel(self.frame_2)
        self.Name_61.setObjectName("Name_61")
        self.horizontalLayout_143.addWidget(self.Name_61)
        spacerItem145 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_143.addItem(spacerItem145)
        self.symbol_61 = QtWidgets.QLabel(self.frame_2)
        self.symbol_61.setObjectName("symbol_61")
        self.horizontalLayout_143.addWidget(self.symbol_61)
        spacerItem146 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_143.addItem(spacerItem146)
        self.lineEdit_61 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_61.setObjectName("lineEdit_61")
        self.lineEdit_61.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_143.addWidget(self.lineEdit_61)
        spacerItem147 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_143.addItem(spacerItem147)
        self.unit_61 = QtWidgets.QLabel(self.frame_2)
        self.unit_61.setObjectName("unit_61")
        self.horizontalLayout_143.addWidget(self.unit_61)
        self.verticalLayout_36.addLayout(self.horizontalLayout_143)
        self.horizontalLayout_144 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_144.setObjectName("horizontalLayout_144")
        self.Name_62 = QtWidgets.QLabel(self.frame_2)
        self.Name_62.setObjectName("Name_62")
        self.horizontalLayout_144.addWidget(self.Name_62)
        spacerItem148 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_144.addItem(spacerItem148)
        self.symbol_62 = QtWidgets.QLabel(self.frame_2)
        self.symbol_62.setObjectName("symbol_62")
        self.horizontalLayout_144.addWidget(self.symbol_62)
        spacerItem149 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_144.addItem(spacerItem149)
        self.lineEdit_62 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_62.setObjectName("lineEdit_62")
        self.lineEdit_62.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_144.addWidget(self.lineEdit_62)
        spacerItem150 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_144.addItem(spacerItem150)
        self.unit_62 = QtWidgets.QLabel(self.frame_2)
        self.unit_62.setObjectName("unit_62")
        self.horizontalLayout_144.addWidget(self.unit_62)
        self.verticalLayout_36.addLayout(self.horizontalLayout_144)
        self.horizontalLayout_145 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_145.setObjectName("horizontalLayout_145")
        self.Name_63 = QtWidgets.QLabel(self.frame_2)
        self.Name_63.setObjectName("Name_63")
        self.horizontalLayout_145.addWidget(self.Name_63)
        spacerItem151 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_145.addItem(spacerItem151)
        self.symbol_63 = QtWidgets.QLabel(self.frame_2)
        self.symbol_63.setObjectName("symbol_63")
        self.horizontalLayout_145.addWidget(self.symbol_63)
        spacerItem152 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_145.addItem(spacerItem152)
        self.lineEdit_63 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_63.setObjectName("lineEdit_63")
        self.lineEdit_63.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_145.addWidget(self.lineEdit_63)
        spacerItem153 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_145.addItem(spacerItem153)
        self.unit_63 = QtWidgets.QLabel(self.frame_2)
        self.unit_63.setObjectName("unit_63")
        self.horizontalLayout_145.addWidget(self.unit_63)
        self.verticalLayout_36.addLayout(self.horizontalLayout_145)
        self.horizontalLayout_146 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_146.setObjectName("horizontalLayout_146")
        self.Name_64 = QtWidgets.QLabel(self.frame_2)
        self.Name_64.setObjectName("Name_64")
        self.horizontalLayout_146.addWidget(self.Name_64)
        spacerItem154 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_146.addItem(spacerItem154)
        self.symbol_64 = QtWidgets.QLabel(self.frame_2)
        self.symbol_64.setObjectName("symbol_64")
        self.horizontalLayout_146.addWidget(self.symbol_64)
        spacerItem155 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_146.addItem(spacerItem155)
        self.lineEdit_64 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_64.setObjectName("lineEdit_64")
        self.lineEdit_64.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_146.addWidget(self.lineEdit_64)
        spacerItem156 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_146.addItem(spacerItem156)
        self.unit_64 = QtWidgets.QLabel(self.frame_2)
        self.unit_64.setObjectName("unit_64")
        self.horizontalLayout_146.addWidget(self.unit_64)
        self.verticalLayout_36.addLayout(self.horizontalLayout_146)
        self.horizontalLayout_147 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_147.setObjectName("horizontalLayout_147")
        self.Name_65 = QtWidgets.QLabel(self.frame_2)
        self.Name_65.setObjectName("Name_65")
        self.horizontalLayout_147.addWidget(self.Name_65)
        spacerItem157 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_147.addItem(spacerItem157)
        self.symbol_65 = QtWidgets.QLabel(self.frame_2)
        self.symbol_65.setObjectName("symbol_65")
        self.horizontalLayout_147.addWidget(self.symbol_65)
        spacerItem158 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_147.addItem(spacerItem158)
        self.lineEdit_65 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_65.setObjectName("lineEdit_65")
        self.lineEdit_65.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_147.addWidget(self.lineEdit_65)
        spacerItem159 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_147.addItem(spacerItem159)
        self.unit_65 = QtWidgets.QLabel(self.frame_2)
        self.unit_65.setObjectName("unit_65")
        self.horizontalLayout_147.addWidget(self.unit_65)
        self.verticalLayout_36.addLayout(self.horizontalLayout_147)
        self.horizontalLayout_148 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_148.setObjectName("horizontalLayout_148")
        self.Name_66 = QtWidgets.QLabel(self.frame_2)
        self.Name_66.setObjectName("Name_66")
        self.horizontalLayout_148.addWidget(self.Name_66)
        spacerItem160 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_148.addItem(spacerItem160)
        self.symbol_66 = QtWidgets.QLabel(self.frame_2)
        self.symbol_66.setObjectName("symbol_66")
        self.horizontalLayout_148.addWidget(self.symbol_66)
        spacerItem161 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_148.addItem(spacerItem161)
        self.lineEdit_66 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_66.setObjectName("lineEdit_66")
        self.lineEdit_66.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_148.addWidget(self.lineEdit_66)
        spacerItem162 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_148.addItem(spacerItem162)
        self.unit_66 = QtWidgets.QLabel(self.frame_2)
        self.unit_66.setObjectName("unit_66")
        self.horizontalLayout_148.addWidget(self.unit_66)
        self.verticalLayout_36.addLayout(self.horizontalLayout_148)
        self.horizontalLayout_149 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_149.setObjectName("horizontalLayout_149")
        self.Name_67 = QtWidgets.QLabel(self.frame_2)
        self.Name_67.setObjectName("Name_67")
        self.horizontalLayout_149.addWidget(self.Name_67)
        spacerItem163 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_149.addItem(spacerItem163)
        self.symbol_67 = QtWidgets.QLabel(self.frame_2)
        self.symbol_67.setObjectName("symbol_67")
        self.horizontalLayout_149.addWidget(self.symbol_67)
        spacerItem164 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_149.addItem(spacerItem164)
        self.lineEdit_67 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_67.setObjectName("lineEdit_67")
        self.lineEdit_67.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_149.addWidget(self.lineEdit_67)
        spacerItem165 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_149.addItem(spacerItem165)
        self.unit_67 = QtWidgets.QLabel(self.frame_2)
        self.unit_67.setObjectName("unit_67")
        self.horizontalLayout_149.addWidget(self.unit_67)
        self.verticalLayout_36.addLayout(self.horizontalLayout_149)
        self.horizontalLayout_150 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_150.setObjectName("horizontalLayout_150")
        self.Name_68 = QtWidgets.QLabel(self.frame_2)
        self.Name_68.setObjectName("Name_68")
        self.horizontalLayout_150.addWidget(self.Name_68)
        spacerItem166 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_150.addItem(spacerItem166)
        self.symbol_68 = QtWidgets.QLabel(self.frame_2)
        self.symbol_68.setObjectName("symbol_68")
        self.horizontalLayout_150.addWidget(self.symbol_68)
        spacerItem167 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_150.addItem(spacerItem167)
        self.lineEdit_68 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_68.setObjectName("lineEdit_68")
        self.lineEdit_68.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_150.addWidget(self.lineEdit_68)
        spacerItem168 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_150.addItem(spacerItem168)
        self.unit_68 = QtWidgets.QLabel(self.frame_2)
        self.unit_68.setObjectName("unit_68")
        self.horizontalLayout_150.addWidget(self.unit_68)
        self.verticalLayout_36.addLayout(self.horizontalLayout_150)
        self.horizontalLayout_151 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_151.setObjectName("horizontalLayout_151")
        self.Name_69 = QtWidgets.QLabel(self.frame_2)
        self.Name_69.setObjectName("Name_69")
        self.horizontalLayout_151.addWidget(self.Name_69)
        spacerItem169 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_151.addItem(spacerItem169)
        self.symbol_69 = QtWidgets.QLabel(self.frame_2)
        self.symbol_69.setObjectName("symbol_69")
        self.horizontalLayout_151.addWidget(self.symbol_69)
        spacerItem170 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_151.addItem(spacerItem170)
        self.lineEdit_69 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_69.setObjectName("lineEdit_69")
        self.lineEdit_69.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_151.addWidget(self.lineEdit_69)
        spacerItem171 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_151.addItem(spacerItem171)
        self.unit_69 = QtWidgets.QLabel(self.frame_2)
        self.unit_69.setObjectName("unit_69")
        self.horizontalLayout_151.addWidget(self.unit_69)
        self.verticalLayout_36.addLayout(self.horizontalLayout_151)
        self.horizontalLayout_152 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_152.setObjectName("horizontalLayout_152")
        self.Name_70 = QtWidgets.QLabel(self.frame_2)
        self.Name_70.setObjectName("Name_70")
        self.horizontalLayout_152.addWidget(self.Name_70)
        spacerItem172 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_152.addItem(spacerItem172)
        self.symbol_70 = QtWidgets.QLabel(self.frame_2)
        self.symbol_70.setObjectName("symbol_70")
        self.horizontalLayout_152.addWidget(self.symbol_70)
        spacerItem173 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_152.addItem(spacerItem173)
        self.lineEdit_70 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_70.setObjectName("lineEdit_70")
        self.lineEdit_70.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_152.addWidget(self.lineEdit_70)
        spacerItem174 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_152.addItem(spacerItem174)
        self.unit_70 = QtWidgets.QLabel(self.frame_2)
        self.unit_70.setObjectName("unit_70")
        self.horizontalLayout_152.addWidget(self.unit_70)
        self.verticalLayout_36.addLayout(self.horizontalLayout_152)
        self.verticalLayout_34.addLayout(self.verticalLayout_36)
        self.verticalLayout_37 = QtWidgets.QVBoxLayout()
        self.verticalLayout_37.setObjectName("verticalLayout_37")
        self.horizontalLayout_153 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_153.setObjectName("horizontalLayout_153")
        self.Name_71 = QtWidgets.QLabel(self.frame_2)
        self.Name_71.setObjectName("Name_71")
        self.horizontalLayout_153.addWidget(self.Name_71)
        spacerItem175 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_153.addItem(spacerItem175)
        self.symbol_71 = QtWidgets.QLabel(self.frame_2)
        self.symbol_71.setObjectName("symbol_71")
        self.horizontalLayout_153.addWidget(self.symbol_71)
        spacerItem176 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_153.addItem(spacerItem176)
        self.lineEdit_71 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_71.setObjectName("lineEdit_71")
        self.lineEdit_71.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_153.addWidget(self.lineEdit_71)
        spacerItem177 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_153.addItem(spacerItem177)
        self.unit_71 = QtWidgets.QLabel(self.frame_2)
        self.unit_71.setObjectName("unit_71")
        self.horizontalLayout_153.addWidget(self.unit_71)
        self.verticalLayout_37.addLayout(self.horizontalLayout_153)
        self.horizontalLayout_154 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_154.setObjectName("horizontalLayout_154")
        self.Name_72 = QtWidgets.QLabel(self.frame_2)
        self.Name_72.setObjectName("Name_72")
        self.horizontalLayout_154.addWidget(self.Name_72)
        spacerItem178 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_154.addItem(spacerItem178)
        self.symbol_72 = QtWidgets.QLabel(self.frame_2)
        self.symbol_72.setObjectName("symbol_72")
        self.horizontalLayout_154.addWidget(self.symbol_72)
        spacerItem179 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_154.addItem(spacerItem179)
        self.lineEdit_72 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_72.setObjectName("lineEdit_72")
        self.lineEdit_72.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_154.addWidget(self.lineEdit_72)
        spacerItem180 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_154.addItem(spacerItem180)
        self.unit_72 = QtWidgets.QLabel(self.frame_2)
        self.unit_72.setObjectName("unit_72")
        self.horizontalLayout_154.addWidget(self.unit_72)
        self.verticalLayout_37.addLayout(self.horizontalLayout_154)
        self.horizontalLayout_155 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_155.setObjectName("horizontalLayout_155")
        self.Name_73 = QtWidgets.QLabel(self.frame_2)
        self.Name_73.setObjectName("Name_73")
        self.horizontalLayout_155.addWidget(self.Name_73)
        spacerItem181 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_155.addItem(spacerItem181)
        self.symbol_73 = QtWidgets.QLabel(self.frame_2)
        self.symbol_73.setObjectName("symbol_73")
        self.horizontalLayout_155.addWidget(self.symbol_73)
        spacerItem182 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_155.addItem(spacerItem182)
        self.lineEdit_73 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_73.setObjectName("lineEdit_73")
        self.lineEdit_73.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_155.addWidget(self.lineEdit_73)
        spacerItem183 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_155.addItem(spacerItem183)
        self.unit_73 = QtWidgets.QLabel(self.frame_2)
        self.unit_73.setObjectName("unit_73")
        self.horizontalLayout_155.addWidget(self.unit_73)
        self.verticalLayout_37.addLayout(self.horizontalLayout_155)
        self.horizontalLayout_156 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_156.setObjectName("horizontalLayout_156")
        self.Name_74 = QtWidgets.QLabel(self.frame_2)
        self.Name_74.setObjectName("Name_74")
        self.horizontalLayout_156.addWidget(self.Name_74)
        spacerItem184 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_156.addItem(spacerItem184)
        self.symbol_74 = QtWidgets.QLabel(self.frame_2)
        self.symbol_74.setObjectName("symbol_74")
        self.horizontalLayout_156.addWidget(self.symbol_74)
        spacerItem185 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_156.addItem(spacerItem185)
        self.lineEdit_74 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_74.setObjectName("lineEdit_74")
        self.lineEdit_74.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_156.addWidget(self.lineEdit_74)
        spacerItem186 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_156.addItem(spacerItem186)
        self.unit_74 = QtWidgets.QLabel(self.frame_2)
        self.unit_74.setObjectName("unit_74")
        self.horizontalLayout_156.addWidget(self.unit_74)
        self.verticalLayout_37.addLayout(self.horizontalLayout_156)
        self.horizontalLayout_157 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_157.setObjectName("horizontalLayout_157")
        self.Name_75 = QtWidgets.QLabel(self.frame_2)
        self.Name_75.setObjectName("Name_75")
        self.horizontalLayout_157.addWidget(self.Name_75)
        spacerItem187 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_157.addItem(spacerItem187)
        self.symbol_75 = QtWidgets.QLabel(self.frame_2)
        self.symbol_75.setObjectName("symbol_75")
        self.horizontalLayout_157.addWidget(self.symbol_75)
        spacerItem188 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_157.addItem(spacerItem188)
        self.lineEdit_75 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_75.setObjectName("lineEdit_75")
        self.lineEdit_75.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_157.addWidget(self.lineEdit_75)
        spacerItem189 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_157.addItem(spacerItem189)
        self.unit_75 = QtWidgets.QLabel(self.frame_2)
        self.unit_75.setObjectName("unit_75")
        self.horizontalLayout_157.addWidget(self.unit_75)
        self.verticalLayout_37.addLayout(self.horizontalLayout_157)
        self.horizontalLayout_158 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_158.setObjectName("horizontalLayout_158")
        self.Name_76 = QtWidgets.QLabel(self.frame_2)
        self.Name_76.setObjectName("Name_76")
        self.horizontalLayout_158.addWidget(self.Name_76)
        spacerItem190 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_158.addItem(spacerItem190)
        self.symbol_76 = QtWidgets.QLabel(self.frame_2)
        self.symbol_76.setObjectName("symbol_76")
        self.horizontalLayout_158.addWidget(self.symbol_76)
        spacerItem191 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_158.addItem(spacerItem191)
        self.lineEdit_76 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_76.setObjectName("lineEdit_76")
        self.lineEdit_76.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_158.addWidget(self.lineEdit_76)
        spacerItem192 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_158.addItem(spacerItem192)
        self.unit_76 = QtWidgets.QLabel(self.frame_2)
        self.unit_76.setObjectName("unit_76")
        self.horizontalLayout_158.addWidget(self.unit_76)
        self.verticalLayout_37.addLayout(self.horizontalLayout_158)
        self.horizontalLayout_159 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_159.setObjectName("horizontalLayout_159")
        self.Name_77 = QtWidgets.QLabel(self.frame_2)
        self.Name_77.setObjectName("Name_77")
        self.horizontalLayout_159.addWidget(self.Name_77)
        spacerItem193 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_159.addItem(spacerItem193)
        self.symbol_77 = QtWidgets.QLabel(self.frame_2)
        self.symbol_77.setObjectName("symbol_77")
        self.horizontalLayout_159.addWidget(self.symbol_77)
        spacerItem194 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_159.addItem(spacerItem194)
        self.lineEdit_77 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_77.setObjectName("lineEdit_77")
        self.lineEdit_77.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_159.addWidget(self.lineEdit_77)
        spacerItem195 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_159.addItem(spacerItem195)
        self.unit_77 = QtWidgets.QLabel(self.frame_2)
        self.unit_77.setObjectName("unit_77")
        self.horizontalLayout_159.addWidget(self.unit_77)
        self.verticalLayout_37.addLayout(self.horizontalLayout_159)
        self.horizontalLayout_160 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_160.setObjectName("horizontalLayout_160")
        self.Name_78 = QtWidgets.QLabel(self.frame_2)
        self.Name_78.setObjectName("Name_78")
        self.horizontalLayout_160.addWidget(self.Name_78)
        spacerItem196 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_160.addItem(spacerItem196)
        self.symbol_78 = QtWidgets.QLabel(self.frame_2)
        self.symbol_78.setObjectName("symbol_78")
        self.horizontalLayout_160.addWidget(self.symbol_78)
        spacerItem197 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_160.addItem(spacerItem197)
        self.lineEdit_78 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_78.setObjectName("lineEdit_78")
        self.lineEdit_78.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_160.addWidget(self.lineEdit_78)
        spacerItem198 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_160.addItem(spacerItem198)
        self.unit_78 = QtWidgets.QLabel(self.frame_2)
        self.unit_78.setObjectName("unit_78")
        self.horizontalLayout_160.addWidget(self.unit_78)
        self.verticalLayout_37.addLayout(self.horizontalLayout_160)
        self.horizontalLayout_161 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_161.setObjectName("horizontalLayout_161")
        self.Name_79 = QtWidgets.QLabel(self.frame_2)
        self.Name_79.setObjectName("Name_79")
        self.horizontalLayout_161.addWidget(self.Name_79)
        spacerItem199 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_161.addItem(spacerItem199)
        self.symbol_79 = QtWidgets.QLabel(self.frame_2)
        self.symbol_79.setObjectName("symbol_79")
        self.horizontalLayout_161.addWidget(self.symbol_79)
        spacerItem200 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_161.addItem(spacerItem200)
        self.lineEdit_79 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_79.setObjectName("lineEdit_79")
        self.lineEdit_79.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_161.addWidget(self.lineEdit_79)
        spacerItem201 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_161.addItem(spacerItem201)
        self.unit_79 = QtWidgets.QLabel(self.frame_2)
        self.unit_79.setObjectName("unit_79")
        self.horizontalLayout_161.addWidget(self.unit_79)
        self.verticalLayout_37.addLayout(self.horizontalLayout_161)
        self.horizontalLayout_162 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_162.setObjectName("horizontalLayout_162")
        self.Name_80 = QtWidgets.QLabel(self.frame_2)
        self.Name_80.setObjectName("Name_80")
        self.horizontalLayout_162.addWidget(self.Name_80)
        spacerItem202 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_162.addItem(spacerItem202)
        self.symbol_80 = QtWidgets.QLabel(self.frame_2)
        self.symbol_80.setObjectName("symbol_80")
        self.horizontalLayout_162.addWidget(self.symbol_80)
        spacerItem203 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_162.addItem(spacerItem203)
        self.lineEdit_80 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_80.setObjectName("lineEdit_80")
        self.lineEdit_80.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_162.addWidget(self.lineEdit_80)
        spacerItem204 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_162.addItem(spacerItem204)
        self.unit_80 = QtWidgets.QLabel(self.frame_2)
        self.unit_80.setObjectName("unit_80")
        self.horizontalLayout_162.addWidget(self.unit_80)
        self.verticalLayout_37.addLayout(self.horizontalLayout_162)
        self.verticalLayout_34.addLayout(self.verticalLayout_37)
        self.verticalLayout_38 = QtWidgets.QVBoxLayout()
        self.verticalLayout_38.setObjectName("verticalLayout_38")
        self.horizontalLayout_163 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_163.setObjectName("horizontalLayout_163")
        self.Name_81 = QtWidgets.QLabel(self.frame_2)
        self.Name_81.setObjectName("Name_81")
        self.horizontalLayout_163.addWidget(self.Name_81)
        spacerItem205 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_163.addItem(spacerItem205)
        self.symbol_81 = QtWidgets.QLabel(self.frame_2)
        self.symbol_81.setObjectName("symbol_81")
        self.horizontalLayout_163.addWidget(self.symbol_81)
        spacerItem206 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_163.addItem(spacerItem206)
        self.lineEdit_81 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_81.setObjectName("lineEdit_81")
        self.lineEdit_81.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_163.addWidget(self.lineEdit_81)
        spacerItem207 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_163.addItem(spacerItem207)
        self.unit_81 = QtWidgets.QLabel(self.frame_2)
        self.unit_81.setObjectName("unit_81")
        self.horizontalLayout_163.addWidget(self.unit_81)
        self.verticalLayout_38.addLayout(self.horizontalLayout_163)
        self.horizontalLayout_164 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_164.setObjectName("horizontalLayout_164")
        self.Name_82 = QtWidgets.QLabel(self.frame_2)
        self.Name_82.setObjectName("Name_82")
        self.horizontalLayout_164.addWidget(self.Name_82)
        spacerItem208 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_164.addItem(spacerItem208)
        self.symbol_82 = QtWidgets.QLabel(self.frame_2)
        self.symbol_82.setObjectName("symbol_82")
        self.horizontalLayout_164.addWidget(self.symbol_82)
        spacerItem209 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_164.addItem(spacerItem209)
        self.lineEdit_82 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_82.setObjectName("lineEdit_82")
        self.lineEdit_82.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_164.addWidget(self.lineEdit_82)
        spacerItem210 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_164.addItem(spacerItem210)
        self.unit_82 = QtWidgets.QLabel(self.frame_2)
        self.unit_82.setObjectName("unit_82")
        self.horizontalLayout_164.addWidget(self.unit_82)
        self.verticalLayout_38.addLayout(self.horizontalLayout_164)
        self.horizontalLayout_165 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_165.setObjectName("horizontalLayout_165")
        self.Name_83 = QtWidgets.QLabel(self.frame_2)
        self.Name_83.setObjectName("Name_83")
        self.horizontalLayout_165.addWidget(self.Name_83)
        spacerItem211 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_165.addItem(spacerItem211)
        self.symbol_83 = QtWidgets.QLabel(self.frame_2)
        self.symbol_83.setObjectName("symbol_83")
        self.horizontalLayout_165.addWidget(self.symbol_83)
        spacerItem212 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_165.addItem(spacerItem212)
        self.lineEdit_83 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_83.setObjectName("lineEdit_83")
        self.lineEdit_83.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_165.addWidget(self.lineEdit_83)
        spacerItem213 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_165.addItem(spacerItem213)
        self.unit_83 = QtWidgets.QLabel(self.frame_2)
        self.unit_83.setObjectName("unit_83")
        self.horizontalLayout_165.addWidget(self.unit_83)
        self.verticalLayout_38.addLayout(self.horizontalLayout_165)
        self.horizontalLayout_166 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_166.setObjectName("horizontalLayout_166")
        self.Name_84 = QtWidgets.QLabel(self.frame_2)
        self.Name_84.setObjectName("Name_84")
        self.horizontalLayout_166.addWidget(self.Name_84)
        spacerItem214 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_166.addItem(spacerItem214)
        self.symbol_84 = QtWidgets.QLabel(self.frame_2)
        self.symbol_84.setObjectName("symbol_84")
        self.horizontalLayout_166.addWidget(self.symbol_84)
        spacerItem215 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_166.addItem(spacerItem215)
        self.lineEdit_84 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_84.setObjectName("lineEdit_84")
        self.lineEdit_84.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_166.addWidget(self.lineEdit_84)
        spacerItem216 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_166.addItem(spacerItem216)
        self.unit_84 = QtWidgets.QLabel(self.frame_2)
        self.unit_84.setObjectName("unit_84")
        self.horizontalLayout_166.addWidget(self.unit_84)
        self.verticalLayout_38.addLayout(self.horizontalLayout_166)
        self.horizontalLayout_167 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_167.setObjectName("horizontalLayout_167")
        self.Name_85 = QtWidgets.QLabel(self.frame_2)
        self.Name_85.setObjectName("Name_85")
        self.horizontalLayout_167.addWidget(self.Name_85)
        spacerItem217 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_167.addItem(spacerItem217)
        self.symbol_85 = QtWidgets.QLabel(self.frame_2)
        self.symbol_85.setObjectName("symbol_85")
        self.horizontalLayout_167.addWidget(self.symbol_85)
        spacerItem218 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_167.addItem(spacerItem218)
        self.lineEdit_85 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_85.setObjectName("lineEdit_85")
        self.lineEdit_85.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_167.addWidget(self.lineEdit_85)
        spacerItem219 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_167.addItem(spacerItem219)
        self.unit_85 = QtWidgets.QLabel(self.frame_2)
        self.unit_85.setObjectName("unit_85")
        self.horizontalLayout_167.addWidget(self.unit_85)
        self.verticalLayout_38.addLayout(self.horizontalLayout_167)
        self.horizontalLayout_168 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_168.setObjectName("horizontalLayout_168")
        self.Name_86 = QtWidgets.QLabel(self.frame_2)
        self.Name_86.setObjectName("Name_86")
        self.horizontalLayout_168.addWidget(self.Name_86)
        spacerItem220 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_168.addItem(spacerItem220)
        self.symbol_86 = QtWidgets.QLabel(self.frame_2)
        self.symbol_86.setObjectName("symbol_86")
        self.horizontalLayout_168.addWidget(self.symbol_86)
        spacerItem221 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_168.addItem(spacerItem221)
        self.lineEdit_86 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_86.setObjectName("lineEdit_86")
        self.lineEdit_86.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_168.addWidget(self.lineEdit_86)
        spacerItem222 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_168.addItem(spacerItem222)
        self.unit_86 = QtWidgets.QLabel(self.frame_2)
        self.unit_86.setObjectName("unit_86")
        self.horizontalLayout_168.addWidget(self.unit_86)
        self.verticalLayout_38.addLayout(self.horizontalLayout_168)
        self.horizontalLayout_169 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_169.setObjectName("horizontalLayout_169")
        self.Name_87 = QtWidgets.QLabel(self.frame_2)
        self.Name_87.setObjectName("Name_87")
        self.horizontalLayout_169.addWidget(self.Name_87)
        spacerItem223 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_169.addItem(spacerItem223)
        self.symbol_87 = QtWidgets.QLabel(self.frame_2)
        self.symbol_87.setObjectName("symbol_87")
        self.horizontalLayout_169.addWidget(self.symbol_87)
        spacerItem224 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_169.addItem(spacerItem224)
        self.lineEdit_87 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_87.setObjectName("lineEdit_87")
        self.lineEdit_87.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_169.addWidget(self.lineEdit_87)
        spacerItem225 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_169.addItem(spacerItem225)
        self.unit_87 = QtWidgets.QLabel(self.frame_2)
        self.unit_87.setObjectName("unit_87")
        self.horizontalLayout_169.addWidget(self.unit_87)
        self.verticalLayout_38.addLayout(self.horizontalLayout_169)
        self.horizontalLayout_170 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_170.setObjectName("horizontalLayout_170")
        self.Name_88 = QtWidgets.QLabel(self.frame_2)
        self.Name_88.setObjectName("Name_88")
        self.horizontalLayout_170.addWidget(self.Name_88)
        spacerItem226 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_170.addItem(spacerItem226)
        self.symbol_88 = QtWidgets.QLabel(self.frame_2)
        self.symbol_88.setObjectName("symbol_88")
        self.horizontalLayout_170.addWidget(self.symbol_88)
        spacerItem227 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_170.addItem(spacerItem227)
        self.lineEdit_88 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_88.setObjectName("lineEdit_88")
        self.lineEdit_88.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_170.addWidget(self.lineEdit_88)
        spacerItem228 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_170.addItem(spacerItem228)
        self.unit_88 = QtWidgets.QLabel(self.frame_2)
        self.unit_88.setObjectName("unit_88")
        self.horizontalLayout_170.addWidget(self.unit_88)
        self.verticalLayout_38.addLayout(self.horizontalLayout_170)
        self.horizontalLayout_171 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_171.setObjectName("horizontalLayout_171")
        self.Name_89 = QtWidgets.QLabel(self.frame_2)
        self.Name_89.setObjectName("Name_89")
        self.horizontalLayout_171.addWidget(self.Name_89)
        spacerItem229 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_171.addItem(spacerItem229)
        self.symbol_89 = QtWidgets.QLabel(self.frame_2)
        self.symbol_89.setObjectName("symbol_89")
        self.horizontalLayout_171.addWidget(self.symbol_89)
        spacerItem230 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_171.addItem(spacerItem230)
        self.lineEdit_89 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_89.setObjectName("lineEdit_89")
        self.lineEdit_89.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_171.addWidget(self.lineEdit_89)
        spacerItem231 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_171.addItem(spacerItem231)
        self.unit_89 = QtWidgets.QLabel(self.frame_2)
        self.unit_89.setObjectName("unit_89")
        self.horizontalLayout_171.addWidget(self.unit_89)
        self.verticalLayout_38.addLayout(self.horizontalLayout_171)
        self.horizontalLayout_172 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_172.setObjectName("horizontalLayout_172")
        self.Name_90 = QtWidgets.QLabel(self.frame_2)
        self.Name_90.setObjectName("Name_90")
        self.horizontalLayout_172.addWidget(self.Name_90)
        spacerItem232 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_172.addItem(spacerItem232)
        self.symbol_90 = QtWidgets.QLabel(self.frame_2)
        self.symbol_90.setObjectName("symbol_90")
        self.horizontalLayout_172.addWidget(self.symbol_90)
        spacerItem233 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_172.addItem(spacerItem233)
        self.lineEdit_90 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_90.setObjectName("lineEdit_90")
        self.lineEdit_90.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_172.addWidget(self.lineEdit_90)
        spacerItem234 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_172.addItem(spacerItem234)
        self.unit_90 = QtWidgets.QLabel(self.frame_2)
        self.unit_90.setObjectName("unit_90")
        self.horizontalLayout_172.addWidget(self.unit_90)
        self.verticalLayout_38.addLayout(self.horizontalLayout_172)
        self.verticalLayout_34.addLayout(self.verticalLayout_38)
        self.verticalLayout_39 = QtWidgets.QVBoxLayout()
        self.verticalLayout_39.setObjectName("verticalLayout_39")
        self.horizontalLayout_173 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_173.setObjectName("horizontalLayout_173")
        self.Name_91 = QtWidgets.QLabel(self.frame_2)
        self.Name_91.setObjectName("Name_91")
        self.horizontalLayout_173.addWidget(self.Name_91)
        spacerItem235 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_173.addItem(spacerItem235)
        self.symbol_91 = QtWidgets.QLabel(self.frame_2)
        self.symbol_91.setObjectName("symbol_91")
        self.horizontalLayout_173.addWidget(self.symbol_91)
        spacerItem236 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_173.addItem(spacerItem236)
        self.lineEdit_91 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_91.setObjectName("lineEdit_91")
        self.lineEdit_91.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_173.addWidget(self.lineEdit_91)
        spacerItem237 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_173.addItem(spacerItem237)
        self.unit_91 = QtWidgets.QLabel(self.frame_2)
        self.unit_91.setObjectName("unit_91")
        self.horizontalLayout_173.addWidget(self.unit_91)
        self.verticalLayout_39.addLayout(self.horizontalLayout_173)
        self.horizontalLayout_174 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_174.setObjectName("horizontalLayout_174")
        self.Name_92 = QtWidgets.QLabel(self.frame_2)
        self.Name_92.setObjectName("Name_92")
        self.horizontalLayout_174.addWidget(self.Name_92)
        spacerItem238 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_174.addItem(spacerItem238)
        self.symbol_92 = QtWidgets.QLabel(self.frame_2)
        self.symbol_92.setObjectName("symbol_92")
        self.horizontalLayout_174.addWidget(self.symbol_92)
        spacerItem239 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_174.addItem(spacerItem239)
        self.lineEdit_92 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_92.setObjectName("lineEdit_92")
        self.lineEdit_92.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_174.addWidget(self.lineEdit_92)
        spacerItem240 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_174.addItem(spacerItem240)
        self.unit_92 = QtWidgets.QLabel(self.frame_2)
        self.unit_92.setObjectName("unit_92")
        self.horizontalLayout_174.addWidget(self.unit_92)
        self.verticalLayout_39.addLayout(self.horizontalLayout_174)
        self.horizontalLayout_175 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_175.setObjectName("horizontalLayout_175")
        self.Name_93 = QtWidgets.QLabel(self.frame_2)
        self.Name_93.setObjectName("Name_93")
        self.horizontalLayout_175.addWidget(self.Name_93)
        spacerItem241 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_175.addItem(spacerItem241)
        self.symbol_93 = QtWidgets.QLabel(self.frame_2)
        self.symbol_93.setObjectName("symbol_93")
        self.horizontalLayout_175.addWidget(self.symbol_93)
        spacerItem242 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_175.addItem(spacerItem242)
        self.lineEdit_93 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_93.setObjectName("lineEdit_93")
        self.lineEdit_93.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_175.addWidget(self.lineEdit_93)
        spacerItem243 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_175.addItem(spacerItem243)
        self.unit_93 = QtWidgets.QLabel(self.frame_2)
        self.unit_93.setObjectName("unit_93")
        self.horizontalLayout_175.addWidget(self.unit_93)
        self.verticalLayout_39.addLayout(self.horizontalLayout_175)
        self.horizontalLayout_176 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_176.setObjectName("horizontalLayout_176")
        self.Name_94 = QtWidgets.QLabel(self.frame_2)
        self.Name_94.setObjectName("Name_94")
        self.horizontalLayout_176.addWidget(self.Name_94)
        spacerItem244 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_176.addItem(spacerItem244)
        self.symbol_94 = QtWidgets.QLabel(self.frame_2)
        self.symbol_94.setObjectName("symbol_94")
        self.horizontalLayout_176.addWidget(self.symbol_94)
        spacerItem245 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_176.addItem(spacerItem245)
        self.lineEdit_94 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_94.setObjectName("lineEdit_94")
        self.lineEdit_94.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_176.addWidget(self.lineEdit_94)
        spacerItem246 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_176.addItem(spacerItem246)
        self.unit_94 = QtWidgets.QLabel(self.frame_2)
        self.unit_94.setObjectName("unit_94")
        self.horizontalLayout_176.addWidget(self.unit_94)
        self.verticalLayout_39.addLayout(self.horizontalLayout_176)
        self.horizontalLayout_177 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_177.setObjectName("horizontalLayout_177")
        self.Name_95 = QtWidgets.QLabel(self.frame_2)
        self.Name_95.setObjectName("Name_95")
        self.horizontalLayout_177.addWidget(self.Name_95)
        spacerItem247 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_177.addItem(spacerItem247)
        self.symbol_95 = QtWidgets.QLabel(self.frame_2)
        self.symbol_95.setObjectName("symbol_95")
        self.horizontalLayout_177.addWidget(self.symbol_95)
        spacerItem248 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_177.addItem(spacerItem248)
        self.lineEdit_95 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_95.setObjectName("lineEdit_95")
        self.lineEdit_95.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_177.addWidget(self.lineEdit_95)
        spacerItem249 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_177.addItem(spacerItem249)
        self.unit_95 = QtWidgets.QLabel(self.frame_2)
        self.unit_95.setObjectName("unit_95")
        self.horizontalLayout_177.addWidget(self.unit_95)
        self.verticalLayout_39.addLayout(self.horizontalLayout_177)
        self.horizontalLayout_178 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_178.setObjectName("horizontalLayout_178")
        self.Name_96 = QtWidgets.QLabel(self.frame_2)
        self.Name_96.setObjectName("Name_96")
        self.horizontalLayout_178.addWidget(self.Name_96)
        spacerItem250 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_178.addItem(spacerItem250)
        self.symbol_96 = QtWidgets.QLabel(self.frame_2)
        self.symbol_96.setObjectName("symbol_96")
        self.horizontalLayout_178.addWidget(self.symbol_96)
        spacerItem251 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_178.addItem(spacerItem251)
        self.lineEdit_96 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_96.setObjectName("lineEdit_96")
        self.lineEdit_96.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_178.addWidget(self.lineEdit_96)
        spacerItem252 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_178.addItem(spacerItem252)
        self.unit_96 = QtWidgets.QLabel(self.frame_2)
        self.unit_96.setObjectName("unit_96")
        self.horizontalLayout_178.addWidget(self.unit_96)
        self.verticalLayout_39.addLayout(self.horizontalLayout_178)
        self.horizontalLayout_179 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_179.setObjectName("horizontalLayout_179")
        self.Name_97 = QtWidgets.QLabel(self.frame_2)
        self.Name_97.setObjectName("Name_97")
        self.horizontalLayout_179.addWidget(self.Name_97)
        spacerItem253 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_179.addItem(spacerItem253)
        self.symbol_97 = QtWidgets.QLabel(self.frame_2)
        self.symbol_97.setObjectName("symbol_97")
        self.horizontalLayout_179.addWidget(self.symbol_97)
        spacerItem254 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_179.addItem(spacerItem254)
        self.lineEdit_97 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_97.setObjectName("lineEdit_97")
        self.lineEdit_97.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_179.addWidget(self.lineEdit_97)
        spacerItem255 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_179.addItem(spacerItem255)
        self.unit_97 = QtWidgets.QLabel(self.frame_2)
        self.unit_97.setObjectName("unit_97")
        self.horizontalLayout_179.addWidget(self.unit_97)
        self.verticalLayout_39.addLayout(self.horizontalLayout_179)
        self.horizontalLayout_180 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_180.setObjectName("horizontalLayout_180")
        self.Name_98 = QtWidgets.QLabel(self.frame_2)
        self.Name_98.setObjectName("Name_98")
        self.horizontalLayout_180.addWidget(self.Name_98)
        spacerItem256 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_180.addItem(spacerItem256)
        self.symbol_98 = QtWidgets.QLabel(self.frame_2)
        self.symbol_98.setObjectName("symbol_98")
        self.horizontalLayout_180.addWidget(self.symbol_98)
        spacerItem257 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_180.addItem(spacerItem257)
        self.lineEdit_98 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_98.setObjectName("lineEdit_98")
        self.lineEdit_98.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_180.addWidget(self.lineEdit_98)
        spacerItem258 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_180.addItem(spacerItem258)
        self.unit_98 = QtWidgets.QLabel(self.frame_2)
        self.unit_98.setObjectName("unit_98")
        self.horizontalLayout_180.addWidget(self.unit_98)
        self.verticalLayout_39.addLayout(self.horizontalLayout_180)
        self.horizontalLayout_181 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_181.setObjectName("horizontalLayout_181")
        self.Name_99 = QtWidgets.QLabel(self.frame_2)
        self.Name_99.setObjectName("Name_99")
        self.horizontalLayout_181.addWidget(self.Name_99)
        spacerItem259 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_181.addItem(spacerItem259)
        self.symbol_99 = QtWidgets.QLabel(self.frame_2)
        self.symbol_99.setObjectName("symbol_99")
        self.horizontalLayout_181.addWidget(self.symbol_99)
        spacerItem260 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_181.addItem(spacerItem260)
        self.lineEdit_99 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_99.setObjectName("lineEdit_99")
        self.lineEdit_99.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_181.addWidget(self.lineEdit_99)
        spacerItem261 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_181.addItem(spacerItem261)
        self.unit_99 = QtWidgets.QLabel(self.frame_2)
        self.unit_99.setObjectName("unit_99")
        self.horizontalLayout_181.addWidget(self.unit_99)
        self.verticalLayout_39.addLayout(self.horizontalLayout_181)
        self.horizontalLayout_182 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_182.setObjectName("horizontalLayout_182")
        self.Name_100 = QtWidgets.QLabel(self.frame_2)
        self.Name_100.setObjectName("Name_100")
        self.horizontalLayout_182.addWidget(self.Name_100)
        spacerItem262 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_182.addItem(spacerItem262)
        self.symbol_100 = QtWidgets.QLabel(self.frame_2)
        self.symbol_100.setObjectName("symbol_100")
        self.horizontalLayout_182.addWidget(self.symbol_100)
        spacerItem263 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_182.addItem(spacerItem263)
        self.lineEdit_100 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_100.setObjectName("lineEdit_100")
        self.lineEdit_100.setStyleSheet(("background-color: rgb(255, 255, 255);"))
        self.horizontalLayout_182.addWidget(self.lineEdit_100)
        spacerItem264 = QtWidgets.QSpacerItem(21, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_182.addItem(spacerItem264)
        self.unit_100 = QtWidgets.QLabel(self.frame_2)
        self.unit_100.setObjectName("unit_100")
        self.horizontalLayout_182.addWidget(self.unit_100)
        self.verticalLayout_39.addLayout(self.horizontalLayout_182)
        self.verticalLayout_34.addLayout(self.verticalLayout_39)
        self.gridLayout_8.addLayout(self.verticalLayout_34, 0, 1, 1, 1)
        spacerItem265 = QtWidgets.QSpacerItem(20, 1548, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_8.addItem(spacerItem265, 0, 2, 1, 1)
        self.verticalLayout_14.addWidget(self.frame_2)
        spacerItem266 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.verticalLayout_14.addItem(spacerItem266)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents_2)
        self.gridLayout_10.addWidget(self.scrollArea, 0, 1, 1, 1)
        spacerItem267 = QtWidgets.QSpacerItem(20, 611, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_10.addItem(spacerItem267, 0, 2, 1, 1)
        spacerItem268 = QtWidgets.QSpacerItem(720, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_10.addItem(spacerItem268, 1, 1, 1, 1)
        self.Input_tab.addTab(self.Calculation, "")
        self.gridLayout.addWidget(self.Input_tab, 0, 1, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 820, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuResult = QtWidgets.QMenu(self.menubar)
        self.menuResult.setObjectName("menuResult")
        self.menuPrint = QtWidgets.QMenu(self.menubar)
        self.menuPrint.setObjectName("menuPrint")
        self.menuHelp_2 = QtWidgets.QMenu(self.menubar)
        self.menuHelp_2.setObjectName("menuHelp_2")
        self.menuAbout_Software = QtWidgets.QMenu(self.menubar)
        self.menuAbout_Software.setObjectName("menuAbout_Software")
        self.menuRun = QtWidgets.QMenu(self.menubar)
        self.menuRun.setObjectName("menuRun")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionNew = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("D:/Free Span New Inputs/assets/new.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNew.setIcon(icon1)
        self.actionNew.setObjectName("actionNew")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("D:/Free Span New Inputs/assets/open.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen.setIcon(icon2)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave_As = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("D:/Free Span New Inputs/assets/save_as.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave_As.setIcon(icon3)
        self.actionSave_As.setObjectName("actionSave_As")
        self.actionExit = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("D:/Free Span New Inputs/assets/close.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExit.setIcon(icon4)
        self.actionExit.setObjectName("actionExit")
        self.actionMaximize = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("D:/Free Span New Inputs/assets/maximise.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMaximize.setIcon(icon5)
        self.actionMaximize.setObjectName("actionMaximize")
        self.actionMinimize = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("D:/Free Span New Inputs/assets/minimise.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMinimize.setIcon(icon6)
        self.actionMinimize.setObjectName("actionMinimize")
        self.actionPrint = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("D:/Free Span New Inputs/assets/print.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPrint.setIcon(icon7)
        self.actionPrint.setObjectName("actionPrint")
        self.actionHelp = QtWidgets.QAction(MainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("D:/Free Span New Inputs/assets/help.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionHelp.setIcon(icon8)
        self.actionHelp.setObjectName("actionHelp")
        self.actionAbout_Software = QtWidgets.QAction(MainWindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("D:/Free Span New Inputs/assets/about.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAbout_Software.setIcon(icon9)
        self.actionAbout_Software.setObjectName("actionAbout_Software")
        self.actionCut = QtWidgets.QAction(MainWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("D:/Free Span New Inputs/assets/cut.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCut.setIcon(icon10)
        self.actionCut.setObjectName("actionCut")
        self.actionCopy = QtWidgets.QAction(MainWindow)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("D:/Free Span New Inputs/assets/copy.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCopy.setIcon(icon11)
        self.actionCopy.setObjectName("actionCopy")
        self.actionPaste = QtWidgets.QAction(MainWindow)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap("D:/Free Span New Inputs/assets/paste.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPaste.setIcon(icon12)
        self.actionPaste.setObjectName("actionPaste")
        self.actionWhat_s_New = QtWidgets.QAction(MainWindow)
        self.actionWhat_s_New.setIcon(icon8)
        self.actionWhat_s_New.setObjectName("actionWhat_s_New")
        self.actionKeyboard = QtWidgets.QAction(MainWindow)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap("D:/Free Span New Inputs/assets/keyboard.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionKeyboard.setIcon(icon13)
        self.actionKeyboard.setObjectName("actionKeyboard")
        self.actionDocumentation = QtWidgets.QAction(MainWindow)
        self.actionDocumentation.setIcon(icon9)
        self.actionDocumentation.setObjectName("actionDocumentation")
        self.actionPrint_Preview = QtWidgets.QAction(MainWindow)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap("D:/Free Span New Inputs/assets/print_dis.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPrint_Preview.setIcon(icon14)
        self.actionPrint_Preview.setObjectName("actionPrint_Preview")
        self.actionPrint_2 = QtWidgets.QAction(MainWindow)
        self.actionPrint_2.setIcon(icon7)
        self.actionPrint_2.setObjectName("actionPrint_2")
        self.actionRun_Debug = QtWidgets.QAction(MainWindow)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap("D:/Free Span New Inputs/assets/bug_reporting.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRun_Debug.setIcon(icon15)
        self.actionRun_Debug.setObjectName("actionRun_Debug")
        self.actionSummary = QtWidgets.QAction(MainWindow)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap("D:/Free Span New Inputs/assets/Summary.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSummary.setIcon(icon16)
        self.actionSummary.setObjectName("actionSummary")
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionSave_As)
        self.menuFile.addAction(self.actionExit)
        self.menuView.addAction(self.actionMaximize)
        self.menuView.addAction(self.actionMinimize)
        self.menuEdit.addAction(self.actionCut)
        self.menuEdit.addAction(self.actionCopy)
        self.menuEdit.addAction(self.actionPaste)
        self.menuResult.addAction(self.actionSummary)
        self.menuPrint.addAction(self.actionPrint_Preview)
        self.menuPrint.addAction(self.actionPrint_2)
        self.menuHelp_2.addAction(self.actionWhat_s_New)
        self.menuHelp_2.addAction(self.actionKeyboard)
        self.menuHelp_2.addAction(self.actionDocumentation)
        self.menuRun.addAction(self.actionRun_Debug)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuRun.menuAction())
        self.menubar.addAction(self.menuResult.menuAction())
        self.menubar.addAction(self.menuPrint.menuAction())
        self.menubar.addAction(self.menuHelp_2.menuAction())
        self.menubar.addAction(self.menuAbout_Software.menuAction())

        self.retranslateUi(MainWindow)
        self.Input_tab.setCurrentIndex(0)
        self.tabWidget_2.setCurrentIndex(0)
        self.actionOpen.triggered.connect(self.open) # type: ignore
        self.actionSave_As.triggered.connect(self.save)
        self.actionMaximize.triggered.connect(MainWindow.showMaximized) # type: ignore
        self.actionExit.triggered.connect(MainWindow.close) # type: ignore
        self.actionMinimize.triggered.connect(MainWindow.showMinimized) # type: ignore
        self.actionRun_Debug.triggered.connect(self.calculate)
        # self.actionPrint_2.triggered.connect(self.print_this)
        self.actionSummary.triggered.connect(self.openWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.radioButton_9.clicked.connect(self.general_calculation)
        self.radioButton_10.clicked.connect(self.viv_avoidance_criteria_calculation)
        self.radioButton_11.clicked.connect(self.screening_fatigue_criteria_calculation)
        self.radioButton_12.clicked.connect(self.viv_inline_spanlength_calculation)
        self.radioButton_13.clicked.connect(self.viv_crossflow_spanlength_calculation)
        self.radioButton_14.clicked.connect(self.ultimate_limit_state_crossflow_spanlength_calculation)
        self.radioButton_15.clicked.connect(self.ultimate_limit_state_inline_spanlength_calculation)
        self.radioButton_16.clicked.connect(self.summary_calculation)
        # self.actionPrint.triggered.connect(self.print_this)
        self.actionPrint_Preview.triggered.connect(self.print)

        self.frame = QGroupBox(self.centralwidget)
        self.frame.setMinimumSize(QtCore.QSize(70, 50))
        self.frame.setMaximumSize(QtCore.QSize(70, 50))
        self.frame.move(140,40)
        self.frame.setObjectName("frame")
        self.frame.hide()

        self.frame_VL = QtWidgets.QVBoxLayout(self.frame)
        self.frame_VL.setObjectName("frame_VL")

        self.frame_info = QGroupBox(self.centralwidget)
        self.frame_info.setMinimumSize(QtCore.QSize(70, 50))
        self.frame_info.setMaximumSize(QtCore.QSize(70, 50))
        self.frame_info.move(140,40)
        self.frame_info.setObjectName("frame")
        self.frame_info.hide()

        self.frame_VL_info = QtWidgets.QVBoxLayout(self.frame)
        self.frame_VL_info.setObjectName("frame_VL_info")

        self.frame_cal = QGroupBox(self.centralwidget)
        self.frame_cal.setMinimumSize(QtCore.QSize(70, 50))
        self.frame_cal.setMaximumSize(QtCore.QSize(70, 50))
        self.frame_cal.move(140,40)
        self.frame_cal.setObjectName("frame_cal")
        self.frame_cal.hide()

        self.frame_cal_VL = QtWidgets.QVBoxLayout(self.frame_cal)
        self.frame_cal_VL.setObjectName("frame_cal_VL")



        # ______________________Functions__________________________
        self.comboBox_UsTn_by_Hs_100.activated.connect(self.select_UsTn_by_Hs_100)
        self.comboBox_UsTn_by_Hs_10.activated.connect(self.select_UsTn_by_Hs_10)
        self.comboBox_UsTn_by_Hs_1y.activated.connect(self.select_UsTn_by_Hs_1)

        self.comboBox_Tu_by_Tp_100.activated.connect(self.select_Tu_by_Tp_100)
        self.comboBox_Tu_by_Tp_10.activated.connect(self.select_Tu_by_Tp_10)
        self.comboBox_Tu_by_Tp_1y.activated.connect(self.select_Tu_by_Tp_1y)

        self.pushButton_cal_1y.clicked.connect(self.calculate_Tn)
        # self.submitbutton.clicked.connect(self.calculate)


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Free Span Analysis"))
        self.operation_temperature_2.setText(_translate("MainWindow", "Operation Temperature - [Top] (°C)                                 "))
        self.effective_residuel_lay_tension_2.setText(_translate("MainWindow", "Effective Residuel Lay Tension - [Heff] (N)                        "))
        self.effective_axial_force_release_2.setText(_translate("MainWindow", "Effective Axial Force Release - [Seffmax]  (%)                        "))
        self.temperature_expension_coefficient_2.setText(_translate("MainWindow", "Temperature Expension coefficient  - [αe]  (°C^-1)         "))
        self.poisson_ratio_2.setText(_translate("MainWindow", "Poisson Ratio - [v]                                                          "))
        self.smys_2.setText(_translate("MainWindow", "SMYS         (Pa)                                                      "))
        self.internal_linear_density_2.setText(_translate("MainWindow", "Internal Linear Density -  [ρil]  (kg per meter cube)         "))
        self.corrosion_protection_density_2.setText(_translate("MainWindow", "Corrosion Protection Density -  [ρce] (kg per meter cube)"))
        self.content_density_2.setText(_translate("MainWindow", "Content Density -  [ρcon] (kg per meter cube)                    "))
        self.concrete_density_2.setText(_translate("MainWindow", "Concrete Density  - [ρcc] (kg per meter cube)                  "))
        self.internal_pressure_2.setText(_translate("MainWindow", "Internal pressure- [Pi]  (Pa)                                 "))
        self.pipe_outer_diameter_2.setText(_translate("MainWindow", "Pipe Outer Diameter - [OD] (mm)                           "))
        self.pipe_wall_thickness_2.setText(_translate("MainWindow", "Pipe wall thickness - [tp] (mm)                              "))
        self.pipe_density_2.setText(_translate("MainWindow", "Pipe density - [ ρp]  (kg per meter cube)                 "))
        self.pipe_young_modulus_2.setText(_translate("MainWindow", "Pipe young modulus - [E] (Pa)                             "))
        self.internal_linear_thickness_2.setText(_translate("MainWindow", "Internal linear Thickness -[ til] (mm)                     "))
        self.corrosion_thickness_2.setText(_translate("MainWindow", "Corrosion thickness - [tce] (mm)                             "))
        self.concrete_thickness_2.setText(_translate("MainWindow", "Concrete Thickness -[ tcc]   (mm)                            "))
        self.marine_growth_thickness_2.setText(_translate("MainWindow", "Marine Growth Thickness - [tmg]  (mm)                   "))
        self.water_density_2.setText(_translate("MainWindow", "Water Density - [ ρw] (kg per meter cube)             "))
        self.marine_growth_density_2.setText(_translate("MainWindow", "Marine Growth Density -  [ρmg] (kg per meter cube)"))
        self.gap_under_pipeline_2.setText(_translate("MainWindow", "Gap under Pipeline - [e] (mm)                              "))
        self.ambient_temperature_2.setText(_translate("MainWindow", "Ambient Temperature - [Tamb] (°C)                          "))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_3), _translate("MainWindow", "Flowline Properties"))
        self.freespanlength.setText(_translate("MainWindow", "Free Span Length - [L] (m)         "))
        self.wave_depth.setText(_translate("MainWindow", "Water Depth - [WD] (m)"))
        self.trench_depth.setText(_translate("MainWindow", "Trench Depth - [d] (mm)"))
        self.label.setText(_translate("MainWindow", "100 Year Return Period"))
        self.significant_Wave_height.setText(_translate("MainWindow", "Significant Wave Height - [Hs-100] (m)   "))
        self.wave_period.setText(_translate("MainWindow", "Wave Period - [Tw-100] (s)                     "))
        self.peak_period.setText(_translate("MainWindow", "Peak Period - [Tp-100] (s)                      "))
        self.Tn_Tp.setText(_translate("MainWindow", "Tn/Tp                                                      "))
        self.wave_direction.setText(_translate("MainWindow", "Wave Direction - [Dir-100] (deg)                         "))
        self.current_velocity.setText(_translate("MainWindow", "Current Velocity - [Cv-100] (m/s)                        "))
        self.current_direction.setText(_translate("MainWindow", "Current Direction - [C.Dir-100] (deg)                      "))
        self.label_4.setText(_translate("MainWindow", "Range UsTn/Hs"))
        self.label_5.setText(_translate("MainWindow", "Range Tu/Tp    "))
        self.label_2.setText(_translate("MainWindow", "10 Year Return Period"))
        self.label_3.setText(_translate("MainWindow", "1 Year Return Period"))
        self.significant_Wave_height_2.setText(_translate("MainWindow", "Significant Wave Height - [Hs-10]  (m )"))
        self.wave_period_2.setText(_translate("MainWindow", "Wave Period  - [Tw-10] (s)                   "))
        self.peak_period_2.setText(_translate("MainWindow", "Peak Period - [Tp-10]  (s)                     "))
        self.Tn_Tp_2.setText(_translate("MainWindow", "Tn/Tp                                                    "))
        self.wave_direction_2.setText(_translate("MainWindow", "Wave Direction - [Dir-10]  (deg)                          "))
        self.current_velocity_2.setText(_translate("MainWindow", "Current Velocity  - [Cv-10] (m/s)                         "))
        self.current_direction_2.setText(_translate("MainWindow", "Current Direction  - [C.Dir-10] (deg)                       "))
        self.label_6.setText(_translate("MainWindow", "Range UsTn/Hs  "))
        self.label_7.setText(_translate("MainWindow", "Range Tu/Tp      "))
        self.significant_Wave_height_3.setText(_translate("MainWindow", "Significant Wave Height  - [Hs-1] (m)"))
        self.wave_period_3.setText(_translate("MainWindow", "Wave Period  - [Tw-1]  (s)                 "))
        self.peak_period_3.setText(_translate("MainWindow", "Peak Period  - [Tp-1] (s)                    "))
        self.Tn_Tp_3.setText(_translate("MainWindow", "Tn/Tp                                                 "))
        self.wave_direction_3.setText(_translate("MainWindow", "Wave Direction - [Dir-1]   (deg)                          "))
        self.current_velocity_3.setText(_translate("MainWindow", "Current Velocity - [Cv-1]   (m/s)                        "))
        self.current_direction_3.setText(_translate("MainWindow", "Current Direction - [C.Dir-1]   (deg)                       "))
        self.label_8.setText(_translate("MainWindow", "Range UsTn/Hs  "))
        self.label_9.setText(_translate("MainWindow", "Range Tu/Tp      "))
        self.pushButton_cal_1y.setText(_translate("MainWindow", "Submit"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_4), _translate("MainWindow", "Environmental Data"))
        self.boundary_condition_fixed_fixed_2.setText(_translate("MainWindow", "Boundary Condition (Fixed-Fixed)"))
        self.usage_factor_for_equivalent_stress_check_7.setText(_translate("MainWindow", "Boundary Condition C1                          "))
        self.usage_factor_for_equivalent_stress_check_8.setText(_translate("MainWindow", "Boundary Condition C2                           "))
        self.usage_factor_for_equivalent_stress_check_9.setText(_translate("MainWindow", "Boundary Condition C3                           "))
        self.usage_factor_for_equivalent_stress_check_10.setText(_translate("MainWindow", "Boundary Condition C4                           "))
        self.usage_factor_for_equivalent_stress_check_11.setText(_translate("MainWindow", "Boundary Condition C5                           "))
        self.usage_factor_for_equivalent_stress_check_12.setText(_translate("MainWindow", "Boundary Condition C6                           "))
        # self.submitbutton.setText(_translate("MainWindow", "SUBMIT"))
        self.inline_static_deflection.setText(_translate("MainWindow", "Inline Static Deflection - [δ]                                   "))
        self.pressure_load_effect_factor.setText(_translate("MainWindow", "Pressure Load Effect Factor - [ γp]                       "))
        self.usage_factor_for_equivalent_stress_check.setText(_translate("MainWindow", "Usage Factor for Equivalent Stress Check - [η]    "))
        self.usage_factor_for_equivalent_stress_check_2.setText(_translate("MainWindow", "Reduction Factor (RD)                                           "))
        self.usage_factor_for_equivalent_stress_check_3.setText(_translate("MainWindow", "Reduction Function (RN)                                        "))
        self.usage_factor_for_equivalent_stress_check_4.setText(_translate("MainWindow", "Sea Bottom Roughness (Zo)                                  "))
        self.usage_factor_for_equivalent_stress_check_5.setText(_translate("MainWindow", "Reference Height (Zr)                                            "))
        self.usage_factor_for_equivalent_stress_check_6.setText(_translate("MainWindow", "Height Above Seabed (Z)                                       "))
        self.safety_factor_on_Inline_frequency.setText(_translate("MainWindow", "Safety Factor on In- Line Frequency  - [γf,IL]        "))
        self.safety_factor_on_crossflow_frequency.setText(_translate("MainWindow", "Safety Factor on Crossflow Frequency  - [γf,CF]   "))
        self.safety_factor_on_stress_range.setText(_translate("MainWindow", "Safety Factor on Stress Range  - [γs]                     "))
        self.safety_factor_on_natural_frequency.setText(_translate("MainWindow", "Safety Factor on Natural Frequency  - [γf]             "))
        self.safety_on_damping.setText(_translate("MainWindow", "Safety  on Damping  - [γkl]                                      "))
        self.safety_factor_on_onset_of_VrIL.setText(_translate("MainWindow", "Safety Factor on Onset of Vr(IL)  - [γon,IL]           "))
        self.safety_factor_on_onset_of_VrCF.setText(_translate("MainWindow", "Safety Factor on Onset of Vr(CF)  - [γon,CF]         "))
        self.structural_damping_2.setText(_translate("MainWindow", "Structural Damping - [ζstr]                                       "))
        self.soil_damping_2.setText(_translate("MainWindow", "Soil Damping - [ζsoil]                                                "))
        self.hydrodynamic_damping_2.setText(_translate("MainWindow", "Hydrodynamic Damping - [ζh]                                  "))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_5), _translate("MainWindow", "Additional Input Data (DNV RP F105 and F101)"))
        self.Input_tab.setTabText(self.Input_tab.indexOf(self.Inputs), _translate("MainWindow", " Inputs "))
        self.dockWidget.setStatusTip(_translate("MainWindow", "Selection Dock"))
        self.radioButton_9.setText(_translate("MainWindow", "General Calculation"))
        self.radioButton_10.setText(_translate("MainWindow", "VIV Avoidance Criteria"))
        self.radioButton_11.setText(_translate("MainWindow", "Screening Fatigue Criteria"))
        self.radioButton_12.setText(_translate("MainWindow", "VIV Inline Span Length"))
        self.radioButton_13.setText(_translate("MainWindow", "VIV Cross Flow Span Length"))
        self.radioButton_14.setText(_translate("MainWindow", "Ultimate Limit State Cross Flow Span Length"))
        self.radioButton_15.setText(_translate("MainWindow", "Ultimate Limit State Inline Flow Span Length"))
        self.radioButton_16.setText(_translate("MainWindow", "Summary"))


#.......................calculation tab.........................................................................


        self.Name_51.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_51.setText(_translate("MainWindow", "α"))
        self.unit_51.setText(_translate("MainWindow", "apple"))
        self.Name_52.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_52.setText(_translate("MainWindow", "α"))
        self.unit_52.setText(_translate("MainWindow", "apple"))
        self.Name_53.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_53.setText(_translate("MainWindow", "α"))
        self.unit_53.setText(_translate("MainWindow", "apple"))
        self.Name_54.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_54.setText(_translate("MainWindow", "α"))
        self.unit_54.setText(_translate("MainWindow", "apple"))
        self.Name_55.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_55.setText(_translate("MainWindow", "α"))
        self.unit_55.setText(_translate("MainWindow", "apple"))
        self.Name_56.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_56.setText(_translate("MainWindow", "α"))
        self.unit_56.setText(_translate("MainWindow", "apple"))
        self.Name_57.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_57.setText(_translate("MainWindow", "α"))
        self.unit_57.setText(_translate("MainWindow", "apple"))
        self.Name_58.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_58.setText(_translate("MainWindow", "α"))
        self.unit_58.setText(_translate("MainWindow", "apple"))
        self.Name_59.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_59.setText(_translate("MainWindow", "α"))
        self.unit_59.setText(_translate("MainWindow", "apple"))
        self.Name_60.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_60.setText(_translate("MainWindow", "α"))
        self.unit_60.setText(_translate("MainWindow", "apple"))
        self.Name_61.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_61.setText(_translate("MainWindow", "α"))
        self.unit_61.setText(_translate("MainWindow", "apple"))
        self.Name_62.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_62.setText(_translate("MainWindow", "α"))
        self.unit_62.setText(_translate("MainWindow", "apple"))
        self.Name_63.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_63.setText(_translate("MainWindow", "α"))
        self.unit_63.setText(_translate("MainWindow", "apple"))
        self.Name_64.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_64.setText(_translate("MainWindow", "α"))
        self.unit_64.setText(_translate("MainWindow", "apple"))
        self.Name_65.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_65.setText(_translate("MainWindow", "α"))
        self.unit_65.setText(_translate("MainWindow", "apple"))
        self.Name_66.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_66.setText(_translate("MainWindow", "α"))
        self.unit_66.setText(_translate("MainWindow", "apple"))
        self.Name_67.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_67.setText(_translate("MainWindow", "α"))
        self.unit_67.setText(_translate("MainWindow", "apple"))
        self.Name_68.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_68.setText(_translate("MainWindow", "α"))
        self.unit_68.setText(_translate("MainWindow", "apple"))
        self.Name_69.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_69.setText(_translate("MainWindow", "α"))
        self.unit_69.setText(_translate("MainWindow", "apple"))
        self.Name_70.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_70.setText(_translate("MainWindow", "α"))
        self.unit_70.setText(_translate("MainWindow", "apple"))
        self.Name_71.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_71.setText(_translate("MainWindow", "α"))
        self.unit_71.setText(_translate("MainWindow", "apple"))
        self.Name_72.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_72.setText(_translate("MainWindow", "α"))
        self.unit_72.setText(_translate("MainWindow", "apple"))
        self.Name_73.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_73.setText(_translate("MainWindow", "α"))
        self.unit_73.setText(_translate("MainWindow", "apple"))
        self.Name_74.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_74.setText(_translate("MainWindow", "α"))
        self.unit_74.setText(_translate("MainWindow", "apple"))
        self.Name_75.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_75.setText(_translate("MainWindow", "α"))
        self.unit_75.setText(_translate("MainWindow", "apple"))
        self.Name_76.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_76.setText(_translate("MainWindow", "α"))
        self.unit_76.setText(_translate("MainWindow", "apple"))
        self.Name_77.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_77.setText(_translate("MainWindow", "α"))
        self.unit_77.setText(_translate("MainWindow", "apple"))
        self.Name_78.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_78.setText(_translate("MainWindow", "α"))
        self.unit_78.setText(_translate("MainWindow", "apple"))
        self.Name_79.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_79.setText(_translate("MainWindow", "α"))
        self.unit_79.setText(_translate("MainWindow", "apple"))
        self.Name_80.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_80.setText(_translate("MainWindow", "α"))
        self.unit_80.setText(_translate("MainWindow", "apple"))
        self.Name_81.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_81.setText(_translate("MainWindow", "α"))
        self.unit_81.setText(_translate("MainWindow", "apple"))
        self.Name_82.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_82.setText(_translate("MainWindow", "α"))
        self.unit_82.setText(_translate("MainWindow", "apple"))
        self.Name_83.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_83.setText(_translate("MainWindow", "α"))
        self.unit_83.setText(_translate("MainWindow", "apple"))
        self.Name_84.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_84.setText(_translate("MainWindow", "α"))
        self.unit_84.setText(_translate("MainWindow", "apple"))
        self.Name_85.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_85.setText(_translate("MainWindow", "α"))
        self.unit_85.setText(_translate("MainWindow", "apple"))
        self.Name_86.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_86.setText(_translate("MainWindow", "α"))
        self.unit_86.setText(_translate("MainWindow", "apple"))
        self.Name_87.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_87.setText(_translate("MainWindow", "α"))
        self.unit_87.setText(_translate("MainWindow", "apple"))
        self.Name_88.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_88.setText(_translate("MainWindow", "α"))
        self.unit_88.setText(_translate("MainWindow", "apple"))
        self.Name_89.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_89.setText(_translate("MainWindow", "α"))
        self.unit_89.setText(_translate("MainWindow", "apple"))
        self.Name_90.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_90.setText(_translate("MainWindow", "α"))
        self.unit_90.setText(_translate("MainWindow", "apple"))
        self.Name_91.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_91.setText(_translate("MainWindow", "α"))
        self.unit_91.setText(_translate("MainWindow", "apple"))
        self.Name_92.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_92.setText(_translate("MainWindow", "α"))
        self.unit_92.setText(_translate("MainWindow", "apple"))
        self.Name_93.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_93.setText(_translate("MainWindow", "α"))
        self.unit_93.setText(_translate("MainWindow", "apple"))
        self.Name_94.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_94.setText(_translate("MainWindow", "α"))
        self.unit_94.setText(_translate("MainWindow", "apple"))
        self.Name_95.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_95.setText(_translate("MainWindow", "α"))
        self.unit_95.setText(_translate("MainWindow", "apple"))
        self.Name_96.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_96.setText(_translate("MainWindow", "α"))
        self.unit_96.setText(_translate("MainWindow", "apple"))
        self.Name_97.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_97.setText(_translate("MainWindow", "α"))
        self.unit_97.setText(_translate("MainWindow", "apple"))
        self.Name_98.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_98.setText(_translate("MainWindow", "α"))
        self.unit_98.setText(_translate("MainWindow", "apple"))
        self.Name_99.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_99.setText(_translate("MainWindow", "α"))
        self.unit_99.setText(_translate("MainWindow", "apple"))
        self.Name_100.setText(_translate("MainWindow", "Current Flow Velocity Ratio Sig. Wave (2.4.3) "))
        self.symbol_100.setText(_translate("MainWindow", "α"))
        self.unit_100.setText(_translate("MainWindow", "apple"))
        self.Input_tab.setTabText(self.Input_tab.indexOf(self.Calculation), _translate("MainWindow", " "))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuResult.setTitle(_translate("MainWindow", "Result"))
        self.menuPrint.setTitle(_translate("MainWindow", "Print"))
        self.menuHelp_2.setTitle(_translate("MainWindow", "Help"))
        self.menuAbout_Software.setTitle(_translate("MainWindow", "About Software"))
        self.menuRun.setTitle(_translate("MainWindow", "Run"))
        self.actionNew.setText(_translate("MainWindow", "New"))
        self.actionNew.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSave_As.setText(_translate("MainWindow", "Save As"))
        self.actionSave_As.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionExit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionMaximize.setText(_translate("MainWindow", "Maximize"))
        self.actionMaximize.setShortcut(_translate("MainWindow", "Shift+M"))
        self.actionMinimize.setText(_translate("MainWindow", "Minimize"))
        self.actionMinimize.setShortcut(_translate("MainWindow", "Shift+N"))
        self.actionPrint.setText(_translate("MainWindow", "Print"))
        self.actionPrint.setShortcut(_translate("MainWindow", "Ctrl+P"))
        self.actionHelp.setText(_translate("MainWindow", "Help"))
        self.actionHelp.setShortcut(_translate("MainWindow", "F1"))
        self.actionAbout_Software.setText(_translate("MainWindow", "About Software"))
        self.actionAbout_Software.setShortcut(_translate("MainWindow", "F2"))
        self.actionCut.setText(_translate("MainWindow", "Cut"))
        self.actionCut.setShortcut(_translate("MainWindow", "Ctrl+X"))
        self.actionCopy.setText(_translate("MainWindow", "Copy"))
        self.actionCopy.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.actionPaste.setText(_translate("MainWindow", "Paste"))
        self.actionPaste.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.actionWhat_s_New.setText(_translate("MainWindow", "What\'s New"))
        self.actionKeyboard.setText(_translate("MainWindow", "Keyboard Shortcut"))
        self.actionDocumentation.setText(_translate("MainWindow", "Documentation"))
        self.actionPrint_Preview.setText(_translate("MainWindow", "Print Preview"))
        self.actionPrint_Preview.setShortcut(_translate("MainWindow", "Ctrl+U"))
        self.actionPrint_2.setText(_translate("MainWindow", "Print"))
        self.actionPrint_2.setShortcut(_translate("MainWindow", "Ctrl+P"))
        self.actionRun_Debug.setText(_translate("MainWindow", "  Run  "))
        self.actionRun_Debug.setShortcut(_translate("MainWindow", "Shift+F10"))
        self.actionSummary.setText(_translate("MainWindow", "Summary"))

        self.Name_51.hide()
        self.symbol_51.hide()
        self.lineEdit_51.hide()
        self.unit_51.hide()
        self.Name_52.hide()
        self.symbol_52.hide()
        self.lineEdit_52.hide()
        self.unit_52.hide()
        self.Name_53.hide()
        self.symbol_53.hide()
        self.lineEdit_53.hide()
        self.unit_53.hide()
        self.Name_54.hide()
        self.symbol_54.hide()
        self.lineEdit_54.hide()
        self.unit_54.hide()
        self.Name_55.hide()
        self.symbol_55.hide()
        self.lineEdit_55.hide()
        self.unit_55.hide()
        self.Name_56.hide()
        self.symbol_56.hide()
        self.lineEdit_56.hide()
        self.unit_56.hide()
        self.Name_57.hide()
        self.symbol_57.hide()
        self.lineEdit_57.hide()
        self.unit_57.hide()
        self.Name_58.hide()
        self.symbol_58.hide()
        self.lineEdit_58.hide()
        self.unit_58.hide()
        self.Name_59.hide()
        self.symbol_59.hide()
        self.lineEdit_59.hide()
        self.unit_59.hide()
        self.Name_60.hide()
        self.symbol_60.hide()
        self.lineEdit_60.hide()
        self.unit_60.hide()
        self.Name_61.hide()
        self.symbol_61.hide()
        self.lineEdit_61.hide()
        self.unit_61.hide()
        self.Name_62.hide()
        self.symbol_62.hide()
        self.lineEdit_62.hide()
        self.unit_62.hide()
        self.Name_63.hide()
        self.symbol_63.hide()
        self.lineEdit_63.hide()
        self.unit_63.hide()
        self.Name_64.hide()
        self.symbol_64.hide()
        self.lineEdit_64.hide()
        self.unit_64.hide()
        self.Name_65.hide()
        self.symbol_65.hide()
        self.lineEdit_65.hide()
        self.unit_65.hide()
        self.Name_66.hide()
        self.symbol_66.hide()
        self.lineEdit_66.hide()
        self.unit_66.hide()
        self.Name_67.hide()
        self.symbol_67.hide()
        self.lineEdit_67.hide()
        self.unit_67.hide()
        self.Name_68.hide()
        self.symbol_68.hide()
        self.lineEdit_68.hide()
        self.unit_68.hide()
        self.Name_69.hide()
        self.symbol_69.hide()
        self.lineEdit_69.hide()
        self.unit_69.hide()
        self.Name_70.hide()
        self.symbol_70.hide()
        self.lineEdit_70.hide()
        self.unit_70.hide()
        self.Name_71.hide()
        self.symbol_71.hide()
        self.lineEdit_71.hide()
        self.unit_71.hide()
        self.Name_72.hide()
        self.symbol_72.hide()
        self.lineEdit_72.hide()
        self.unit_72.hide()
        self.Name_73.hide()
        self.symbol_73.hide()
        self.lineEdit_73.hide()
        self.unit_73.hide()
        self.Name_74.hide()
        self.symbol_74.hide()
        self.lineEdit_74.hide()
        self.unit_74.hide()
        self.Name_75.hide()
        self.symbol_75.hide()
        self.lineEdit_75.hide()
        self.unit_75.hide()
        self.Name_76.hide()
        self.symbol_76.hide()
        self.lineEdit_76.hide()
        self.unit_76.hide()
        self.Name_77.hide()
        self.symbol_77.hide()
        self.lineEdit_77.hide()
        self.unit_77.hide()
        self.Name_78.hide()
        self.symbol_78.hide()
        self.lineEdit_78.hide()
        self.unit_78.hide()
        self.Name_79.hide()
        self.symbol_79.hide()
        self.lineEdit_79.hide()
        self.unit_79.hide()
        self.Name_80.hide()
        self.symbol_80.hide()
        self.lineEdit_80.hide()
        self.unit_80.hide()
        self.Name_81.hide()
        self.symbol_81.hide()
        self.lineEdit_81.hide()
        self.unit_81.hide()
        self.Name_82.hide()
        self.symbol_82.hide()
        self.lineEdit_82.hide()
        self.unit_82.hide()
        self.Name_83.hide()
        self.symbol_83.hide()
        self.lineEdit_83.hide()
        self.unit_83.hide()
        self.Name_84.hide()
        self.symbol_84.hide()
        self.lineEdit_84.hide()
        self.unit_84.hide()
        self.Name_85.hide()
        self.symbol_85.hide()
        self.lineEdit_85.hide()
        self.unit_85.hide()
        self.Name_86.hide()
        self.symbol_86.hide()
        self.lineEdit_86.hide()
        self.unit_86.hide()
        self.Name_87.hide()
        self.symbol_87.hide()
        self.lineEdit_87.hide()
        self.unit_87.hide()
        self.Name_88.hide()
        self.symbol_88.hide()
        self.lineEdit_88.hide()
        self.unit_88.hide()
        self.Name_89.hide()
        self.symbol_89.hide()
        self.lineEdit_89.hide()
        self.unit_89.hide()
        self.Name_90.hide()
        self.symbol_90.hide()
        self.lineEdit_90.hide()
        self.unit_90.hide()
        self.Name_91.hide()
        self.symbol_91.hide()
        self.lineEdit_91.hide()
        self.unit_91.hide()
        self.Name_92.hide()
        self.symbol_92.hide()
        self.lineEdit_92.hide()
        self.unit_92.hide()
        self.Name_93.hide()
        self.symbol_93.hide()
        self.lineEdit_93.hide()
        self.unit_93.hide()
        self.Name_94.hide()
        self.symbol_94.hide()
        self.lineEdit_94.hide()
        self.unit_94.hide()
        self.Name_95.hide()
        self.symbol_95.hide()
        self.lineEdit_95.hide()
        self.unit_95.hide()
        self.Name_96.hide()
        self.symbol_96.hide()
        self.lineEdit_96.hide()
        self.unit_96.hide()
        self.Name_97.hide()
        self.symbol_97.hide()
        self.lineEdit_97.hide()
        self.unit_97.hide()
        self.Name_98.hide()
        self.symbol_98.hide()
        self.lineEdit_98.hide()
        self.unit_98.hide()
        self.Name_99.hide()
        self.symbol_99.hide()
        self.lineEdit_99.hide()
        self.unit_99.hide()
        self.Name_100.hide()
        self.symbol_100.hide()
        self.lineEdit_100.hide()
        self.unit_100.hide()


        self.Calculation_List_Tn = [12]
        self.Calculation_List_Tp = [5.30,5.00,4.60]
        self.Calculation_List_Hs = [2.10,1.70,1.40]
        self.Calculation_List_Tu = [5.936,5.658,5.658]

        self.Flowline_Properties = ["4623000.0","1066.80","23.80","7850.00",'207000000000.0','0.00','0.00','150.0','12.0','0.0','0.0','60.0','3040.0','1234.0','1025.0','550.0','14.90','40.0','196200.0','0.000','0.00012','0.30','448000000.00']
        self.environmental_data = ['30','19.4','1245.40','4.80','0.1','90','0.44','90','4.50','0.2','90','0.56','90','4.30','0.3','90','0.35','90']
        self.additional_data = ['1.10','1.10','1.30','1.40','1.15','1.10','1.20','0.0050','0.0100','0.000','0.0000','1.0500','0.5','1','1','0.00001','19.4','1','3.560','4.000','0.200','14.100','0.083','0.003']
        self.Us_list = ['0.179198421','0.120887824','0.273064261']


        self.calculate_general = []
        self.calculate_avoidance = []
        self.calculate_fatigue = []
        self.calculate_viv_inline = []
        self.calculate_viv_crossflow = []
        self.calculate_ultimate_crossflow = []
        self.calculate_ultimate_inline = []
        self.calculate_summary = []

        self.rough = []


          
        
    def select_UsTn_by_Hs_100(self,index):
        data_100 = self.comboBox_UsTn_by_Hs_100.itemData(index)
        UsTn_by_Hs_100 = float(data_100)
        self.lineEdit_UsTn_by_Hs_100.setText(data_100)
        Tn = float(self.Calculation_List_Tn[0])
        Tp = float(self.Calculation_List_Tp[0])
        Hs = float(self.Calculation_List_Hs[0])
        # R_D = float(self.additional_data[14])

        Us_100 = (UsTn_by_Hs_100*Hs)/Tn
        print("us= ",Us_100)
        us = str(Us_100)
        self.Us_list.insert(0,us)
        



    def select_UsTn_by_Hs_10(self,index):
        data_10 = self.comboBox_UsTn_by_Hs_10.itemData(index)
        UsTn_by_Hs_10 = float(data_10)
        self.lineEdit_UsTn_by_Hs_10.setText(data_10)
        Tn = float(self.Calculation_List_Tn[0])
        Tp = float(self.Calculation_List_Tp[1])
        Hs = float(self.Calculation_List_Hs[1])
        # R_D = float(self.additional_data[14])

        Us_10 = (UsTn_by_Hs_10*Hs)/Tn
        print("us= ",Us_10)
        us = str(Us_10)
        self.Us_list.insert(1,us)
       
      

    def select_UsTn_by_Hs_1(self,index):
        data_1y = self.comboBox_UsTn_by_Hs_1y.itemData(index)
        UsTn_by_Hs_1y = float(data_1y)
        self.lineEdit_UsTn_by_Hs_1y.setText(data_1y)
        Tn = float(self.Calculation_List_Tn[0])
        Tp = float(self.Calculation_List_Tp[2])
        Hs = float(self.Calculation_List_Hs[2])
        # R_D = float(self.additional_data[14])

        Us_1 = (UsTn_by_Hs_1y*Hs)/Tn
        print("us= ",Us_1)
        us = str(Us_1)
        self.Us_list.insert(2,us)
       
     

    def select_Tu_by_Tp_100(self, index):
        data_100 = self.comboBox_Tu_by_Tp_100.itemData(index)
        Tu_by_Tp_100 = float(data_100)
        self.lineEdit_Tu_by_Tp_100.setText(data_100)
        Tp = float(self.Calculation_List_Tp[0])
        Tu = (Tu_by_Tp_100*Tp)
        print("Tu= ",Tu)
        self.Calculation_List_Tu.insert(0,Tu)
        

    def select_Tu_by_Tp_10(self, index):
        data_10 = self.comboBox_Tu_by_Tp_10.itemData(index)
        Tu_by_Tp_10 = float(data_10)
        self.lineEdit_Tu_by_Tp_10.setText(data_10)
        Tp = float(self.Calculation_List_Tp[1])
        Tu = (Tu_by_Tp_10*Tp)
        print("Tu= ",Tu)
        self.Calculation_List_Tu.insert(1,Tu)


    def select_Tu_by_Tp_1y(self, index):
        data_1 = self.comboBox_Tu_by_Tp_1y.itemData(index)
        Tu_by_Tp_1 = float(data_1)
        self.lineEdit_Tu_by_Tp_1y.setText(data_1)
        Tp = float(self.Calculation_List_Tp[2])
        Tu = (Tu_by_Tp_1*Tp)
        print("Tu= ",Tu)
        self.Calculation_List_Tu.insert(2,Tu)

    def calculate_Tn(self):
        print("calculate Tn")
        self.Calculation_List_Tp.clear()
        self.Calculation_List_Tn.clear()
        self.Calculation_List_Hs.clear()
        water_depth = (self.water_depth_lineEdit.text())
        print(type(water_depth))
        gravity = 9.81
        print(type(gravity))
        try:
            reference_period_Tn = math.sqrt(float(water_depth)/gravity)
        
        

        
            # Tn = str(reference_period_Tn)
            self.Calculation_List_Tn.insert(0,str(reference_period_Tn))
            print("list tn ",self.Calculation_List_Tn)
        
            Peak_Period_100 = (self.peak_period_lineEdit_100.text())
            Peak_Period_10= (self.peak_period_lineEdit_10.text())
            Peak_Period_1y = (self.peak_period_lineEdit_1yer.text())
            self.Calculation_List_Tp.insert(0,Peak_Period_100)
            print("list tp",self.Calculation_List_Tp)

            self.Calculation_List_Tp.insert(1,Peak_Period_10)
            print("list tp",self.Calculation_List_Tp)

            self.Calculation_List_Tp.insert(2,Peak_Period_1y)
            print("list tp",self.Calculation_List_Tp)

            print(type(Peak_Period_100))
            print(Peak_Period_10)
            print(Peak_Period_1y)
            
            Ratio_Tn_by_Tp_100 = (reference_period_Tn/float(Peak_Period_100))
            Ratio_Tn_by_Tp_10 = (reference_period_Tn/float(Peak_Period_10))
            Ratio_Tn_by_Tp_1y = (reference_period_Tn/float(Peak_Period_1y))

            self.lineEdit_Tn_by_Tp_100.setText(str(Ratio_Tn_by_Tp_100))
            self.lineEdit_Tn_by_Tp_10.setText(str(Ratio_Tn_by_Tp_10))
            self.lineEdit_Tn_by_Tp_1yer.setText(str(Ratio_Tn_by_Tp_1y))

            hs_100 = str(self.significant_wave_height_lineEdit_100.text())
            print(type(hs_100))

            hs_10 = str(self.significant_wave_height_lineEdit_10.text())
            print(type(hs_10))

            hs_1y = str(self.significant_wave_height_lineEdit_1yer.text())
            print(type(hs_1y))
    
            self.Calculation_List_Hs.insert(0,hs_100)
            print("list hs ",self.Calculation_List_Hs)

            self.Calculation_List_Hs.insert(1,hs_10)
            print("list hs ",self.Calculation_List_Hs)

            self.Calculation_List_Hs.insert(2,hs_1y)
            print("list hs ",self.Calculation_List_Hs)

        except ValueError:
                            converted = 0


    def calculate(self):

        self.Input_tab.setCurrentIndex(1)
        self.frame_2.show()
        print("Calculate")
        try:
        #________________________FLOWLINE PROPERTIES______________________________
            # self.Flowline_Properties.clear()
            # self.environmental_data.clear()
            # self.additional_data.clear()
            self.Flowline_Properties.insert(0,self.internal_pressure_lineEdit_2.text())
            self.Flowline_Properties.insert(1,self.pipe_outer_diameter_lineEdit_2.text())
            self.Flowline_Properties.insert(2,self.pipe_wall_thickness_lineEdit_2.text())
            self.Flowline_Properties.insert(3,self.pipe_density_lineEdit_2.text())
            self.Flowline_Properties.insert(4,self.pipe_young_modulus_lineEdit_2.text())
            self.Flowline_Properties.insert(5,self.internal_linear_thickness_lineEdit_2.text())
            self.Flowline_Properties.insert(6,self.corrosion_thickness_lineEdit_2.text())
            self.Flowline_Properties.insert(7,self.concrete_thickness_lineEdit_2.text())
            self.Flowline_Properties.insert(8,self.marine_growth_thickness_lineEdit_2.text())
            self.Flowline_Properties.insert(9,self.internal_linear_density_lineEdit_2.text())
            self.Flowline_Properties.insert(10,self.corrosion_protection_density_lineEdit_2.text())
            self.Flowline_Properties.insert(11,self.content_density_lineEdit_2.text())
            self.Flowline_Properties.insert(12,self.concrete_density_lineEdit_2.text())
            self.Flowline_Properties.insert(13,self.marine_growth_density_lineEdit_2.text())
            self.Flowline_Properties.insert(14,self.water_density_lineEdit_2.text())
            self.Flowline_Properties.insert(15,self.gap_under_pipeline_lineEdit_2.text())
            self.Flowline_Properties.insert(16,self.ambient_temperature_lineEdit_2.text())
            self.Flowline_Properties.insert(17,self.operation_temperature_lineEdit_2.text())
            self.Flowline_Properties.insert(18,self.effective_residuel_lay_tension_lineEdit_2.text())
            self.Flowline_Properties.insert(19,self.effective_axial_force_release_lineEdit_2.text())
            self.Flowline_Properties.insert(20,self.temperature_expension_coefficient_lineEdit_2.text())
            self.Flowline_Properties.insert(21,self.poisson_ratio_lineEdit_2.text())
            self.Flowline_Properties.insert(22,self.poisson_ratio_lineEdit_3.text())
            
            print(self.Flowline_Properties)
            
            Pi = self.Flowline_Properties[0]
            print(type(Pi))
            OD = self.Flowline_Properties[1]
            tp = self.Flowline_Properties[2]
            rho_p = self.Flowline_Properties[3]
            E = self.Flowline_Properties[4]
            til = self.Flowline_Properties[5]
            tce = self.Flowline_Properties[6]
            tcc = self.Flowline_Properties[7]
            tmg = self.Flowline_Properties[8]
            rho_il = self.Flowline_Properties[9]
            rho_ce = self.Flowline_Properties[10]
            rho_con = self.Flowline_Properties[11]
            rho_cc = self.Flowline_Properties[12]
            rho_mg = self.Flowline_Properties[13]
            rho_w = self.Flowline_Properties[14]
            e = self.Flowline_Properties[15]
            Tamb = self.Flowline_Properties[16]
            Top = self.Flowline_Properties[17]
            Heff = self.Flowline_Properties[18]
            Seff_max = self.Flowline_Properties[19]
            alpha_e = self.Flowline_Properties[20]
            v = self.Flowline_Properties[21]
            SMYS = self.Flowline_Properties[22]   
            

            Pi = float(Pi)
            print(type(Pi))
            OD = float(OD)
            tp = float(tp)
            rho_p = float(rho_p)
            E = float(E)
            til = float(til)
            tce = float(tce)
            tcc = float(tcc)
            tmg = float(tmg)
            rho_il = float(rho_il)
            rho_ce = float(rho_ce)
            rho_con = float(rho_con)
            rho_cc = float(rho_cc)
            rho_mg = float(rho_mg)
            rho_w = float(rho_w)
            e = float(e)
            Tamb = float(Tamb)
            Top = float(Top)
            Heff = float(Heff)
            Seff_max = float(Seff_max)
            alpha_e = float(alpha_e)
            v = float(v)
            SMYS = float(SMYS)

        # # #________________________ENVIRONMENTAL DATA______________________________
            self.environmental_data.insert(0,self.free_span_length_lineEdit.text())
            self.environmental_data.insert(1,self.water_depth_lineEdit.text())
            self.environmental_data.insert(2,self.trench_depth_lineEdit.text())
            self.environmental_data.insert(3,self.wave_period_lineEdit_100.text())
            self.environmental_data.insert(4,self.lineEdit_Tn_by_Tp_100.text())
            self.environmental_data.insert(5,self.wave_direction_lineEdit_100.text())
            self.environmental_data.insert(6,self.current_velocity_lineEdit_100.text())
            self.environmental_data.insert(7,self.current_direction_lineEdit_100.text())
            self.environmental_data.insert(8,self.wave_period_lineEdit_10.text())
            self.environmental_data.insert(9,self.lineEdit_Tn_by_Tp_10.text())
            self.environmental_data.insert(10,self.wave_direction_lineEdit_10.text())
            self.environmental_data.insert(11,self.current_velocity_lineEdit_10.text())
            self.environmental_data.insert(12,self.current_direction_lineEdit_10.text())
            self.environmental_data.insert(13,self.wave_period_lineEdit_1yer.text())
            self.environmental_data.insert(14,self.lineEdit_Tn_by_Tp_1yer.text())
            self.environmental_data.insert(15,self.wave_direction_lineEdit_1yer.text())
            self.environmental_data.insert(16,self.current_velocity_lineEdit_1yer.text())
            self.environmental_data.insert(17,self.current_direction_lineEdit_1yer.text())

            
            print(self.environmental_data)


            L = self.environmental_data[0]
            WD = self.environmental_data[1]
            d = self.environmental_data[2]
            Tw_100 = self.environmental_data[3]
            Tn_by_Tp_100 = self.environmental_data[4]
            Dir_100 = self.environmental_data[5]
            Cv_100 = self.environmental_data[6]
            C_Dir_100 = self.environmental_data[7]
            Tw_10 = self.environmental_data[8]
            Tn_by_Tp_10 = self.environmental_data[9]
            Dir_10 = self.environmental_data[10]
            Cv_10 = self.environmental_data[11]
            C_Dir_10 = self.environmental_data[12]
            Tw_1 = self.environmental_data[13]
            Tn_by_Tp_1 = self.environmental_data[14]
            Dir_1 = self.environmental_data[15]
            Cv_1 = self.environmental_data[16]
            C_Dir_1 = self.environmental_data[17]

            Hs_100 = self.Calculation_List_Hs[0]
            Hs_10 = self.Calculation_List_Hs[1]
            Hs_1 = self.Calculation_List_Hs[2]
            Tp_100 = self.Calculation_List_Tp[0]
            Tp_10 = self.Calculation_List_Tp[1]
            Tp_1 = self.Calculation_List_Tp[2]
            Tn = self.Calculation_List_Tn[0]
            Tu_100 = self.Calculation_List_Tu[0]
            Tu_10 = self.Calculation_List_Tu[1]
            Tu_1 = self.Calculation_List_Tu[2]

            





            L = float(L)
            WD = float(WD)
            d = float(d)
            Tw_100 = float(Tw_100)
            Tn_by_Tp_100 = float(Tn_by_Tp_100)
            Dir_100 = float(Dir_100)
            Cv_100 = float(Cv_100)
            C_Dir_100 = float(C_Dir_100)
            Tw_10 = float(Tw_10)
            Tn_by_Tp_10 = float(Tn_by_Tp_10)
            Dir_10 =(Dir_10)
            Cv_10 = float(Cv_10)
            C_Dir_10 = float(C_Dir_10)
            Tw_1 = float(Tw_1)
            Tn_by_Tp_1 = float(Tn_by_Tp_1)
            Dir_1 = float(Dir_1)
            Cv_1 = float(Cv_1)
            C_Dir_1 = float(C_Dir_1)

            Hs_100 = float(Hs_100)
            Hs_10 = float(Hs_10)
            Hs_1 = float(Hs_1)
            Tp_100 = float(Tp_100)
            Tp_10 = float(Tp_10)
            Tp_1 = float(Tp_1)
            Tn = float(Tn)
            Tu_100 = float(Tu_100)
            Tu_100 = float(Tu_10)
            Tu_100 = float(Tu_1)



        # #  #________________________ADDITIONAL DATA______________________________
            self.additional_data.insert(0,self.safety_factor_on_Inline_frequency_lineEdit.text())
            self.additional_data.insert(1,self.safety_factor_on_crossflow_frequency_lineEdit.text())
            self.additional_data.insert(2,self.safety_factor_on_stress_range_lineEdit.text())
            self.additional_data.insert(3,self.safety_factor_on_natural_frequency_lineEdit.text())
            self.additional_data.insert(4,self.safety_on_damping_lineEdit.text())
            self.additional_data.insert(5,self.safety_factor_on_onset_of_VrIL_lineEdit.text())
            self.additional_data.insert(6,self.safety_factor_on_onset_of_VrCF_lineEdit.text())
            self.additional_data.insert(7,self.structural_damping_lineEdit_3.text())
            self.additional_data.insert(8,self.soil_damping_lineEdit_3.text())
            self.additional_data.insert(9,self.hydrodynamic_damping_lineEdit_3.text())
            # self.additional_data.insert(10,self.concrete_stiffness_coefficient_lineEdit_2.text())
            self.additional_data.insert(10,self.inline_static_deflection_lineEdit_2.text())
            self.additional_data.insert(11,self.pressure_load_effect_factor_lineEdit_2.text())
            self.additional_data.insert(12,self.usage_factor_for_equivalent_stress_check_lineEdit_2.text())
            self.additional_data.insert(13,self.usage_factor_for_equivalent_stress_check_lineEdit_3.text())
            self.additional_data.insert(14,self.usage_factor_for_equivalent_stress_check_lineEdit_4.text())
            self.additional_data.insert(15,self.usage_factor_for_equivalent_stress_check_lineEdit_5.text())
            self.additional_data.insert(16,self.usage_factor_for_equivalent_stress_check_lineEdit_6.text())
            self.additional_data.insert(17,self.usage_factor_for_equivalent_stress_check_lineEdit_7.text())
            self.additional_data.insert(18,self.lineEdit_boundary_condition_C1.text())
            self.additional_data.insert(19,self.lineEdit_boundary_condition_C2.text())
            self.additional_data.insert(20,self.lineEdit_boundary_condition_C3.text())
            self.additional_data.insert(21,self.lineEdit_boundary_condition_C4.text())
            self.additional_data.insert(22,self.lineEdit_boundary_condition_C5.text())
            self.additional_data.insert(23,self.lineEdit_boundary_condition_C6.text())

            print(self.additional_data)

            gamma_f_IL = self.additional_data[0]
            gamma_f_CF = self.additional_data[1]
            gamma_s = self.additional_data[2]
            gamma_f = self.additional_data[3]
            gamma_k = self.additional_data[4]
            gamma_on_IL = self.additional_data[5]
            gamma_on_CF = self.additional_data[6]
            zeta_str = self.additional_data[7]
            zeta_soil = self.additional_data[8]
            zeta_h = self.additional_data[9]
            # CSF = self.additional_data[10]
            delta = self.additional_data[10]
            gamma_p = self.additional_data[11]
            eta = self.additional_data[12]
            R_D = self.additional_data[13]
            R_C = self.additional_data[14]
            Zo = self.additional_data[15]
            Zr = self.additional_data[16]
            Z = self.additional_data[17]
            boundary_condition_c1 = self.additional_data[18]
            boundary_condition_c2 = self.additional_data[19]
            boundary_condition_c3 = self.additional_data[20]
            boundary_condition_c4 = self.additional_data[21]
            boundary_condition_c5 = self.additional_data[22]
            boundary_condition_c6 = self.additional_data[23]



            gamma_f_IL = float(gamma_f_IL)
            gamma_f_CF = float(gamma_f_CF)
            gamma_s = float(gamma_s)
            gamma_f = float(gamma_f)
            gamma_k = float(gamma_k)
            gamma_on_IL = float(gamma_on_IL)
            gamma_on_CF = float(gamma_on_CF)
            zeta_str = float(zeta_str)
            zeta_soil = float(zeta_soil)
            zeta_h = float(zeta_h)
            # CSF = float(CSF)
            delta = float(delta)
            gamma_p = float(gamma_p)
            eta = float(eta)
            R_D = float(R_D)
            R_C = float(R_C)
            Zo = float(Zo)
            Zr = float(Zr)
            Z = float(Z)
            C1 = float(boundary_condition_c1)
            C2 = float(boundary_condition_c2)
            C3 = float(boundary_condition_c3)
            C4 = float(boundary_condition_c4)
            C5 = float(boundary_condition_c5)
            C6 = float(boundary_condition_c6)

            gap_under_e = float(e)
            # Zo = float(Zo)
            # Zr = float(Zr)
            f_C = 50
            g= 9.81
            Leff = 30

            
   
        #         # initializing Us here.................
            Us_100 = self.Us_list[0]
            Us_10 = self.Us_list[1]
            Us_1 = self.Us_list[2]

            Uw_100 = float(Us_100)*float(R_D)
            print(Uw_100)

            Uw_10 = float(Us_10)*float(R_D)
            print(Uw_10)

            Uw_1 = float(Us_1)*float(R_D)
            print(Uw_1)

            
            

        #.................................................Calculate General Value......................


        #Pipe Drag Diameter
            TD = float(OD)+2*(float(tce)+float(tcc)+float(tmg))
            print("TD" , TD)
            

        #Inside Diameter
            ID = float(OD)-2*float(tp)
            print("ID" ,ID)
            

        #Cross Section Area
            A = math.pi*((ID**2)/4)
            print("A" ,A)
            

        #Steel Area
            Ap = math.pi*(float(OD)-float(tp))*float(tp)
            print("Ap" , Ap )
            


        # Modulus of elasticity of concrete (only in backend calculation not to display)

            Ecc = ((rho_cc)**1.5)*(0.043*(f_C**0.5))*10**6
            print("Ecc" , Ecc)

            Uw_100 = float(Us_100)*float(R_D)
            print("Uw_100",Uw_100)

            Uw_10 = float(Us_10)*float(R_D)
            print("Uw_10",Uw_10)

            Uw_1 = float(Us_1)*float(R_D)
            print(Uw_1)

            Uw_max = max(Uw_100,Uw_10,Uw_1)
            print("a " ,Uw_max)
            Uc_100 = R_C*Cv_100*(((math.log10((e/1000)+((TD/2)/1000)))-math.log10(Zo))/(math.log10(Zr)-math.log10(Zo)))
            print("Uc_100",Uc_100)

            Uc_10 = R_C*Cv_10*(((math.log10((e/1000)+((TD/2)/1000)))-math.log10(Zo))/(math.log10(Zr)-math.log10(Zo)))
            print("Uc_10",Uc_10)

            Uc_1 = R_C*Cv_1*(((math.log10((e/1000)+((TD/2)/1000)))-math.log10(Zo))/(math.log10(Zr)-math.log10(Zo)))
            print("Uc_1",Uc_1)


            # Steady current
            Uc = min(Uc_100,Uc_10,Uc_1)
            print("Uc", Uc)

            #significant wave particle velocity
            Uw = min(Uw_100,Uw_10,Uw_1)
            print("Uw", Uw)

            # significant  of wave period
            Tw = min(Tw_100,Tw_10,Tw_1)
            print("Tw", Tw)

            # significant wave particle acceleration
            Uw_dot = Uw/Tw
            print('Uw_dot',Uw_dot)
            
            # Maximum wave particle velocity
            Uw_max = max(Uw_100,Uw_10,Uw_1)
            print("Uw_max", Uw_max)

            # maximum wave period
            Tw_max = max(Tw_100,Tw_10,Tw_1)
            print("Tw_max", Tw_max)

            # maximum wave particle acceleration
            Uw_dot_max = Uw_max/Tw_max
            print("Uw_max", Uw_max)


        #...............................Calculated General Values.......................................		

            print("\n\tCalculated General Values")

            # MOI of steel pipe
            Ip = (math.pi/64)*((OD**4)-(ID**4))
            print(Ip)
            

            # MOI of concrete coating
            Icc = (math.pi/64)*((TD**4)-(OD**4))
            print(Icc)
            

            # Current flow velocity ratio sig.wave
            alpha = round(max((Uc_100/(Uc_100+Uw_1)),0.6),3)
            print(alpha)
            

            # Mass of pipe
            mp = (Ap * rho_p)/10**6
            print("mp",mp)
            

            #Internal linier mass
            mil = math.pi*(ID-til)*til*rho_il
            print("mil",mil)
            

            # corrosion coating mass
            mce = math.pi*(OD+tce)*tce*rho_ce
            print("mce",mce)
            

            # concrete coating mass
            mcc = math.pi*((TD-(tcc+(2*tmg)))*(tcc*rho_cc))/10**6
            print("mcc",mcc)
            

            # Marine growth mass
            mmg = math.pi*((TD-tmg)*(tmg*rho_mg))/10**6
            print("mmg",mmg)
            

            # Content Mass
            mcon = (math.pi/4)*((ID**2*rho_con))/10**6
            print("mcon",mcon)
            

            # Total mass
            mt = mp+mil+mce+mcc+mmg+mcon
            print("mt", mt)
            

            # buoyancy
            B = (math.pi/4)*((TD**2*rho_w)/10**6)
            print("B" , B)
            

            # submerge weight of pipe
            Ws = mt-B
            print("Ws", Ws)
            

            # Span Gap ratio
            span_gap_ratio = e/TD
            print("span_gap_ratio" , span_gap_ratio)
            


            # relative trench Depth
            Relative_trench_depth = (1.25*d-e)/TD 
            print("Relative_trench_depth" , Relative_trench_depth)
            

            # Added mass coefficient (condition)
            if(span_gap_ratio<0.8):
                CA = 0.68 + (1.6/(1+(5*(e/TD))))
            elif (span_gap_ratio >= 0.8):
                CA = 1
            else:
                pass
            print("CA" , CA)
            


            # Added mass pipe
            ma = (math.pi/4*((TD**2)*rho_w*CA))/10**6
            print("ma" , ma)
            

            # Effective mass
            me = mt+ma
            print("me" , me)
            

            #External pressure
            Pe = rho_w*g*WD
            print("Pe" , Pe)
            

            # pressure difference
            delta_SD_p = Pi - Pe
            print("delta_SD_p" , delta_SD_p)
            

            # Internal Area (BORE)
            Ai =  math.pi/4*(OD-2*(tp+til))**2
            print("Ai" , Ai)
            

            # external pipe area
            Ae = math.pi/4*(OD+2*tce)**2-Ai
            print("Ae" , Ae)
            

            # pipe cross section area
            Ap = math.pi*(OD-tp)*tp
            print("Ap" , Ap)
            

            # Temprature difference
            delta_SD_t = Top-Tamb
            print("delta_SD_t" , delta_SD_t)
            

            #Effective tension
            Seff = Heff-(delta_SD_p*(Ai/10**6)*(1-2*v))-((Ap/10**6)*E*delta_SD_t*alpha_e)
            print(Seff)
            

            #Total Damping pressure
            zeta_T = zeta_str+zeta_soil+zeta_h
            print("zeta_T" , zeta_T)
            

            # Stability parametern K_s
            K_s = (4*math.pi*me*zeta_T)/(rho_w*(TD/1000)**2)
            print('K_s',K_s)
            

            # Stability parametern K_sd
            K_sd = (K_s/gamma_k) 
            print("K_sd" , K_sd)
            

            # Keulegan carpenter number
            K_C = (Uw_10*Tu_1)/(TD/1000)
            print("K_C" , K_C)
            

            # Keulegan carpenter number Max
            K_C_max = (Uw_max*Tu_100)/(TD/1000)
            print(K_C_max)
            


            # Concrete Stiffness Coefficient (only for calculation not to be display)>>>>>>>>>>>>>

            CSF = K_C * (Ecc*(Icc/10**12)/(E*(Ip/10**12)))**0.75
            print("CSF ", CSF)


            #.......................Indexing..........................
            self.calculate_general.insert(0,TD)
            self.calculate_general.insert(1,ID)
            self.calculate_general.insert(2,A)
            self.calculate_general.insert(3,Ap)
            self.calculate_general.insert(4,Ip)
            self.calculate_general.insert(5,Icc)
            self.calculate_general.insert(6,alpha)
            self.calculate_general.insert(7,mp)
            self.calculate_general.insert(8,mil)
            self.calculate_general.insert(9,mce)
            self.calculate_general.insert(10,mcc)
            self.calculate_general.insert(11,mmg)
            self.calculate_general.insert(12,mcon)
            self.calculate_general.insert(13,mt)
            self.calculate_general.insert(14,B)
            self.calculate_general.insert(15,Ws)
            self.calculate_general.insert(16,span_gap_ratio)
            self.calculate_general.insert(17,Relative_trench_depth)
            self.calculate_general.insert(18,CA)
            self.calculate_general.insert(19,ma)
            self.calculate_general.insert(20,me)
            self.calculate_general.insert(21,Pe)
            self.calculate_general.insert(22,delta_SD_p)
            self.calculate_general.insert(23,Ai)
            self.calculate_general.insert(24,Ae)
            self.calculate_general.insert(25,Ap)
            self.calculate_general.insert(26,delta_SD_t)
            self.calculate_general.insert(27,Seff)
            self.calculate_general.insert(28,zeta_T)
            self.calculate_general.insert(29,K_s)
            self.calculate_general.insert(30,K_sd)
            self.calculate_general.insert(31,K_C)
            self.calculate_general.insert(32,K_C_max)




        #.............................................VIV Avoidance Criteria..............................	

            print("\n\tVIV Avoidance Criteria")

            # 100 years steady current velocity
            Uc_100 = Uc_100
            self.calculate_avoidance.insert(4,Uc_100)

            # 10 years steady current velocity
            Uc_10 = Uc_10
            self.calculate_avoidance.insert(5,Uc_10)

            # 100 years wave induced velocity
            Uw_100 = Uw_100
            self.calculate_avoidance.insert(6,Uw_100)


            # 10 years wave induced velocity
            Uw_10 = Uw_10
            self.calculate_avoidance.insert(7,Uw_10)

            # Peak_enhancement factor
            phi_100 = Tp_100/math.sqrt(Hs_100)
            print(phi_100)

            phi_10 = Tp_10/math.sqrt(Hs_10)
            print(phi_10)

            # Peak_enhancement factor
            phi_1 = Tp_1/math.sqrt(Hs_1)
            print(phi_1)

            

            self.calculate_avoidance.insert(0,phi_100)
            self.calculate_avoidance.insert(2,phi_10)

            # Pierson Moskowitz Spectrum
            Pierson_100  = (5.75-(1.1*phi_100))
            Pierson_10  = (5.75-(1.1*phi_10))
            Pierson_1  = (5.75-(1.1*phi_1))

            #condition for 100 years
            if(phi_100<=3.6):
                gamma_100 = 5 
            elif(phi_100>3.6 and phi_100<5):
                gamma_100 = math.exp(Pierson_100)
            elif(phi_100>=5):
                gamma_100 = 1
            else:
                pass

            print(gamma_100)
            self.calculate_avoidance.insert(1,gamma_100)

            #condition for 10 years
            if(phi_10<=3.6):
                gamma_10 = 5
            elif(phi_10>3.6 and phi_10<5):
                gamma_10 = math.exp(Pierson_10)
            elif(phi_10>=5):
                gamma_10 = 1
            else:
                pass

            print(gamma_10)
            self.calculate_avoidance.insert(3,gamma_10)

            #condition for 1 years
            if(phi_1<=3.6):
                gamma_1 = 5
            elif(phi_1>3.6 and phi_1<5):
                gamma_1 = math.exp(Pierson_1)
            elif(phi_1>=5):
                gamma_1 = 1
            else:
                pass

            print(gamma_1)
            # self.calculate_avoidance.insert(0,phi_100)

            # Representative flow condition

            U_extreme = max(Uc_100+Uw_10,Uc_10+Uw_100)
            print("U_extreme",U_extreme)
            self.calculate_avoidance.insert(8,U_extreme)


            #  Inline onset value for reduced velocity
            if(K_sd<0.4):
                V_IL_R_onset = (1/gamma_on_IL)
            elif(0.4<K_sd<1.6):
                V_IL_R_onset = ((0.6+K_sd)/gamma_on_IL)
            else:
                V_IL_R_onset = (2.2/gamma_on_IL)

            print("V_IL_R_onset" , V_IL_R_onset)
            self.calculate_avoidance.insert(9,V_IL_R_onset)


            #  Inline lowest natural frequency

            F_IL_1 = (U_extreme*gamma_f_IL)/(V_IL_R_onset*(TD/1000))

            print("F_IL_1",F_IL_1)
            self.calculate_avoidance.insert(10,F_IL_1)

            #  Cross Flow lowest natural frequency

            F_CF_1 = (U_extreme*gamma_f_IL)/(2*(TD/1000))
            print("F_CF_1",F_CF_1)
            self.calculate_avoidance.insert(11,F_CF_1)

            # _Seabed correction factor
            if(span_gap_ratio<0.8):
                sai_proxi_onset = 1/5*(4+1.25*(span_gap_ratio))  
            else:
                sai_proxi_onset = 1

            print("sai_proxi_onset", sai_proxi_onset)

            # Trench correction factor

            Sai_Trench_onset = 1+0.5*(Relative_trench_depth) 
            print(Sai_Trench_onset)

            # Cross flow onset value for reduced velocity

            V_CR_R_onset = (3*sai_proxi_onset*Sai_Trench_onset)/gamma_on_CF
            print("V_CR_R_onset",V_CR_R_onset)

            #  Inline Natural Frequency
            # 1
            F_IL_in_gamma = (F_IL_1/gamma_f)
            print("F_IL", F_IL_in_gamma)

            # 2
            F_IL = ((Uc_100/V_IL_R_onset)*(TD/1000))*(1-((L/(TD*250/1000))))*(1/alpha)
            print("F_IL" , F_IL)

            #  Cross Flow Natural Frequency
            # 1
            F_CF_in_gamma = (F_CF_1/gamma_f)
            print("F_CF", F_CF_in_gamma)

            #  2 
            F_CF = (Uc_100+Uw_1)/(V_CR_R_onset*(TD/1000))
            print("F_CF", F_CF)


#.............................. Screening Ftigue Criteria Inline and Crossflow................................

            print("\n\t****Screening Ftigue Criteria Inline and Crossflow***")
            # Peak_enhancement factor
            phi_1 = Tp_1/math.sqrt(Hs_1)
            print(phi_1)
            


            # Pierson Moskowitz Spectrum condition for 1 years
            gamma_1 = gamma_1
            

            Uc_1 = Uc_1
            

            Uw_1 = Uw_1
            

            # Inline >>>>> Screening Fatigue Creteria
            if F_IL_in_gamma>F_IL:
                message2 = "NOT Required"
                print(message2)
            else:
                message2 = "Required"
                print(message2)
            
            print(message2)

            

                # Trench correction factor

            Sai_Trench_onset = 1+0.5*(Relative_trench_depth) 
            print(Sai_Trench_onset)
            

            # _Seabed correction factor
            if(span_gap_ratio<0.8):
                sai_proxi_onset = 1/5*(4+1.25*(span_gap_ratio))  
            else:
                sai_proxi_onset = 1

            print("sai_proxi_onset", sai_proxi_onset)
            

            # Cross flow onset value for reduced velocity

            V_CR_R_onset = (3*sai_proxi_onset*Sai_Trench_onset)/gamma_on_CF
            print("V_CR_R_onset",V_CR_R_onset)
            

            


            #cross flow >>>>> Screening Fatigue Creteria
            if F_CF_in_gamma>F_CF:
                message1 = "NOT Required"
                print(message1)
            else:
                message1 = "Required"
                print(message1)
            print(message1)
            

            

                #  Inline Natural Frequency
            # 1
            F_IL_in_gamma = (F_IL_1/gamma_f)
            print("F_IL", F_IL_in_gamma)
            

            # 2
            F_IL = ((Uc_100/V_IL_R_onset)*(TD/1000))*(1-((L/(TD*250/1000))))*(1/alpha)
            print("F_IL" , F_IL)
            

            #  Cross Flow Natural Frequency
            # 1
            F_CF_in_gamma = (F_CF_1/gamma_f)
            print("F_CF", F_CF_in_gamma)
            

            #  2 
            F_CF = (Uc_100+Uw_1)/(V_CR_R_onset*(TD/1000))
            print("F_CF", F_CF)
            


    #..........Indexing for Screening fatigue criteria.....................

            self.calculate_fatigue.insert(0,phi_1)
            self.calculate_fatigue.insert(1,gamma_1)
            self.calculate_fatigue.insert(2,Uc_1)
            self.calculate_fatigue.insert(3,Uw_1)
            self.calculate_fatigue.insert(4,sai_proxi_onset)
            self.calculate_fatigue.insert(5,Sai_Trench_onset)
            self.calculate_fatigue.insert(6,V_CR_R_onset)
            self.calculate_fatigue.insert(7,F_IL_in_gamma)
            self.calculate_fatigue.insert(8,F_IL)
            self.calculate_fatigue.insert(9,F_CF_in_gamma)
            self.calculate_fatigue.insert(10,F_CF)
            self.calculate_fatigue.insert(11,message2)
            self.calculate_fatigue.insert(12,message1)



        #......... .................................VIV Inline Span Length...................
            print("\n\tVIV Inline Span Length")

            #  Euler Buckling Load

            PE = ((1+CSF)*C2*(math.pi**2)*E*(Ip/10**12))/(Leff**2)
            print(PE)

            self.calculate_viv_inline.insert(0,PE)

            # Inline Onset Value for Reduced Velocity
            V_IL_R_onset = V_IL_R_onset
            self.calculate_viv_inline.insert(1,V_IL_R_onset)

            
            ##
            Leff_and_L = Leff/L
            self.calculate_viv_inline.insert(2,Leff_and_L)
            ##
            Leff = Leff
            self.calculate_viv_inline.insert(3,Leff)

            # Fundamental natural fequency for Inline 
            delta_inline = 0

            F1_IL = (C1*math.sqrt(1+CSF)*math.sqrt(abs((E*(Ip/10**12)/(me*Leff**4))*(1+(Seff/PE)+C3*(delta_inline/(TD/1000))**2))))
            print("F1_IL",F1_IL)
            self.calculate_viv_inline.insert(4,F1_IL)


            #  Inline Screening Criteria (If Statement between F1_IL & F_IL_1)

            if(F1_IL>F_IL_1):
                message = "Not Included"
                print(message)
            else:
                message = "Included"
                print(message)
            
            self.calculate_viv_inline.insert(5,message)

            # VIV Inline Span Length	

            L_VIV_IN = L
            print(L_VIV_IN)
            self.calculate_viv_inline.insert(6,L_VIV_IN)

        #.........................................................VIV Cross Flow Span Length.............................		
            print("\n\tVIV Cross Flow Span Length")

            # Deflection Load per Unit Length 

            Q = Ws * g 
            print(Q) 
            self.calculate_viv_crossflow.insert(4,Q)	

            # Cross Flow Onset Value for Reduced Velocity
            V_CF_R_onset = V_CR_R_onset
            self.calculate_viv_crossflow.insert(3,V_CF_R_onset)

            # Seabed Correction Factor
            if(span_gap_ratio<0.8):
                sai_proxi_onset = 1/5*(4+1.25*(span_gap_ratio))  
            else:
                sai_proxi_onset = 1

            print("sai_proxi_onset", sai_proxi_onset)
            self.calculate_viv_crossflow.insert(1,sai_proxi_onset)

            # Trench correction factor
            Sai_Trench_onset = Sai_Trench_onset
            self.calculate_viv_crossflow.insert(2,Sai_Trench_onset)



            # Euler Buckling Load
            PE = PE
            self.calculate_viv_crossflow.insert(0,PE)

            # Static Deflection

            delta_SD = C6*((Q*(Leff**4))/((E*(Ip/10**12))*(1+(Seff/PE))))
            print("delta_SD_" , delta_SD)
            self.calculate_viv_crossflow.insert(5,delta_SD)

            Leff_ratio = Leff/L
            self.calculate_viv_crossflow.insert(6,Leff_ratio)
            #####
            Leff = Leff
            self.calculate_viv_crossflow.insert(7,Leff)

            # Fundamental natural fequency for Cross Flow

            F1_CF = (C1*math.sqrt(1+CSF)*math.sqrt(abs((E*(Ip/10**12)/(me*Leff**4))*(1+(Seff/PE)+C3*(delta_SD/(TD/1000))**2))))
            print(F1_CF)
            self.calculate_viv_crossflow.insert(8,F1_CF)
            

            # Cross-flow Screening Criteria	

            if(F1_CF>F_CF_1):
                message = "Not Included"
                print(message)
            else:
                message = "Included"
                print(message)
            
            self.calculate_viv_crossflow.insert(9,message)

            # VIV Cross_Flow Span Length	

            L_VIV_CR = L
            print(L_VIV_CR) 
            self.calculate_viv_crossflow.insert(10,L_VIV_CR)


        #............................. Ultimate Limit state Cross Flow Span Length.................................... 


            print("\n\tUltimate limit state Cross flow span length")
            # True Steel Wall Axial Force
            N_CF_TR = Seff + (Pi*( Ai/10**6 )) - (Pe * (Ae/10**6))
            print("N_CF_TR" , N_CF_TR)
            

            # Wall axial stress
            Sigma_CF_N = N_CF_TR/(Ap /10**6)
            print("Sigma_CF_N" , Sigma_CF_N)
            

            #  Euler Buckling load
            Pcr =  abs(((1+CSF)*C2*(math.pi**2)*E*Ip)/Leff**2)/10**12
            print("Pcr",Pcr)
            

            #  CRoss flow response value

            if(alpha>0.8):
                ratio_Az_and_TD = 1.3
            else:
                if(K_C_max>30 and K_C_max<40):
                    ratio_Az_and_TD = 0.9
                elif(K_C_max>10 and K_C_max<30):
                    ratio_Az_and_TD = 0.7+0.01*(K_C_max-10)
                elif(K_C_max<10):
                    ratio_Az_and_TD = 0.7
                else:
                    pass

            print("ratio_Az_and_TD",ratio_Az_and_TD)
            

            #  cross flow unit stress amplitude

            A_CF = 2 * C4* (1+ delta_SD) * ((TD/1000) * E * (TD/(2*1000)))/Leff**2
            print("A_CF",A_CF)
            

            #  cross flow reduction factor
            if(K_sd<=4):
                Rk = 1 - (0.15*K_sd)
            else:
                Rk = (3.2*K_sd)**-1.5

            print(Rk)
            

            # static cross flow bending moment
            M_CF_Rsta = C5 * ((Q*Leff**2)/(1+(Seff/Pcr)))
            print(M_CF_Rsta)
            # self.calculate_ultimate_crossflow.insert(27,M_CF_Rsta)

            # Static cross flow bending stress
            Sigma_CF_Rsta = (M_CF_Rsta * (OD/1000))/(2*(Ip/10**12))
            print("Sigma_CF_Rsta",Sigma_CF_Rsta)
            

            # cross flow induced VIV strss range
            S_RM_CF = 2* A_CF * ratio_Az_and_TD * Rk * gamma_s
            print("S_RM_CF",S_RM_CF)
            

            #  LKCR reduction factor
            Sai_KC = 0.4 + 0.075 * (K_C_max -2)
            print("Sai_KC" , Sai_KC)
            

            # LKCR stability factor
            if(K_sd<=4):
                Sai_Ks = 1-0.1*K_sd
            else:
                Sai_Ks = 0.6
            print("Sai_Ks" , Sai_Ks)
            

            # associated crossflow induced VIV stress range
            S_LKCR_CF = 2* A_CF * Sai_KC * Sai_Ks *gamma_s
            print("S_LKCR_CF",S_LKCR_CF)
            

            # Combined LKCR response model stress range
            S_LKCRcomb_CF = math.sqrt(S_LKCR_CF**2)
            print("S_LKCRcomb_CF",S_LKCRcomb_CF)
            

            # Combind Responce Model Stress Range
            S_RMcomb_CF = math.sqrt(S_RM_CF**2)
            print("S_RMcomb_CF" , S_RMcomb_CF)
            

            # cross flow stress range
            Scomb_CF = max(S_RMcomb_CF , S_LKCRcomb_CF)
            print("Scomb_CF",Scomb_CF)
            

            # Max environmental stress
            Sigma_CF_E = (1/2)* Scomb_CF
            print("Sigma_CF_E",Sigma_CF_E)
            

            # Total Axial Stress 
            Sigma_CF_L = Sigma_CF_Rsta + Sigma_CF_N + Sigma_CF_E
            print("Sigma_CF_L",Sigma_CF_L)

            # Hoop Stress				
            Sigma_CF_H = ((Pi * ID )/(2 * tp))
            print("Sigma_CF_H",Sigma_CF_H)
            

            # Vonmisses Stress				
            Sigma_CF_e = math.sqrt((Sigma_CF_H**2 + Sigma_CF_L**2) - (Sigma_CF_H * Sigma_CF_L))
            print("Sigma_CF_e",Sigma_CF_e)
            

            # Max Environmental Bending Moment 			
            M_CF_E = Sigma_CF_E*(2*Ip/10**12)/(TD/1000)
            print("M_CF_E",M_CF_E)

            

            # surface roughness (concrete)
            k = 1/300
            print("k",k)
            

            # ratio between roughness and OD
            ratio_k_and_TD = k/(TD/1000)
            print("ratio_k_and_TD",ratio_k_and_TD)
            

            # Basic Drag Coefficient for Steady Flow
            if(ratio_k_and_TD < 10**-4):
                C0_D_K_and_D = 0.65
            elif(ratio_k_and_TD>10**-4 and ratio_k_and_TD < 10**-2):
                C0_D_K_and_D = 0.65*((29/13)+((4/13)*math.log10(ratio_k_and_TD)))
            elif(ratio_k_and_TD>10**-2):
                C0_D_K_and_D = 1.05

            print("C0_D_K_and_D" ,C0_D_K_and_D)
            

            # Drag correction factor for pipe roughness
            if(alpha < 0.5 ):
                Sai_CD_KC_alpha = 0.85+(6/K_C_max)
            else:
                Sai_CD_KC_alpha = 0.6+(6/K_C_max)

            print("Sai_CD_KC_alpha",Sai_CD_KC_alpha)
            

            # Drag correction factor accounting for the seabed proximity
            if(span_gap_ratio < 0.8):
                Sai_CD_proxi = 0.9+(0.5/(1+5*span_gap_ratio))
            else:
                Sai_CD_proxi = 1

            print("Sai_CD_proxi",Sai_CD_proxi)
            

            # Drag correction factor accounting for the effect of pipe in a trench
            Sai_CD_trench = 1 - ((2/3)* span_gap_ratio)
            print("Sai_CD_trench", Sai_CD_trench)
            

            # Drag Amplification Factor due to Crossflow Vibration 
            Sai_CD_VIV = 1+1.043 * (math.sqrt(2) * ratio_Az_and_TD)**2
            print("Sai_CD_VIV" ,Sai_CD_VIV) 
            

            # Drag Coefficient 
            CD = C0_D_K_and_D * Sai_CD_KC_alpha * Sai_CD_proxi * Sai_CD_trench
            print("CD",CD)
            

            # (Drag coefficient) f_alpha
            if(alpha <= 0.5):
                f_alpha = 1.6-2*alpha
            else:
                f_alpha = 0.6
            print("f_alpha " , f_alpha)
            

            # Inertia coefficient
            CM_0 = f_alpha +((5 *(2 - f_alpha))/(K_C_max+5))
            print("CM_0" , CM_0)
            

            # Inertia correction factor for pipe roughness
            Sai_CM_k = 0.75 - (0.115 * math.log10(ratio_k_and_TD))
            print("Sai_CM_K " , Sai_CM_k)
            

            # Inertia Correction Factor accounting for the Seabed Proximity 	
            if(span_gap_ratio < 0.8):			
                Sai_CM_proxi = 0.84+(0.8/(1+5*span_gap_ratio))
            else:
                Sai_CM_proxi = 1

            print("Sai_CM_proxi ", Sai_CM_proxi)
            

            # inertia correction factor Accounting for the effect of pipe in a trench
            Sai_CM_trench = 1 - (1/3)* span_gap_ratio
            print("Sai_CM_trench",Sai_CM_trench)
            

            #inertia cofficient
            CM = CM_0 *Sai_CM_k * Sai_CM_proxi* Sai_CM_trench
            print("CM", CM)
            

            #span length for cross flow ULS

            L_ULS_CR = L
            print("L_ULScr", L_ULS_CR)
            

            #static cross flow bending moment

            M_CF_Rsta = C5 * ((Q * Leff**2)/  (1+ ( Seff/Pcr)))
            print("M_CF_Rsta", M_CF_Rsta)
            

            #yield stress........................>>>>
            fy = 0.96 * SMYS
            print("fy", fy)
            

            #cross flow ULS screening criteria
            Cross_ULs = (fy*eta) - Sigma_CF_E
            print("Cross_ULs",Cross_ULs)
            


            # Ratio of Leff and span Length
            Leff_and_L = Leff/L
            print("Leff_and_L",Leff_and_L)
            

            #Leff
            Leff = Leff_and_L*L_ULS_CR
            print("Leff", Leff)
            


            #.................Indexing.......................
            self.calculate_ultimate_crossflow.insert(0,M_CF_E)
            self.calculate_ultimate_crossflow.insert(1,Sigma_CF_E)
            self.calculate_ultimate_crossflow.insert(2,Scomb_CF)
            self.calculate_ultimate_crossflow.insert(3,S_RMcomb_CF)
            self.calculate_ultimate_crossflow.insert(4,S_RM_CF)
            self.calculate_ultimate_crossflow.insert(5,ratio_Az_and_TD)
            self.calculate_ultimate_crossflow.insert(6,A_CF)
            self.calculate_ultimate_crossflow.insert(7,Rk)
            self.calculate_ultimate_crossflow.insert(8,S_LKCRcomb_CF)
            self.calculate_ultimate_crossflow.insert(9,S_LKCR_CF)
            self.calculate_ultimate_crossflow.insert(10,Sai_KC)
            self.calculate_ultimate_crossflow.insert(11,Sai_Ks)
            self.calculate_ultimate_crossflow.insert(12,Pcr)
            self.calculate_ultimate_crossflow.insert(13,k)
            self.calculate_ultimate_crossflow.insert(14,ratio_k_and_TD)
            self.calculate_ultimate_crossflow.insert(15,C0_D_K_and_D)
            self.calculate_ultimate_crossflow.insert(16,Sai_CD_KC_alpha)
            self.calculate_ultimate_crossflow.insert(17,Sai_CD_proxi)
            self.calculate_ultimate_crossflow.insert(18,Sai_CD_trench)
            self.calculate_ultimate_crossflow.insert(19,Sai_CD_VIV)
            self.calculate_ultimate_crossflow.insert(20,CD)
            self.calculate_ultimate_crossflow.insert(21,f_alpha)
            self.calculate_ultimate_crossflow.insert(22,CM_0)
            self.calculate_ultimate_crossflow.insert(23,Sai_CM_k)
            self.calculate_ultimate_crossflow.insert(24,Sai_CM_proxi)
            self.calculate_ultimate_crossflow.insert(25,Sai_CM_trench)
            self.calculate_ultimate_crossflow.insert(26,CM)
            self.calculate_ultimate_crossflow.insert(27,M_CF_Rsta)
            self.calculate_ultimate_crossflow.insert(28,Sigma_CF_Rsta)
            self.calculate_ultimate_crossflow.insert(29,Sigma_CF_H)
            self.calculate_ultimate_crossflow.insert(30,N_CF_TR)
            self.calculate_ultimate_crossflow.insert(31,Sigma_CF_N)
            self.calculate_ultimate_crossflow.insert(32,Sigma_CF_L)
            self.calculate_ultimate_crossflow.insert(33,Sigma_CF_e)
            self.calculate_ultimate_crossflow.insert(34,fy)
            self.calculate_ultimate_crossflow.insert(35,Leff_and_L)
            self.calculate_ultimate_crossflow.insert(36,Leff)
            self.calculate_ultimate_crossflow.insert(37,Cross_ULs)
            self.calculate_ultimate_crossflow.insert(38,L_ULS_CR)
            



        #............................Ultimate limit state inline flow span length................

            print("\n\tUltimate limit state inline flow span length")

            # span length for inline flow ULS
            L_ULS_IN = L
            print("L_ULS_IN",L_ULS_IN)
            

            # Euler Buckling Load
            PE = PE
            

            # Ratio of Leff and span Length
            Leff_and_L = Leff/L
            print("Leff_and_L",Leff_and_L)
            

            #Leff
            Leff = Leff_and_L*L_ULS_CR
            print("Leff", Leff)
            

            #yield stress
            fy = 0.96 * SMYS
            print("fy", fy)
            

            #  True steel wall axial force
            N_IL_TR = N_CF_TR
            print("N_IL_TR",N_IL_TR)
            

            # Wall axial stress
            Sigma_IL_N = N_IL_TR / (Ap/10**6)
            print("Sigma_IL_N",Sigma_IL_N)
            

            # Hoop Stress
            Sigma_IL_H = Sigma_CF_H
            print("Sigma_IL_H",Sigma_IL_H)
            

            # static inline bending moment
            M_inR_sta = C5 * ((Q * Leff**2)/(1 +(Seff/PE)))
            print("M_inR_sta",M_inR_sta)
            

            # static inline bending stress
            Sigma_inR_sta = (M_inR_sta * (OD/1000))/(2*(Ip/10**12))
            print("Sigma_inR_sta",Sigma_inR_sta)
            

            # Inertia coefficient
            CM = CM
            

            # Drag coefficient
            Cd = CD
            

            # Inertia force term 
            gI = (math.pi/4) * rho_w * CM * (TD/1000)**2
            print("gI",gI)
            

            #  Drag force term
            gD = 0.5 * rho_w * (TD/1000)* CD
            print("gD",gD)
            

            #  static horizontal load per unit length Max Wave
            Qhor_max = (gD + gI - ma) * Uw_dot_max
            print("Qhor_max",Qhor_max)
            

            #  resultanat lateral static loading
            Q_resultant = math.sqrt(Qhor_max**2 + Q**2) 
            print("Q_resultant",Q_resultant)
            

            # Static vertical deflection
            Delta_vertical = (C6 * Q * Leff**4)/(E* (Ip/10**12) * (1+CSF)*(1+(Seff/PE)))
            print("Delta_vertical",Delta_vertical)
            

            # span natural frequency cross flow
            f0_in = C1 * math.sqrt( 1+ CSF) * math.sqrt((E * (Ip/10**12)* (1+(Seff/PE) + (C3 *(Delta_vertical /(TD/1000))**2)))/(me*Leff**4))
            print("f0_in",f0_in)
            

            # Still water angular natural frequency
            omega1 = 2* math.pi * F_IL_1 /gamma_f
            print("omega1",omega1)
            

            # angular spectral peak frequency
            omega_p = 2 * math.pi/ Tw_100
            print("omega_p",omega_p)
            

            # angular wave frequency
            omega = 2* math.pi/Tp_100
            print("omega",omega)
            

            # Frequency transfer function
            G_omega = omega * math.cosh(1*(TD/1000)+ (e/1000))/math.sinh(1*WD)
            print("G_omega" ,G_omega)
            

            # Spectral Width Parameter 	
            if(omega <= omega_p ):
                Sigma_Sp = 0.07
            else:
                Sigma_Sp = 0.09

            print("Sigma_Sp",Sigma_Sp)
            

            # Phillip's Constant				
            Alpha_p =  (5/16) * ((Hs_100**2)*(omega**2))* (1-0.287 * math.log10(1))/(9.81**2 )
            print("Alpha_p",Alpha_p)
            

            # Spectral density Function
            S_eta_eta = Alpha_p *(9.81**2)* (omega**-5) * math.exp(((-5)/4)*((omega/omega_p)**-4)*1)**(math.exp((-0.5)*((omega - omega_p)/(Sigma_Sp* omega_p))))
            print("S_eta_eta",S_eta_eta)
            

            # Cross flow unit stress amplitude
            A_IL = A_CF
            print("A_Il",A_IL)
            

            #  Max model stress
            Sai_1 = A_IL/(TD/1000)
            print("Sai_1",Sai_1)
            

            # Gaussian Probility Density Function
            Sai_x = (1/ math.sqrt(2* math.pi)) * math.exp(1)**(-1/2*1)
            print("Sai_x",Sai_x)
            

            # Corresponding Distribution function
            Phi_x = Sai_x
            print("Phi_x",Phi_x)
            

            # Correction function
            gc = math.sqrt(2 * math.pi) * (Sai_x + (1* (Phi_x - 0.5)))
            print("gc",gc)
            

            # S.D of wave induced flow velocity
            Sigma_u = Uw_100/2
            print("Sigma_u",Sigma_u)
            

            # Linearisation constant
            b = 2.11 * Sigma_u * gc* (Uc_100/Sigma_u)
            print("b",b)
            

            # 0th Response Spectral Moment 
            S_ss = (R_D**2)*((b**2 * gD**2)+ (omega**2 * gI**2)) * (G_omega**2 * S_eta_eta * ((1.3)**2 * (Sai_1)**2)/(me**2 * ((((omega1**2) - (omega**2))**2) + (2 * zeta_h * omega1 * omega)**2) ))
            print("S_ss",S_ss)
            
            M0 = S_ss
            print("M0",M0)
            

            # Wave induced stress amplitude
            Sigma_s = math.sqrt(M0)
            print("Sigma_s" , Sigma_s)
            

            # Max Environmental Stress due to wave Loading 

            kM = 1+ (1/2)* ((Sigma_s/Sigma_s)-1)
            print("kM",kM)
            

            kp = math.sqrt(2* math.log10((1/Tu_100)* delta_SD_t))
            print("kp" ,kp)
            

            Sigma_FM_max = kp * kM * Sigma_s *1.07        # Sai_mm is taken as 1 on dependency on Sigma_s
            print("Sigma_FM_max",Sigma_FM_max)
            

            # Cross flow unit stress amplitude

            if(alpha < 0.5):
                Sai_alpha_IL = 0 
            elif(alpha>0.5 and alpha < 0.8):
                Sai_alpha_IL = (alpha-0.5)/0.3  
            else:
                Sai_alpha_IL = 1

            print("Sai_alpha_IL" , Sai_alpha_IL)
            

            # Cros flow response value
            ratio_Ay_and_TD = max(0.18 * (1-(K_sd/1.2))*0,0.13*(1-(K_sd/1.8))*0)
            print("ratio_Ay_and_TD" , ratio_Ay_and_TD)
            

            # Excited Crossflow stress range
            S_CF_IL = 0.8 * A_IL * ratio_Az_and_TD * Rk* gamma_s
            print("S_CF_IL" , S_CF_IL)
            

            # Inline induced VIV stress range
            SP_IL = 2* A_IL* ratio_Ay_and_TD* Sai_alpha_IL * gamma_s
            print("SP_IL" , SP_IL)
            

            # Response model stress range
            S_RM_IL = SP_IL * 0.5**1
            print("S_RM_IL" , S_RM_IL)
            

            # Inline Stress range
            Scomb_IL = max(SP_IL, S_CF_IL)
            print("Scomb_IL" , Scomb_IL)
            

            # Max environmental stress
            Sigma_IL_E = (0.5 * Scomb_IL) + Sigma_FM_max
            print("Sigma_IL_E" , Sigma_IL_E)
            


            # Total Axial stress
            Sigma_IL_L = Sigma_IL_N + Sigma_inR_sta + Sigma_IL_E
            print("Sigma_IL_L" , Sigma_IL_L)
            

            # Von misses stress
            Sigma_IL_e = math.sqrt((Sigma_IL_H**2 + Sigma_IL_L**2) - (Sigma_IL_H*Sigma_IL_L))
            print("Sigma_IL_e" , Sigma_IL_e)
            

            # InFLow ULS screening criteria
            Inline_ULS_Sc_Cr = (fy * eta) - Sigma_IL_e
            print("Inline_ULS_Sc_Cr" , Inline_ULS_Sc_Cr)
            

            # Max Environmental bending moment
            M_IL_E = Sigma_IL_E *(2*(Ip/10**12)/(TD/1000))
            print("M_IL_E" , M_IL_E)

            #.............Indexing................................................

            self.calculate_ultimate_inline.insert(0,M_IL_E)
            self.calculate_ultimate_inline.insert(1,Sigma_IL_E)
            self.calculate_ultimate_inline.insert(2,Scomb_IL)
            self.calculate_ultimate_inline.insert(3,S_RM_IL)
            self.calculate_ultimate_inline.insert(4,SP_IL)
            self.calculate_ultimate_inline.insert(5,ratio_Ay_and_TD)
            self.calculate_ultimate_inline.insert(6,A_IL)
            self.calculate_ultimate_inline.insert(7,Sai_alpha_IL)
            self.calculate_ultimate_inline.insert(8,S_CF_IL)
            self.calculate_ultimate_inline.insert(9,Sigma_FM_max)
            self.calculate_ultimate_inline.insert(10,kp)
            self.calculate_ultimate_inline.insert(11,kM)
            self.calculate_ultimate_inline.insert(12,Sigma_s)
            self.calculate_ultimate_inline.insert(13,M0)
            self.calculate_ultimate_inline.insert(14,S_ss)
            self.calculate_ultimate_inline.insert(15,b)
            self.calculate_ultimate_inline.insert(16,Sigma_u)
            self.calculate_ultimate_inline.insert(17,gc)
            self.calculate_ultimate_inline.insert(18,Sai_x)
            self.calculate_ultimate_inline.insert(19,Phi_x)
            self.calculate_ultimate_inline.insert(20,Sai_1)
            self.calculate_ultimate_inline.insert(21,S_eta_eta)
            self.calculate_ultimate_inline.insert(22,Alpha_p)
            self.calculate_ultimate_inline.insert(23,Sigma_Sp)
            self.calculate_ultimate_inline.insert(24,G_omega)
            self.calculate_ultimate_inline.insert(25,omega)
            self.calculate_ultimate_inline.insert(26,omega_p)
            self.calculate_ultimate_inline.insert(27,omega1)
            self.calculate_ultimate_inline.insert(28,PE)
            self.calculate_ultimate_inline.insert(29,f0_in)
            self.calculate_ultimate_inline.insert(30,Delta_vertical)
            self.calculate_ultimate_inline.insert(31,Cd)
            self.calculate_ultimate_inline.insert(32,CM)
            self.calculate_ultimate_inline.insert(33,gD)
            self.calculate_ultimate_inline.insert(34,gI)
            self.calculate_ultimate_inline.insert(35,Qhor_max)
            self.calculate_ultimate_inline.insert(36,Q_resultant)
            self.calculate_ultimate_inline.insert(37,M_inR_sta)
            self.calculate_ultimate_inline.insert(38,Sigma_inR_sta)
            self.calculate_ultimate_inline.insert(39,Sigma_IL_H)
            self.calculate_ultimate_inline.insert(40,N_IL_TR)
            self.calculate_ultimate_inline.insert(41,Sigma_IL_N)
            self.calculate_ultimate_inline.insert(42,Sigma_IL_L)
            self.calculate_ultimate_inline.insert(43,Sigma_IL_e)
            self.calculate_ultimate_inline.insert(44,fy)
            self.calculate_ultimate_inline.insert(45,Leff_and_L)
            self.calculate_ultimate_inline.insert(46,Leff)
            self.calculate_ultimate_inline.insert(47,Inline_ULS_Sc_Cr)
            self.calculate_ultimate_inline.insert(48,L_ULS_IN)
            

        #.................. _______________________________Summary____________________________

            print("\n\tSummary")

            #  Span Length for Inline Flow VIV
            L_VIV_IN = L_VIV_IN

            # self.calculate_summary.insert(0,L_VIV_IN)

            #  Span Length for Cross Flow VIV
            L_VIV_CR = L_VIV_CR
            # self.calculate_summary.insert(1,L_VIV_CR)

            #  Span Length for Cross Flow ULS
            L_ULS_CR = L_ULS_CR
            # self.calculate_summary.insert(2,L_ULS_CR)

            #  Span Length for Inline Flow ULs
            L_ULS_IN = L_ULS_IN
            # self.calculate_summary.insert(3,L_ULS_IN)

            # MAximum Deflection
            if(delta_SD < 2.5*(TD/1000)):
                message = "ACCEPTABLE"
                print(message)
            else:
                message = "NOT ACCEPTABLE"
                print(message)

            # self.calculate_summary.insert(4,message)

            #  Bar Buckling Criteria 
            if((Seff/PE) > - 0.5):
                message_2 = "CONVERGENCE"
                print()
            else:
                message_2= "DIVERGENCE"
                print(message_2)

            # self.calculate_summary.insert(5,message_2)


            #  Overall maximum alloawble Span length 
            M = (math.sqrt(abs((-0.5*(1+CSF)*math.pi**2*E*(Ip/10**12))/(C2*Seff)))*0.9)

            if ((Seff/PE) > - 0.5):
                L_allow = min(L_VIV_IN,L_VIV_CR,L_ULS_IN,L_ULS_CR)
                print("L_allow" , L_allow)
                # self.calculate_summary.insert(7,L_allow)
            else:
                L_allow = M
                print("L_allow" , L_allow)
            
            print("L_allow  :" , L_allow)
            # self.calculate_summary.insert(7,L_allow)


            # Model Length Validity

            if(L_allow<140*(TD/1000)):
                message_3 = "ACCEPTABLE"
                print(message_3)

            else:
                message_3 = "NOT ACCEPTABLE"
                print(message_3)
            
            # self.calculate_summary.insert(6,message_3)

            self.Input_tab.setCurrentIndex(1)

            self.calculate_summary.insert(0,L_VIV_IN)
            self.calculate_summary.insert(1,L_VIV_CR)
            self.calculate_summary.insert(2,L_ULS_CR)
            self.calculate_summary.insert(3,L_ULS_IN)
            self.calculate_summary.insert(4,message)
            self.calculate_summary.insert(5,message_2)
            self.calculate_summary.insert(6,message_3)
            self.calculate_summary.insert(7,L_allow)
            

        except:
            print("\t\nCALCULATION ERROR")


        
        print("yesssssss")
        self.list = []
        self.list.clear()
        # flowline peoperties
        self.list.insert(0,str(" "))
        self.list.insert(1,str(self.internal_pressure_lineEdit_2.text()))
        self.list.insert(2,str(self.pipe_outer_diameter_lineEdit_2.text()))
        self.list.insert(3,str(self.pipe_wall_thickness_lineEdit_2.text()))
        self.list.insert(4,str(self.pipe_density_lineEdit_2.text()))
        self.list.insert(5,str(self.pipe_young_modulus_lineEdit_2.text()))
        self.list.insert(6,str(self.internal_linear_thickness_lineEdit_2.text()))
        self.list.insert(7,str(self.corrosion_thickness_lineEdit_2.text()))
        self.list.insert(8,str(self.concrete_thickness_lineEdit_2.text()))
        self.list.insert(9,str(self.marine_growth_thickness_lineEdit_2.text()))
        self.list.insert(10,str(self.water_density_lineEdit_2.text()))
        self.list.insert(11,str(self.marine_growth_density_lineEdit_2.text()))
        self.list.insert(12,str(self.gap_under_pipeline_lineEdit_2.text()))
        self.list.insert(13,str(self.ambient_temperature_lineEdit_2.text()))
        self.list.insert(14,str(self.operation_temperature_lineEdit_2.text()))
        self.list.insert(15,str(self.effective_residuel_lay_tension_lineEdit_2.text()))
        self.list.insert(16,str(self.effective_axial_force_release_lineEdit_2.text()))
        self.list.insert(17,str(self.temperature_expension_coefficient_lineEdit_2.text()))
        self.list.insert(18,str(self.poisson_ratio_lineEdit_2.text()))
        self.list.insert(19,str(self.poisson_ratio_lineEdit_3.text()))
        self.list.insert(20,str(self.internal_linear_density_lineEdit_2.text()))
        self.list.insert(21,str(self.corrosion_protection_density_lineEdit_2.text()))
        self.list.insert(22,str(self.content_density_lineEdit_2.text()))
        self.list.insert(23,str(self.concrete_density_lineEdit_2.text()))


        # Environmental Data
       
        self.list.insert(24,str(" "))
        self.list.insert(25,str(" "))
        self.list.insert(26,str(self.free_span_length_lineEdit.text()))
        self.list.insert(27,str(self.water_depth_lineEdit.text()))
        self.list.insert(28,str(self.trench_depth_lineEdit.text()))
        self.list.insert(29,str(" "))
        self.list.insert(30,str(self.significant_wave_height_lineEdit_100.text()))
        self.list.insert(31,str(self.wave_period_lineEdit_100.text()))
        self.list.insert(32,str(self.peak_period_lineEdit_100.text()))
        self.list.insert(33,str(self.wave_direction_lineEdit_100.text()))
        self.list.insert(34,str(self.current_velocity_lineEdit_100.text()))
        self.list.insert(35,str(self.current_direction_lineEdit_100.text()))
        self.list.insert(36,str(" "))
        self.list.insert(37,str(self.significant_wave_height_lineEdit_10.text()))
        self.list.insert(38,str(self.wave_period_lineEdit_10.text()))
        self.list.insert(39,str(self.peak_period_lineEdit_10.text()))
        self.list.insert(40,str(self.wave_direction_lineEdit_10.text()))
        self.list.insert(41,str(self.current_velocity_lineEdit_10.text()))
        self.list.insert(42,str(self.current_direction_lineEdit_10.text()))
        self.list.insert(43,str(" "))
        self.list.insert(44,str(self.significant_wave_height_lineEdit_1yer.text()))
        self.list.insert(45,str(self.wave_period_lineEdit_1yer.text()))
        self.list.insert(46,str(self.peak_period_lineEdit_1yer.text()))
        self.list.insert(47,str(self.wave_direction_lineEdit_1yer.text()))
        self.list.insert(48,str(self.current_velocity_lineEdit_1yer.text()))
        self.list.insert(49,str(self.current_direction_lineEdit_1yer.text()))


        # Additional Data
        self.list.insert(50,str(" "))
        self.list.insert(51,str(" "))
        self.list.insert(53,str(self.safety_factor_on_Inline_frequency_lineEdit.text()))
        self.list.insert(54,str(self.safety_factor_on_crossflow_frequency_lineEdit.text()))
        self.list.insert(55,str(self.safety_factor_on_stress_range_lineEdit.text()))
        self.list.insert(56,str(self.safety_factor_on_natural_frequency_lineEdit.text()))
        self.list.insert(57,str(self.safety_on_damping_lineEdit.text()))
        self.list.insert(58,str(self.safety_factor_on_onset_of_VrIL_lineEdit.text()))
        self.list.insert(59,str(self.safety_factor_on_onset_of_VrCF_lineEdit.text()))
        self.list.insert(60,str(self.concrete_thickness_lineEdit_2.text()))
        self.list.insert(61,str(self.structural_damping_lineEdit_3.text()))
        self.list.insert(62,str(self.soil_damping_lineEdit_3.text()))
        self.list.insert(63,str(self.hydrodynamic_damping_lineEdit_3.text()))
        self.list.insert(64,str(self.inline_static_deflection_lineEdit_2.text()))
        self.list.insert(65,str(self.pressure_load_effect_factor_lineEdit_2.text()))
        self.list.insert(66,str(self.usage_factor_for_equivalent_stress_check_lineEdit_2.text()))
        self.list.insert(67,str(self.usage_factor_for_equivalent_stress_check_lineEdit_3.text()))
        self.list.insert(68,str(self.usage_factor_for_equivalent_stress_check_lineEdit_4.text()))
        self.list.insert(69,str(self.usage_factor_for_equivalent_stress_check_lineEdit_5.text()))
        self.list.insert(70,str(self.usage_factor_for_equivalent_stress_check_lineEdit_6.text()))
        self.list.insert(71,str(self.usage_factor_for_equivalent_stress_check_lineEdit_7.text()))

        # Boundary Condition
        self.list.insert(72,str(self.lineEdit_boundary_condition_C1.text()))
        self.list.insert(73,str(self.lineEdit_boundary_condition_C2.text()))
        self.list.insert(74,str(self.lineEdit_boundary_condition_C3.text()))
        self.list.insert(75,str(self.lineEdit_boundary_condition_C4.text()))
        self.list.insert(76,str(self.lineEdit_boundary_condition_C5.text()))
        self.list.insert(77,str(self.lineEdit_boundary_condition_C6.text()))
        print("Print List : ",self.list)

        
        # _____________for converting lineedit data into csv for using it in printing________________________
        # Inputs
        dict0 = {'values': self.list}
        df1k = pd.DataFrame(dict0)
        df1k.to_csv("Inputs_csv\\New_input_csv.csv",index=False)

        new_csv_data = []
        EMPTY_ROW = set([""])


        with open("Inputs_csv\\Name_inputs.csv", "r", newline="") as first_file, open("Inputs_csv\\New_input_csv.csv", "r", newline="") as second_file, open("Inputs_csv\\units.csv", "r", newline="") as third_file, open("Inputs_csv\\New_csv.csv", "w", newline="") as out_file:
            first_file_reader = csv.reader(first_file)
            second_file_reader = csv.reader(second_file)
            third_file_reader = csv.reader(third_file)
            out_file_writer = csv.writer(out_file)

    # The iterator will stop when the shortest file is finished
            for row_1, row_2,row_3 in zip(first_file_reader, second_file_reader,third_file_reader):
                # Check if the second row is empty, skipping if it is
                if not row_2 or set(row_2) == EMPTY_ROW:
                    continue

                out_file_writer.writerow(row_1 + row_2 + list(row_3))

        # Calculation
    #     dict1 = {'values2': self.calculate_general}
    #     df1k1 = pd.DataFrame(dict1)
    #     df1k1.to_csv("Calculation_csv\general.csv",index=False)

    #     dict2 = {'values2': self.calculate_avoidance}
    #     df1k2 = pd.DataFrame(dict2)
    #     df1k2.to_csv("Calculation_csv\general.csv", mode='a', header=False,index = False )

    #     dict3 = {'values2': self.calculate_fatigue}
    #     df1k3 = pd.DataFrame(dict3)
    #     df1k3.to_csv("Calculation_csv\general.csv", mode='a', header=False,index = False)

    #     dict4 = {'values2': self.calculate_viv_inline}
    #     df1k4 = pd.DataFrame(dict4)
    #     df1k4.to_csv("Calculation_csv\general.csv", mode='a', header=False,index = False)

    #     dict5 = {'values2': self.calculate_viv_crossflow}
    #     df1k5 = pd.DataFrame(dict5)
    #     df1k5.to_csv("Calculation_csv\general.csv", mode='a', header=False,index = False)

    #     dict6 = {'values2': self.calculate_ultimate_crossflow}
    #     df1k6 = pd.DataFrame(dict6)
    #     df1k6.to_csv("Calculation_csv\general.csv", mode='a', header=False,index = False)

    #     dict7 = {'values2': self.calculate_ultimate_inline}
    #     df1k7 = pd.DataFrame(dict7)
    #     df1k7.to_csv("Calculation_csv\general.csv", mode='a', header=False,index = False)

    #     dict8 = {'values2': self.calculate_summary}
    #     df1k8 = pd.DataFrame(dict8)
    #     df1k8.to_csv("Calculation_csv\general.csv", mode='a', header=False,index = False)

    #     with open("Calculation_csv\\Calculation_name_csv.csv", "r", newline="") as first_file, open("Calculation_csv\\general.csv", "r", newline="") as second_file, open("Calculation_csv\\calculation_units_csv.csv", "r", newline="") as third_file, open("Calculation_csv\\New_csv_2.csv", "w", newline="") as out_file:
    #         first_file_reader = csv.reader(first_file)
    #         second_file_reader = csv.reader(second_file)
    #         third_file_reader = csv.reader(third_file)
    #         out_file_writer = csv.writer(out_file)

    # # The iterator will stop when the shortest file is finished
    #         for row_1, row_2,row_3 in zip(first_file_reader, second_file_reader,third_file_reader):
    #             # Check if the second row is empty, skipping if it is
    #             if not row_2 or set(row_2) == EMPTY_ROW:                                
    #                 continue

    #             out_file_writer.writerow(row_1 + row_2 + list(row_3))



        
#....................testing display in calculation.......................
        # self.lineEdit_51.setText(str(TD))


#.....................All About Displaying in Calculation tab...........................................
        
        


    def general_calculation(self):
        print("general calculation")
        try:
            self.Name_51.show()
            self.symbol_51.show()
            self.lineEdit_51.show()
            self.unit_51.show()
            self.Name_52.show()
            self.symbol_52.show()
            self.lineEdit_52.show()
            self.unit_52.show()
            self.Name_53.show()
            self.symbol_53.show()
            self.lineEdit_53.show()
            self.unit_53.show()
            self.Name_54.show()
            self.symbol_54.show()
            self.lineEdit_54.show()
            self.unit_54.show()
            self.Name_55.show()
            self.symbol_55.show()
            self.lineEdit_55.show()
            self.unit_55.show()
            self.Name_56.show()
            self.symbol_56.show()
            self.lineEdit_56.show()
            self.unit_56.show()
            self.Name_57.show()
            self.symbol_57.show()
            self.lineEdit_57.show()
            self.unit_57.show()
            self.Name_58.show()
            self.symbol_58.show()
            self.lineEdit_58.show()
            self.unit_58.show()
            self.Name_59.show()
            self.symbol_59.show()
            self.lineEdit_59.show()
            self.unit_59.show()
            self.Name_60.show()
            self.symbol_60.show()
            self.lineEdit_60.show()
            self.unit_60.show()
            self.Name_61.show()
            self.symbol_61.show()
            self.lineEdit_61.show()
            self.unit_61.show()
            self.Name_62.show()
            self.symbol_62.show()
            self.lineEdit_62.show()
            self.unit_62.show()
            self.Name_63.show()
            self.symbol_63.show()
            self.lineEdit_63.show()
            self.unit_63.show()
            self.Name_64.show()
            self.symbol_64.show()
            self.lineEdit_64.show()
            self.unit_64.show()
            self.Name_65.show()
            self.symbol_65.show()
            self.lineEdit_65.show()
            self.unit_65.show()
            self.Name_66.show()
            self.symbol_66.show()
            self.lineEdit_66.show()
            self.unit_66.show()
            self.Name_67.show()
            self.symbol_67.show()
            self.lineEdit_67.show()
            self.unit_67.show()
            self.Name_68.show()
            self.symbol_68.show()
            self.lineEdit_68.show()
            self.unit_68.show()
            self.Name_69.show()
            self.symbol_69.show()
            self.lineEdit_69.show()
            self.unit_69.show()
            self.Name_70.show()
            self.symbol_70.show()
            self.lineEdit_70.show()
            self.unit_70.show()
            self.Name_71.show()
            self.symbol_71.show()
            self.lineEdit_71.show()
            self.unit_71.show()
            self.Name_72.show()
            self.symbol_72.show()
            self.lineEdit_72.show()
            self.unit_72.show()
            self.Name_73.show()
            self.symbol_73.show()
            self.lineEdit_73.show()
            self.unit_73.show()
            self.Name_74.show()
            self.symbol_74.show()
            self.lineEdit_74.show()
            self.unit_74.show()
            self.Name_75.show()
            self.symbol_75.show()
            self.lineEdit_75.show()
            self.unit_75.show()
            self.Name_76.show()
            self.symbol_76.show()
            self.lineEdit_76.show()
            self.unit_76.show()
            self.Name_77.show()
            self.symbol_77.show()
            self.lineEdit_77.show()
            self.unit_77.show()
            self.Name_78.show()
            self.symbol_78.show()
            self.lineEdit_78.show()
            self.unit_78.show()
            self.Name_79.show()
            self.symbol_79.show()
            self.lineEdit_79.show()
            self.unit_79.show()
            self.Name_80.show()
            self.symbol_80.show()
            self.lineEdit_80.show()
            self.unit_80.show()
            self.Name_81.show()
            self.symbol_81.show()
            self.lineEdit_81.show()
            self.unit_81.show()
            self.Name_82.show()
            self.symbol_82.show()
            self.lineEdit_82.show()
            self.unit_82.show()
            self.Name_83.show()
            self.symbol_83.show()
            self.lineEdit_83.show()
            self.unit_83.show()
            self.Name_51.setText("Pipe Drag Diameter                           ")
            self.symbol_51.setText("  TD         ")
            self.lineEdit_51.setText(str(self.calculate_general[0]))
            self.unit_51.setText("  mm  ")
            self.Name_52.setText("Inside Diameter                              ")
            self.symbol_52.setText("   ID          ")
            self.lineEdit_52.setText(str(self.calculate_general[1]))
            self.unit_52.setText("  mm  ")
            self.Name_53.setText("Cross Section Area                           ")
            self.symbol_53.setText(" A       ")
            self.lineEdit_53.setText(str(self.calculate_general[2]))
            self.unit_53.setText("mm\u00b2")
            self.Name_54.setText("Steel Area                                   ")
            self.symbol_54.setText("   A\u2008p         ")
            self.lineEdit_54.setText(str(self.calculate_general[3]))
            self.unit_54.setText("mm\u00b2  ")
            self.Name_55.setText("MOI of Steel Pipe                             ")
            self.symbol_55.setText("   I\u2008p         ")
            self.lineEdit_55.setText(str(self.calculate_general[4]))
            self.unit_55.setText("  mm\u2074  ")
            self.Name_56.setText("MOI of Concrete Coating                       ")
            self.symbol_56.setText(" I\u2008cc     ")
            self.lineEdit_56.setText(str(self.calculate_general[5]))
            self.unit_56.setText("mm\u2074")
            self.Name_57.setText("Current Flow Velocity Ratio Sig. Wave")
            self.symbol_57.setText("α ")
            self.lineEdit_57.setText(str(self.calculate_general[6]))
            self.unit_57.setText("  ")
            self.Name_58.setText("Mass Of Pipe                                  ")
            self.symbol_58.setText("  m\u2008p       ")
            self.lineEdit_58.setText(str(self.calculate_general[7]))
            self.unit_58.setText("kg/m")
            self.Name_59.setText("Internal Linear Mass                          ")
            self.symbol_59.setText("m\u2008il       ")
            self.lineEdit_59.setText(str(self.calculate_general[8]))
            self.unit_59.setText("kg/m")
            self.Name_60.setText("Corrosion Coating Mass                        ")
            self.symbol_60.setText("m\u2008ce     ")
            self.lineEdit_60.setText(str(self.calculate_general[9]))
            self.unit_60.setText("kg/m")
            self.Name_61.setText("Concrete Coating Mass                         ")
            self.symbol_61.setText("m\u2008cc     ")
            self.lineEdit_61.setText(str(self.calculate_general[10]))
            self.unit_61.setText("kg/m")
            self.Name_62.setText("Marine Growth Mass                            ")
            self.symbol_62.setText("   m\u2008mg  ")
            self.lineEdit_62.setText(str(self.calculate_general[11]))
            self.unit_62.setText("kg/m")
            self.Name_63.setText("Content Mass                                  ")
            self.symbol_63.setText("       m\u2008con")
            self.lineEdit_63.setText(str(self.calculate_general[12]))
            self.unit_63.setText("kg/m")
            self.Name_64.setText("Total Mass                                    ")
            self.symbol_64.setText("       m\u2008t")
            self.lineEdit_64.setText(str(self.calculate_general[13]))
            self.unit_64.setText("kg/m")
            self.Name_65.setText("Buoyancy                                      ")
            self.symbol_65.setText("          B ")
            self.lineEdit_65.setText(str(self.calculate_general[14]))
            self.unit_65.setText("kg/m")
            self.Name_66.setText("Submerged Weight of Pipe                      ")
            self.symbol_66.setText(" W\u2008s")
            self.lineEdit_66.setText(str(self.calculate_general[15]))
            self.unit_66.setText("kg/m")
            self.Name_67.setText("Span Gap Ratio                                ")
            self.symbol_67.setText("   e/TD ")
            self.lineEdit_67.setText(str(self.calculate_general[16]))
            self.unit_67.setText(" ")
            self.Name_68.setText("Relative Trench Depth                         ")
            self.symbol_68.setText("   \u0394/TD ")
            self.lineEdit_68.setText(str(self.calculate_general[17]))
            self.unit_68.setText(" ")
            self.Name_69.setText("Added Mass Coefficient                        ")
            self.symbol_69.setText("C\u2008A")
            self.lineEdit_69.setText(str(self.calculate_general[18]))
            self.unit_69.setText(" ")
            self.Name_70.setText("Added Mass Pipe                               ")
            self.symbol_70.setText("   ma")
            self.lineEdit_70.setText(str(self.calculate_general[19]))
            self.unit_70.setText("kg/m")
            self.Name_71.setText("Effective Mass                                ")
            self.symbol_71.setText("   me")
            self.lineEdit_71.setText(str(self.calculate_general[20]))
            self.unit_71.setText("kg/m")
            self.Name_72.setText("External Pressure                             ")
            self.symbol_72.setText("   Pe")
            self.lineEdit_72.setText(str(self.calculate_general[21]))
            self.unit_72.setText("Pa")
            self.Name_73.setText("Pressure Difference                           ")
            self.symbol_73.setText("   \u0394p ")
            self.lineEdit_73.setText(str(self.calculate_general[22]))
            self.unit_73.setText("Pa")
            self.Name_74.setText("Internal Area (BORE)                          ")
            self.symbol_74.setText("    Ai")
            self.lineEdit_74.setText(str(self.calculate_general[23]))
            self.unit_74.setText("mm\u00b2")
            self.Name_75.setText("External Pipe Area                            ")
            self.symbol_75.setText("   Ae")
            self.lineEdit_75.setText(str(self.calculate_general[24]))
            self.unit_75.setText("mm\u00b2")
            self.Name_76.setText("Pipe Cross Section Area                       ")
            self.symbol_76.setText("   Ap")
            self.lineEdit_76.setText(str(self.calculate_general[25]))
            self.unit_76.setText("mm\u00b2")
            self.Name_77.setText("Temperature Difference                        ")
            self.symbol_77.setText("    \u0394T ")
            self.lineEdit_77.setText(str(self.calculate_general[26]))
            self.unit_77.setText("\u00b0C")
            self.Name_78.setText("Effective Tension                             ")
            self.symbol_78.setText("    Seff")
            self.lineEdit_78.setText(str(self.calculate_general[27]))
            self.unit_78.setText("N")
            self.Name_79.setText("Total Damping Ratio                           ")
            self.symbol_79.setText("   \u03B6T")
            self.lineEdit_79.setText(str(self.calculate_general[28]))
            self.unit_79.setText(" ")
            self.Name_80.setText("Stability Parameter_Ks                        ")
            self.symbol_80.setText("  Ks")
            self.lineEdit_80.setText(str(self.calculate_general[29]))
            self.unit_80.setText(" ")
            self.Name_81.setText("Stability Parameter_Ksd                       ")
            self.symbol_81.setText("  Ksd")
            self.lineEdit_81.setText(str(self.calculate_general[30]))
            self.unit_81.setText(" ")
            self.Name_82.setText("Keulegan Carpenter Number                     ")
            self.symbol_82.setText("  KC")
            self.lineEdit_82.setText(str(self.calculate_general[31]))
            self.unit_82.setText(" ")
            self.Name_83.setText("Keulegan Carpenter Number Max                 ")
            self.symbol_83.setText("KCmax")
            self.lineEdit_83.setText(str(self.calculate_general[32]))
            self.unit_83.setText(" ")
            
            self.Name_84.hide()
            self.symbol_84.hide()
            self.lineEdit_84.hide()
            self.unit_84.hide()
            self.Name_85.hide()
            self.symbol_85.hide()
            self.lineEdit_85.hide()
            self.unit_85.hide()
            self.Name_86.hide()
            self.symbol_86.hide()
            self.lineEdit_86.hide()
            self.unit_86.hide()
            self.Name_87.hide()
            self.symbol_87.hide()
            self.lineEdit_87.hide()
            self.unit_87.hide()
            self.Name_88.hide()
            self.symbol_88.hide()
            self.lineEdit_88.hide()
            self.unit_88.hide()
            self.Name_89.hide()
            self.symbol_89.hide()
            self.lineEdit_89.hide()
            self.unit_89.hide()
            self.Name_90.hide()
            self.symbol_90.hide()
            self.lineEdit_90.hide()
            self.unit_90.hide()
            self.Name_91.hide()
            self.symbol_91.hide()
            self.lineEdit_91.hide()
            self.unit_91.hide()
            self.Name_92.hide()
            self.symbol_92.hide()
            self.lineEdit_92.hide()
            self.unit_92.hide()
            self.Name_93.hide()
            self.symbol_93.hide()
            self.lineEdit_93.hide()
            self.unit_93.hide()
            self.Name_94.hide()
            self.symbol_94.hide()
            self.lineEdit_94.hide()
            self.unit_94.hide()
            self.Name_95.hide()
            self.symbol_95.hide()
            self.lineEdit_95.hide()
            self.unit_95.hide()
            self.Name_96.hide()
            self.symbol_96.hide()
            self.lineEdit_96.hide()
            self.unit_96.hide()
            self.Name_97.hide()
            self.symbol_97.hide()
            self.lineEdit_97.hide()
            self.unit_97.hide()
            self.Name_98.hide()
            self.symbol_98.hide()
            self.lineEdit_98.hide()
            self.unit_98.hide()
            self.Name_99.hide()
            self.symbol_99.hide()
            self.lineEdit_99.hide()
            self.unit_99.hide()
            self.Name_100.hide()
            self.symbol_100.hide()
            self.lineEdit_100.hide()
            self.unit_100.hide()
        except:
            print("\n\tGeneral Calculation is having 'Error'...!!")




    def viv_avoidance_criteria_calculation(self):
        print("viv_avoidance_criteria_calculation")
        try:
            self.Name_51.setText("Peak Enhancement Factor 100 yrs")
            self.symbol_51.setText("\u03A6")
            self.lineEdit_51.setText(str(self.calculate_avoidance[0]))
            self.unit_51.setText(" ")
            self.Name_52.setText("Pierson Moskowitz Spectrum 100 yrs")
            self.symbol_52.setText("\u0393	")
            self.lineEdit_52.setText(str(self.calculate_avoidance[1]))
            self.unit_52.setText(" ")
            self.Name_53.setText("Peak Enhancement Factor 10 yrs")
            self.symbol_53.setText("\u03A6")
            self.lineEdit_53.setText(str(self.calculate_avoidance[2]))
            self.unit_53.setText(" ")
            self.Name_54.setText("Pierson Moskowitz Spectrum 10 yrs")
            self.symbol_54.setText("\u0393")
            self.lineEdit_54.setText(str(self.calculate_avoidance[3]))
            self.unit_54.setText(" ")
            self.Name_55.setText("Steady Current Velocity 100 yrs")
            self.symbol_55.setText("Uc,100-year")
            self.lineEdit_55.setText(str(self.calculate_avoidance[4]))
            self.unit_55.setText("m/s")
            self.Name_56.setText("Steady Current Velocity 10 yrs")
            self.symbol_56.setText("Uc,10-year")
            self.lineEdit_56.setText(str(self.calculate_avoidance[5]))
            self.unit_56.setText("m/s")
            self.Name_57.setText("Wave Induced Velocity 100 yrs")
            self.symbol_57.setText("Uw,100-year")
            self.lineEdit_57.setText(str(self.calculate_avoidance[6]))
            self.unit_57.setText("m/s")
            self.Name_58.setText("Wave Induced Velocity 10 yrs")
            self.symbol_58.setText("Uw,10-year")
            self.lineEdit_58.setText(str(self.calculate_avoidance[7]))
            self.unit_58.setText("m/s")
            self.Name_59.setText("Representative Flow Condition")
            self.symbol_59.setText("Uextreme")
            self.lineEdit_59.setText(str(self.calculate_avoidance[8]))
            self.unit_59.setText("m/s")
            self.Name_60.setText("Inline Onset Value for Reduced Velocity")
            self.symbol_60.setText("VILR,onset")
            self.lineEdit_60.setText(str(self.calculate_avoidance[9]))
            self.unit_60.setText(" ")
            self.Name_61.setText("Inline Lowest Natural Frequencies")
            self.symbol_61.setText("fIL,1")
            self.lineEdit_61.setText(str(self.calculate_avoidance[10]))
            self.unit_61.setText("Hz")
            self.Name_62.setText("Cross Flow Lowest Natural Frequencies")
            self.symbol_62.setText("fCF,1")
            self.lineEdit_62.setText(str(self.calculate_avoidance[11]))
            self.unit_62.setText("Hz")
            self.Name_51.show()
            self.symbol_51.show()
            self.lineEdit_51.show()
            self.unit_51.show()
            self.Name_52.show()
            self.symbol_52.show()
            self.lineEdit_52.show()
            self.unit_52.show()
            self.Name_53.show()
            self.symbol_53.show()
            self.lineEdit_53.show()
            self.unit_53.show()
            self.Name_54.show()
            self.symbol_54.show()
            self.lineEdit_54.show()
            self.unit_54.show()
            self.Name_55.show()
            self.symbol_55.show()
            self.lineEdit_55.show()
            self.unit_55.show()
            self.Name_56.show()
            self.symbol_56.show()
            self.lineEdit_56.show()
            self.unit_56.show()
            self.Name_57.show()
            self.symbol_57.show()
            self.lineEdit_57.show()
            self.unit_57.show()
            self.Name_58.show()
            self.symbol_58.show()
            self.lineEdit_58.show()
            self.unit_58.show()
            self.Name_59.show()
            self.symbol_59.show()
            self.lineEdit_59.show()
            self.unit_59.show()
            self.Name_60.show()
            self.symbol_60.show()
            self.lineEdit_60.show()
            self.unit_60.show()
            self.Name_61.show()
            self.symbol_61.show()
            self.lineEdit_61.show()
            self.unit_61.show()
            self.Name_62.show()
            self.symbol_62.show()
            self.lineEdit_62.show()
            self.unit_62.show()
            self.Name_63.hide()
            self.symbol_63.hide()
            self.lineEdit_63.hide()
            self.unit_63.hide()
            self.Name_64.hide()
            self.symbol_64.hide()
            self.lineEdit_64.hide()
            self.unit_64.hide()
            self.Name_65.hide()
            self.symbol_65.hide()
            self.lineEdit_65.hide()
            self.unit_65.hide()
            self.Name_66.hide()
            self.symbol_66.hide()
            self.lineEdit_66.hide()
            self.unit_66.hide()
            self.Name_67.hide()
            self.symbol_67.hide()
            self.lineEdit_67.hide()
            self.unit_67.hide()
            self.Name_68.hide()
            self.symbol_68.hide()
            self.lineEdit_68.hide()
            self.unit_68.hide()
            self.Name_69.hide()
            self.symbol_69.hide()
            self.lineEdit_69.hide()
            self.unit_69.hide()
            self.Name_70.hide()
            self.symbol_70.hide()
            self.lineEdit_70.hide()
            self.unit_70.hide()
            self.Name_71.hide()
            self.symbol_71.hide()
            self.lineEdit_71.hide()
            self.unit_71.hide()
            self.Name_72.hide()
            self.symbol_72.hide()
            self.lineEdit_72.hide()
            self.unit_72.hide()
            self.Name_73.hide()
            self.symbol_73.hide()
            self.lineEdit_73.hide()
            self.unit_73.hide()
            self.Name_74.hide()
            self.symbol_74.hide()
            self.lineEdit_74.hide()
            self.unit_74.hide()
            self.Name_75.hide()
            self.symbol_75.hide()
            self.lineEdit_75.hide()
            self.unit_75.hide()
            self.Name_76.hide()
            self.symbol_76.hide()
            self.lineEdit_76.hide()
            self.unit_76.hide()
            self.Name_77.hide()
            self.symbol_77.hide()
            self.lineEdit_77.hide()
            self.unit_77.hide()
            self.Name_78.hide()
            self.symbol_78.hide()
            self.lineEdit_78.hide()
            self.unit_78.hide()
            self.Name_79.hide()
            self.symbol_79.hide()
            self.lineEdit_79.hide()
            self.unit_79.hide()
            self.Name_80.hide()
            self.symbol_80.hide()
            self.lineEdit_80.hide()
            self.unit_80.hide()
            self.Name_81.hide()
            self.symbol_81.hide()
            self.lineEdit_81.hide()
            self.unit_81.hide()
            self.Name_82.hide()
            self.symbol_82.hide()
            self.lineEdit_82.hide()
            self.unit_82.hide()
            self.Name_83.hide()
            self.symbol_83.hide()
            self.lineEdit_83.hide()
            self.unit_83.hide()
            self.Name_84.hide()
            self.symbol_84.hide()
            self.lineEdit_84.hide()
            self.unit_84.hide()
            self.Name_85.hide()
            self.symbol_85.hide()
            self.lineEdit_85.hide()
            self.unit_85.hide()
            self.Name_86.hide()
            self.symbol_86.hide()
            self.lineEdit_86.hide()
            self.unit_86.hide()
            self.Name_87.hide()
            self.symbol_87.hide()
            self.lineEdit_87.hide()
            self.unit_87.hide()
            self.Name_88.hide()
            self.symbol_88.hide()
            self.lineEdit_88.hide()
            self.unit_88.hide()
            self.Name_89.hide()
            self.symbol_89.hide()
            self.lineEdit_89.hide()
            self.unit_89.hide()
            self.Name_90.hide()
            self.symbol_90.hide()
            self.lineEdit_90.hide()
            self.unit_90.hide()
            self.Name_91.hide()
            self.symbol_91.hide()
            self.lineEdit_91.hide()
            self.unit_91.hide()
            self.Name_92.hide()
            self.symbol_92.hide()
            self.lineEdit_92.hide()
            self.unit_92.hide()
            self.Name_93.hide()
            self.symbol_93.hide()
            self.lineEdit_93.hide()
            self.unit_93.hide()
            self.Name_94.hide()
            self.symbol_94.hide()
            self.lineEdit_94.hide()
            self.unit_94.hide()
            self.Name_95.hide()
            self.symbol_95.hide()
            self.lineEdit_95.hide()
            self.unit_95.hide()
            self.Name_96.hide()
            self.symbol_96.hide()
            self.lineEdit_96.hide()
            self.unit_96.hide()
            self.Name_97.hide()
            self.symbol_97.hide()
            self.lineEdit_97.hide()
            self.unit_97.hide()
            self.Name_98.hide()
            self.symbol_98.hide()
            self.lineEdit_98.hide()
            self.unit_98.hide()
            self.Name_99.hide()
            self.symbol_99.hide()
            self.lineEdit_99.hide()
            self.unit_99.hide()
            self.Name_100.hide()
            self.symbol_100.hide()
            self.lineEdit_100.hide()
            self.unit_100.hide()
        except:
            print("\n\tviv_avoidance_criteria_calculation is having 'Error'")
        



    def screening_fatigue_criteria_calculation(self):
        print("screening_fatigue_criteria_calculation")
        try:
            self.Name_51.setText("Peak Enhancement Factor 1 yrs")
            self.symbol_51.setText("\u03A6")
            self.lineEdit_51.setText(str(self.calculate_fatigue[0]))
            self.unit_51.setText(" ")
            self.Name_52.setText("Pierson Moskowitz Spectrum 1 yrs")
            self.symbol_52.setText("\u0393")
            self.lineEdit_52.setText(str(self.calculate_fatigue[1]))
            self.unit_52.setText(" ")
            self.Name_53.setText("Steady Current Velocity 1 yrs")
            self.symbol_53.setText("Uc,1-year")
            self.lineEdit_53.setText(str(self.calculate_fatigue[2]))
            self.unit_53.setText("m/s")
            self.Name_54.setText("Wave Induced Velocity 1 yrs")
            self.symbol_54.setText("Uw,1-year")
            self.lineEdit_54.setText(str(self.calculate_fatigue[3]))
            self.unit_54.setText("m/s")
            self.Name_55.setText("Seabed Correction Factor")
            self.symbol_55.setText("\u03A8 proxi,onset")
            self.lineEdit_55.setText(str(self.calculate_fatigue[4]))
            self.unit_55.setText(" ")
            self.Name_56.setText("Trench Correction Factor")
            self.symbol_56.setText("\u03A8 trench,onset")
            self.lineEdit_56.setText(str(self.calculate_fatigue[5]))
            self.unit_56.setText(" ")
            self.Name_57.setText("Cross Flow Onset Value for Reduced Velocity")
            self.symbol_57.setText("VCFR,onset")
            self.lineEdit_57.setText(str(self.calculate_fatigue[6]))
            self.unit_57.setText("m/s")
            self.Name_58.setText("Inline Natural Frequencies_1")
            self.symbol_58.setText(" ")
            self.lineEdit_58.setText(str(self.calculate_fatigue[7]))
            self.unit_58.setText("Hz")
            self.Name_59.setText("Inline Natural Frequencies_2")
            self.symbol_59.setText(" ")
            self.lineEdit_59.setText(str(self.calculate_fatigue[8]))
            self.unit_59.setText("Hz")
            self.Name_60.setText("Cross Flow Natural Frequencies_1")
            self.symbol_60.setText(" ")
            self.lineEdit_60.setText(str(self.calculate_fatigue[9]))
            self.unit_60.setText("Hz")
            self.Name_61.setText("Cross Flow Natural Frequencies_2")
            self.symbol_61.setText(" ")
            self.lineEdit_61.setText(str(self.calculate_fatigue[10]))
            self.unit_61.setText("Hz")
            self.Name_62.setText("Screening Fatigue Criteria for Inline")
            self.symbol_62.setText(" ")
            self.lineEdit_62.setText(str(self.calculate_fatigue[11]))
            self.unit_62.setText(" ")
            self.Name_63.setText("Screening Fatigue Criteria for Cross Flow")
            self.symbol_63.setText(" ")
            self.lineEdit_63.setText(str(self.calculate_fatigue[12]))
            self.unit_63.setText(" ")
            self.Name_51.show()
            self.symbol_51.show()
            self.lineEdit_51.show()
            self.unit_51.show()
            self.Name_52.show()
            self.symbol_52.show()
            self.lineEdit_52.show()
            self.unit_52.show()
            self.Name_53.show()
            self.symbol_53.show()
            self.lineEdit_53.show()
            self.unit_53.show()
            self.Name_54.show()
            self.symbol_54.show()
            self.lineEdit_54.show()
            self.unit_54.show()
            self.Name_55.show()
            self.symbol_55.show()
            self.lineEdit_55.show()
            self.unit_55.show()
            self.Name_56.show()
            self.symbol_56.show()
            self.lineEdit_56.show()
            self.unit_56.show()
            self.Name_57.show()
            self.symbol_57.show()
            self.lineEdit_57.show()
            self.unit_57.show()
            self.Name_58.show()
            self.symbol_58.show()
            self.lineEdit_58.show()
            self.unit_58.show()
            self.Name_59.show()
            self.symbol_59.show()
            self.lineEdit_59.show()
            self.unit_59.show()
            self.Name_60.show()
            self.symbol_60.show()
            self.lineEdit_60.show()
            self.unit_60.show()
            self.Name_61.show()
            self.symbol_61.show()
            self.lineEdit_61.show()
            self.unit_61.show()
            self.Name_62.show()
            self.symbol_62.show()
            self.lineEdit_62.show()
            self.unit_62.show()
            self.Name_63.show()
            self.symbol_63.show()
            self.lineEdit_63.show()
            self.unit_63.show()
            self.Name_64.hide()
            self.symbol_64.hide()
            self.lineEdit_64.hide()
            self.unit_64.hide()
            self.Name_65.hide()
            self.symbol_65.hide()
            self.lineEdit_65.hide()
            self.unit_65.hide()
            self.Name_66.hide()
            self.symbol_66.hide()
            self.lineEdit_66.hide()
            self.unit_66.hide()
            self.Name_67.hide()
            self.symbol_67.hide()
            self.lineEdit_67.hide()
            self.unit_67.hide()
            self.Name_68.hide()
            self.symbol_68.hide()
            self.lineEdit_68.hide()
            self.unit_68.hide()
            self.Name_69.hide()
            self.symbol_69.hide()
            self.lineEdit_69.hide()
            self.unit_69.hide()
            self.Name_70.hide()
            self.symbol_70.hide()
            self.lineEdit_70.hide()
            self.unit_70.hide()
            self.Name_71.hide()
            self.symbol_71.hide()
            self.lineEdit_71.hide()
            self.unit_71.hide()
            self.Name_72.hide()
            self.symbol_72.hide()
            self.lineEdit_72.hide()
            self.unit_72.hide()
            self.Name_73.hide()
            self.symbol_73.hide()
            self.lineEdit_73.hide()
            self.unit_73.hide()
            self.Name_74.hide()
            self.symbol_74.hide()
            self.lineEdit_74.hide()
            self.unit_74.hide()
            self.Name_75.hide()
            self.symbol_75.hide()
            self.lineEdit_75.hide()
            self.unit_75.hide()
            self.Name_76.hide()
            self.symbol_76.hide()
            self.lineEdit_76.hide()
            self.unit_76.hide()
            self.Name_77.hide()
            self.symbol_77.hide()
            self.lineEdit_77.hide()
            self.unit_77.hide()
            self.Name_78.hide()
            self.symbol_78.hide()
            self.lineEdit_78.hide()
            self.unit_78.hide()
            self.Name_79.hide()
            self.symbol_79.hide()
            self.lineEdit_79.hide()
            self.unit_79.hide()
            self.Name_80.hide()
            self.symbol_80.hide()
            self.lineEdit_80.hide()
            self.unit_80.hide()
            self.Name_81.hide()
            self.symbol_81.hide()
            self.lineEdit_81.hide()
            self.unit_81.hide()
            self.Name_82.hide()
            self.symbol_82.hide()
            self.lineEdit_82.hide()
            self.unit_82.hide()
            self.Name_83.hide()
            self.symbol_83.hide()
            self.lineEdit_83.hide()
            self.unit_83.hide()
            self.Name_84.hide()
            self.symbol_84.hide()
            self.lineEdit_84.hide()
            self.unit_84.hide()
            self.Name_85.hide()
            self.symbol_85.hide()
            self.lineEdit_85.hide()
            self.unit_85.hide()
            self.Name_86.hide()
            self.symbol_86.hide()
            self.lineEdit_86.hide()
            self.unit_86.hide()
            self.Name_87.hide()
            self.symbol_87.hide()
            self.lineEdit_87.hide()
            self.unit_87.hide()
            self.Name_88.hide()
            self.symbol_88.hide()
            self.lineEdit_88.hide()
            self.unit_88.hide()
            self.Name_89.hide()
            self.symbol_89.hide()
            self.lineEdit_89.hide()
            self.unit_89.hide()
            self.Name_90.hide()
            self.symbol_90.hide()
            self.lineEdit_90.hide()
            self.unit_90.hide()
            self.Name_91.hide()
            self.symbol_91.hide()
            self.lineEdit_91.hide()
            self.unit_91.hide()
            self.Name_92.hide()
            self.symbol_92.hide()
            self.lineEdit_92.hide()
            self.unit_92.hide()
            self.Name_93.hide()
            self.symbol_93.hide()
            self.lineEdit_93.hide()
            self.unit_93.hide()
            self.Name_94.hide()
            self.symbol_94.hide()
            self.lineEdit_94.hide()
            self.unit_94.hide()
            self.Name_95.hide()
            self.symbol_95.hide()
            self.lineEdit_95.hide()
            self.unit_95.hide()
            self.Name_96.hide()
            self.symbol_96.hide()
            self.lineEdit_96.hide()
            self.unit_96.hide()
            self.Name_97.hide()
            self.symbol_97.hide()
            self.lineEdit_97.hide()
            self.unit_97.hide()
            self.Name_98.hide()
            self.symbol_98.hide()
            self.lineEdit_98.hide()
            self.unit_98.hide()
            self.Name_99.hide()
            self.symbol_99.hide()
            self.lineEdit_99.hide()
            self.unit_99.hide()
            self.Name_100.hide()
            self.symbol_100.hide()
            self.lineEdit_100.hide()
            self.unit_100.hide()
        except:
            print("\n\tscreening_fatigue_criteria_calculation is having 'ERROR'.....!!")
        



    def viv_inline_spanlength_calculation(self):
        print("viv_inline_spanlength_calculation")
        try:
            self.Name_51.setText("Euler Buckling")
            self.symbol_51.setText("PE")
            self.lineEdit_51.setText(str(self.calculate_viv_inline[0]))
            self.unit_51.setText("N")
            self.Name_52.setText("Inline Onset Value for Reduced Velocity")
            self.symbol_52.setText("VILR,onset")
            self.lineEdit_52.setText(str(self.calculate_viv_inline[1]))
            self.unit_52.setText(" ")
            self.Name_53.setText("Leff by L")
            self.symbol_53.setText("Leff/L")
            self.lineEdit_53.setText(str(self.calculate_viv_inline[2]))
            self.unit_53.setText(" ")
            self.Name_54.setText("Leff")
            self.symbol_54.setText("Leff")
            self.lineEdit_54.setText(str(self.calculate_viv_inline[3]))
            self.unit_54.setText("m")
            self.Name_55.setText("Fundamental Natural Frequency_f1")
            self.symbol_55.setText(" ")
            self.lineEdit_55.setText(str(self.calculate_viv_inline[4]))
            self.unit_55.setText(" ")
            self.Name_56.setText("Inline Screening Criteria")
            self.symbol_56.setText("f1")
            self.lineEdit_56.setText(str(self.calculate_viv_inline[5]))
            self.unit_56.setText("Hz")
            self.Name_57.setText("Span Length for Inline Flow VIV")
            self.symbol_57.setText("LVIV ,in")
            self.lineEdit_57.setText(str(self.calculate_viv_inline[6]))
            self.unit_57.setText("m")
            self.Name_51.show()
            self.symbol_51.show()
            self.lineEdit_51.show()
            self.unit_51.show()
            self.Name_52.show()
            self.symbol_52.show()
            self.lineEdit_52.show()
            self.unit_52.show()
            self.Name_53.show()
            self.symbol_53.show()
            self.lineEdit_53.show()
            self.unit_53.show()
            self.Name_54.show()
            self.symbol_54.show()
            self.lineEdit_54.show()
            self.unit_54.show()
            self.Name_55.show()
            self.symbol_55.show()
            self.lineEdit_55.show()
            self.unit_55.show()
            self.Name_56.show()
            self.symbol_56.show()
            self.lineEdit_56.show()
            self.unit_56.show()
            self.Name_57.show()
            self.symbol_57.show()
            self.lineEdit_57.show()
            self.unit_57.show()
            self.Name_58.hide()
            self.symbol_58.hide()
            self.lineEdit_58.hide()
            self.unit_58.hide()
            self.Name_59.hide()
            self.symbol_59.hide()
            self.lineEdit_59.hide()
            self.unit_59.hide()
            self.Name_60.hide()
            self.symbol_60.hide()
            self.lineEdit_60.hide()
            self.unit_60.hide()
            self.Name_61.hide()
            self.symbol_61.hide()
            self.lineEdit_61.hide()
            self.unit_61.hide()
            self.Name_62.hide()
            self.symbol_62.hide()
            self.lineEdit_62.hide()
            self.unit_62.hide()
            self.Name_63.hide()
            self.symbol_63.hide()
            self.lineEdit_63.hide()
            self.unit_63.hide()
            self.Name_64.hide()
            self.symbol_64.hide()
            self.lineEdit_64.hide()
            self.unit_64.hide()
            self.Name_65.hide()
            self.symbol_65.hide()
            self.lineEdit_65.hide()
            self.unit_65.hide()
            self.Name_66.hide()
            self.symbol_66.hide()
            self.lineEdit_66.hide()
            self.unit_66.hide()
            self.Name_67.hide()
            self.symbol_67.hide()
            self.lineEdit_67.hide()
            self.unit_67.hide()
            self.Name_68.hide()
            self.symbol_68.hide()
            self.lineEdit_68.hide()
            self.unit_68.hide()
            self.Name_69.hide()
            self.symbol_69.hide()
            self.lineEdit_69.hide()
            self.unit_69.hide()
            self.Name_70.hide()
            self.symbol_70.hide()
            self.lineEdit_70.hide()
            self.unit_70.hide()
            self.Name_71.hide()
            self.symbol_71.hide()
            self.lineEdit_71.hide()
            self.unit_71.hide()
            self.Name_72.hide()
            self.symbol_72.hide()
            self.lineEdit_72.hide()
            self.unit_72.hide()
            self.Name_73.hide()
            self.symbol_73.hide()
            self.lineEdit_73.hide()
            self.unit_73.hide()
            self.Name_74.hide()
            self.symbol_74.hide()
            self.lineEdit_74.hide()
            self.unit_74.hide()
            self.Name_75.hide()
            self.symbol_75.hide()
            self.lineEdit_75.hide()
            self.unit_75.hide()
            self.Name_76.hide()
            self.symbol_76.hide()
            self.lineEdit_76.hide()
            self.unit_76.hide()
            self.Name_77.hide()
            self.symbol_77.hide()
            self.lineEdit_77.hide()
            self.unit_77.hide()
            self.Name_78.hide()
            self.symbol_78.hide()
            self.lineEdit_78.hide()
            self.unit_78.hide()
            self.Name_79.hide()
            self.symbol_79.hide()
            self.lineEdit_79.hide()
            self.unit_79.hide()
            self.Name_80.hide()
            self.symbol_80.hide()
            self.lineEdit_80.hide()
            self.unit_80.hide()
            self.Name_81.hide()
            self.symbol_81.hide()
            self.lineEdit_81.hide()
            self.unit_81.hide()
            self.Name_82.hide()
            self.symbol_82.hide()
            self.lineEdit_82.hide()
            self.unit_82.hide()
            self.Name_83.hide()
            self.symbol_83.hide()
            self.lineEdit_83.hide()
            self.unit_83.hide()
            self.Name_84.hide()
            self.symbol_84.hide()
            self.lineEdit_84.hide()
            self.unit_84.hide()
            self.Name_85.hide()
            self.symbol_85.hide()
            self.lineEdit_85.hide()
            self.unit_85.hide()
            self.Name_86.hide()
            self.symbol_86.hide()
            self.lineEdit_86.hide()
            self.unit_86.hide()
            self.Name_87.hide()
            self.symbol_87.hide()
            self.lineEdit_87.hide()
            self.unit_87.hide()
            self.Name_88.hide()
            self.symbol_88.hide()
            self.lineEdit_88.hide()
            self.unit_88.hide()
            self.Name_89.hide()
            self.symbol_89.hide()
            self.lineEdit_89.hide()
            self.unit_89.hide()
            self.Name_90.hide()
            self.symbol_90.hide()
            self.lineEdit_90.hide()
            self.unit_90.hide()
            self.Name_91.hide()
            self.symbol_91.hide()
            self.lineEdit_91.hide()
            self.unit_91.hide()
            self.Name_92.hide()
            self.symbol_92.hide()
            self.lineEdit_92.hide()
            self.unit_92.hide()
            self.Name_93.hide()
            self.symbol_93.hide()
            self.lineEdit_93.hide()
            self.unit_93.hide()
            self.Name_94.hide()
            self.symbol_94.hide()
            self.lineEdit_94.hide()
            self.unit_94.hide()
            self.Name_95.hide()
            self.symbol_95.hide()
            self.lineEdit_95.hide()
            self.unit_95.hide()
            self.Name_96.hide()
            self.symbol_96.hide()
            self.lineEdit_96.hide()
            self.unit_96.hide()
            self.Name_97.hide()
            self.symbol_97.hide()
            self.lineEdit_97.hide()
            self.unit_97.hide()
            self.Name_98.hide()
            self.symbol_98.hide()
            self.lineEdit_98.hide()
            self.unit_98.hide()
            self.Name_99.hide()
            self.symbol_99.hide()
            self.lineEdit_99.hide()
            self.unit_99.hide()
            self.Name_100.hide()
            self.symbol_100.hide()
            self.lineEdit_100.hide()
            self.unit_100.hide()
        except:
            print("\n\tviv_inline_spanlength_calculation is having 'ERROR'....!!!")

        



    def viv_crossflow_spanlength_calculation(self):
        print("viv_crossflow_spanlength_calculation")
        try:
            self.Name_51.setText("Euler Buckling")
            self.symbol_51.setText("PE")
            self.lineEdit_51.setText(str(self.calculate_viv_crossflow[0]))
            self.unit_51.setText("N")
            self.Name_52.setText("Seabed Correction Factor")
            self.symbol_52.setText("\u03A8 proxi,onset")
            self.lineEdit_52.setText(str(self.calculate_viv_crossflow[1]))
            self.unit_52.setText(" ")
            self.Name_53.setText("Trench Correction Factor")
            self.symbol_53.setText("\u03A8 trench,onset")
            self.lineEdit_53.setText(str(self.calculate_viv_crossflow[2]))
            self.unit_53.setText(" ")
            self.Name_54.setText("Cross Flow Onset Value for Reduced Velocity")
            self.symbol_54.setText("VCFR,onset")
            self.lineEdit_54.setText(str(self.calculate_viv_crossflow[3]))
            self.unit_54.setText("m/s")
            self.Name_55.setText("Deflection Load Per Unit Length")
            self.symbol_55.setText("Q")
            self.lineEdit_55.setText(str(self.calculate_viv_crossflow[4]))
            self.unit_55.setText("N/m")
            self.Name_56.setText("Static Deflection")
            self.symbol_56.setText("\u03B4	")
            self.lineEdit_56.setText(str(self.calculate_viv_crossflow[5]))
            self.unit_56.setText("m")
            self.Name_57.setText("Leff by L")
            self.symbol_57.setText("Leff/L")
            self.lineEdit_57.setText(str(self.calculate_viv_crossflow[6]))
            self.unit_57.setText(" ")
            self.Name_58.setText("Leff")
            self.symbol_58.setText("Leff")
            self.lineEdit_58.setText(str(self.calculate_viv_crossflow[7]))
            self.unit_58.setText("m")
            self.Name_59.setText("Fundamental Natural Frequency_f1")
            self.symbol_59.setText(" ")
            self.lineEdit_59.setText(str(self.calculate_viv_crossflow[8]))
            self.unit_59.setText(" Hz")
            self.Name_60.setText("Cross Flow Screening Criteria")
            self.symbol_60.setText(" ")
            self.lineEdit_60.setText(str(self.calculate_viv_crossflow[9]))
            self.unit_60.setText(" ")
            self.Name_61.setText("Span Length for Cross Flow VIV")
            self.symbol_61.setText("LVIV CR")
            self.lineEdit_61.setText(str(self.calculate_viv_crossflow[10]))
            self.unit_61.setText("m")
            self.Name_51.show()
            self.symbol_51.show()
            self.lineEdit_51.show()
            self.unit_51.show()
            self.Name_52.show()
            self.symbol_52.show()
            self.lineEdit_52.show()
            self.unit_52.show()
            self.Name_53.show()
            self.symbol_53.show()
            self.lineEdit_53.show()
            self.unit_53.show()
            self.Name_54.show()
            self.symbol_54.show()
            self.lineEdit_54.show()
            self.unit_54.show()
            self.Name_55.show()
            self.symbol_55.show()
            self.lineEdit_55.show()
            self.unit_55.show()
            self.Name_56.show()
            self.symbol_56.show()
            self.lineEdit_56.show()
            self.unit_56.show()
            self.Name_57.show()
            self.symbol_57.show()
            self.lineEdit_57.show()
            self.unit_57.show()
            self.Name_58.show()
            self.symbol_58.show()
            self.lineEdit_58.show()
            self.unit_58.show()
            self.Name_59.show()
            self.symbol_59.show()
            self.lineEdit_59.show()
            self.unit_59.show()
            self.Name_60.show()
            self.symbol_60.show()
            self.lineEdit_60.show()
            self.unit_60.show()
            self.Name_61.show()
            self.symbol_61.show()
            self.lineEdit_61.show()
            self.unit_61.show()
            self.Name_62.hide()
            self.symbol_62.hide()
            self.lineEdit_62.hide()
            self.unit_62.hide()
            self.Name_63.hide()
            self.symbol_63.hide()
            self.lineEdit_63.hide()
            self.unit_63.hide()
            self.Name_64.hide()
            self.symbol_64.hide()
            self.lineEdit_64.hide()
            self.unit_64.hide()
            self.Name_65.hide()
            self.symbol_65.hide()
            self.lineEdit_65.hide()
            self.unit_65.hide()
            self.Name_66.hide()
            self.symbol_66.hide()
            self.lineEdit_66.hide()
            self.unit_66.hide()
            self.Name_67.hide()
            self.symbol_67.hide()
            self.lineEdit_67.hide()
            self.unit_67.hide()
            self.Name_68.hide()
            self.symbol_68.hide()
            self.lineEdit_68.hide()
            self.unit_68.hide()
            self.Name_69.hide()
            self.symbol_69.hide()
            self.lineEdit_69.hide()
            self.unit_69.hide()
            self.Name_70.hide()
            self.symbol_70.hide()
            self.lineEdit_70.hide()
            self.unit_70.hide()
            self.Name_71.hide()
            self.symbol_71.hide()
            self.lineEdit_71.hide()
            self.unit_71.hide()
            self.Name_72.hide()
            self.symbol_72.hide()
            self.lineEdit_72.hide()
            self.unit_72.hide()
            self.Name_73.hide()
            self.symbol_73.hide()
            self.lineEdit_73.hide()
            self.unit_73.hide()
            self.Name_74.hide()
            self.symbol_74.hide()
            self.lineEdit_74.hide()
            self.unit_74.hide()
            self.Name_75.hide()
            self.symbol_75.hide()
            self.lineEdit_75.hide()
            self.unit_75.hide()
            self.Name_76.hide()
            self.symbol_76.hide()
            self.lineEdit_76.hide()
            self.unit_76.hide()
            self.Name_77.hide()
            self.symbol_77.hide()
            self.lineEdit_77.hide()
            self.unit_77.hide()
            self.Name_78.hide()
            self.symbol_78.hide()
            self.lineEdit_78.hide()
            self.unit_78.hide()
            self.Name_79.hide()
            self.symbol_79.hide()
            self.lineEdit_79.hide()
            self.unit_79.hide()
            self.Name_80.hide()
            self.symbol_80.hide()
            self.lineEdit_80.hide()
            self.unit_80.hide()
            self.Name_81.hide()
            self.symbol_81.hide()
            self.lineEdit_81.hide()
            self.unit_81.hide()
            self.Name_82.hide()
            self.symbol_82.hide()
            self.lineEdit_82.hide()
            self.unit_82.hide()
            self.Name_83.hide()
            self.symbol_83.hide()
            self.lineEdit_83.hide()
            self.unit_83.hide()
            self.Name_84.hide()
            self.symbol_84.hide()
            self.lineEdit_84.hide()
            self.unit_84.hide()
            self.Name_85.hide()
            self.symbol_85.hide()
            self.lineEdit_85.hide()
            self.unit_85.hide()
            self.Name_86.hide()
            self.symbol_86.hide()
            self.lineEdit_86.hide()
            self.unit_86.hide()
            self.Name_87.hide()
            self.symbol_87.hide()
            self.lineEdit_87.hide()
            self.unit_87.hide()
            self.Name_88.hide()
            self.symbol_88.hide()
            self.lineEdit_88.hide()
            self.unit_88.hide()
            self.Name_89.hide()
            self.symbol_89.hide()
            self.lineEdit_89.hide()
            self.unit_89.hide()
            self.Name_90.hide()
            self.symbol_90.hide()
            self.lineEdit_90.hide()
            self.unit_90.hide()
            self.Name_91.hide()
            self.symbol_91.hide()
            self.lineEdit_91.hide()
            self.unit_91.hide()
            self.Name_92.hide()
            self.symbol_92.hide()
            self.lineEdit_92.hide()
            self.unit_92.hide()
            self.Name_93.hide()
            self.symbol_93.hide()
            self.lineEdit_93.hide()
            self.unit_93.hide()
            self.Name_94.hide()
            self.symbol_94.hide()
            self.lineEdit_94.hide()
            self.unit_94.hide()
            self.Name_95.hide()
            self.symbol_95.hide()
            self.lineEdit_95.hide()
            self.unit_95.hide()
            self.Name_96.hide()
            self.symbol_96.hide()
            self.lineEdit_96.hide()
            self.unit_96.hide()
            self.Name_97.hide()
            self.symbol_97.hide()
            self.lineEdit_97.hide()
            self.unit_97.hide()
            self.Name_98.hide()
            self.symbol_98.hide()
            self.lineEdit_98.hide()
            self.unit_98.hide()
            self.Name_99.hide()
            self.symbol_99.hide()
            self.lineEdit_99.hide()
            self.unit_99.hide()
            self.Name_100.hide()
            self.symbol_100.hide()
            self.lineEdit_100.hide()
            self.unit_100.hide()
        except:
            print("\n\tviv_crossflow_spanlength_calculation is having 'ERROR'...!!")






    def ultimate_limit_state_crossflow_spanlength_calculation(self):
        print("ultimate_limit_state_crossflow_spanlength_calculation")
        print(self.calculate_ultimate_crossflow)
        try:
            self.Name_51.setText("Max Environmental Bending Moment_1")
            self.symbol_51.setText("MCF E")
            self.lineEdit_51.setText(str(self.calculate_ultimate_crossflow[0]))
            self.unit_51.setText("N-m")
            self.Name_52.setText("Max Environmental Stress")
            self.symbol_52.setText("\u03C3	")
            self.lineEdit_52.setText(str(self.calculate_ultimate_crossflow[1]))
            self.unit_52.setText("Pa")
            self.Name_53.setText("Cross Flow Stress Range")
            self.symbol_53.setText("Scomb,CF")
            self.lineEdit_53.setText(str(self.calculate_ultimate_crossflow[2]))
            self.unit_53.setText("Pa")
            self.Name_54.setText("Combind Respone Model Stress Range")
            self.symbol_54.setText("SRMcomb,CF")
            self.lineEdit_54.setText(str(self.calculate_ultimate_crossflow[3]))
            self.unit_54.setText("Pa")
            self.Name_55.setText("Cross Flow induced VIV Stress Range")
            self.symbol_55.setText("SRMCF")
            self.lineEdit_55.setText(str(self.calculate_ultimate_crossflow[4]))
            self.unit_55.setText("Pa")
            self.Name_56.setText("Cross Flow Responce Value")
            self.symbol_56.setText("AZ/TD")
            self.lineEdit_56.setText(str(self.calculate_ultimate_crossflow[5]))
            self.unit_56.setText(" ")
            self.Name_57.setText("Cross Flow Unit Stress Amplitude")
            self.symbol_57.setText("ACF")
            self.lineEdit_57.setText(str(self.calculate_ultimate_crossflow[6]))
            self.unit_57.setText("Pa")
            self.Name_58.setText("Cross Flow Reduction Factor")
            self.symbol_58.setText("Rk")
            self.lineEdit_58.setText(str(self.calculate_ultimate_crossflow[7]))
            self.unit_58.setText(" ")
            self.Name_59.setText("Combind LKCR Responce Model Stress Range")
            self.symbol_59.setText("SLKCRcomb,CF")
            self.lineEdit_59.setText(str(self.calculate_ultimate_crossflow[8]))
            self.unit_59.setText("Pa")
            self.Name_60.setText("Associated Cross Flow Induced VIV Stress Range")
            self.symbol_60.setText("SLKCR_CF")
            self.lineEdit_60.setText(str(self.calculate_ultimate_crossflow[9]))
            self.unit_60.setText("Pa")
            self.Name_61.setText("LKCR Reduction Factor")
            self.symbol_61.setText("\u03A8 KC")
            self.lineEdit_61.setText(str(self.calculate_ultimate_crossflow[10]))
            self.unit_61.setText(" ")
            self.Name_62.setText("LKCR Stability Factor")
            self.symbol_62.setText("\u03A8 KS")
            self.lineEdit_62.setText(str(self.calculate_ultimate_crossflow[11]))
            self.unit_62.setText(" ")
            self.Name_63.setText("Euler Buckling Load")
            self.symbol_63.setText("PCR")
            self.lineEdit_63.setText(str(self.calculate_ultimate_crossflow[12]))
            self.unit_63.setText("N")
            self.Name_64.setText("Surface Roughness (concrete)")
            self.symbol_64.setText("k")
            self.lineEdit_64.setText(str(self.calculate_ultimate_crossflow[13]))
            self.unit_64.setText("m")
            self.Name_65.setText("Ratio b/w Roughness and OD")
            self.symbol_65.setText(" ")
            self.lineEdit_65.setText(str(self.calculate_ultimate_crossflow[14]))
            self.unit_65.setText(" ")
            self.Name_66.setText("Basic Drag Coefficient for Steady Flow")
            self.symbol_66.setText("C\u00b0D(k/D)")
            self.lineEdit_66.setText(str(self.calculate_ultimate_crossflow[15]))
            self.unit_66.setText(" ")
            self.Name_67.setText("Drag Correction Factor for Pipe Roughness")
            self.symbol_67.setText("\u03A8 CD KC,\u03B1	")
            self.lineEdit_67.setText(str(self.calculate_ultimate_crossflow[16]))
            self.unit_67.setText(" ")
            self.Name_68.setText("Drag Correction Factor Accounting for the Seabed Proximity")
            self.symbol_68.setText("\u03A8 CD proxi")
            self.lineEdit_68.setText(str(self.calculate_ultimate_crossflow[17]))
            self.unit_68.setText(" ")
            self.Name_69.setText("Drag Correction Factor Accounting for the Effect of Pipe in Trench")
            self.symbol_69.setText("\u03A8 CD trench")
            self.lineEdit_69.setText(str(self.calculate_ultimate_crossflow[18]))
            self.unit_69.setText(" ")
            self.Name_70.setText("Drag Amplitude Factor Due to Crossflow Vibration ")
            self.symbol_70.setText("\u03A8 CD VIV")
            self.lineEdit_70.setText(str(self.calculate_ultimate_crossflow[19]))
            self.unit_70.setText(" ")
            self.Name_71.setText("Drag Coefficient_Cd")
            self.symbol_71.setText("CD")
            self.lineEdit_71.setText(str(self.calculate_ultimate_crossflow[20]))
            self.unit_71.setText(" ")
            self.Name_72.setText("Drag Coefficient_f")
            self.symbol_72.setText("f(\u03B1)")
            self.lineEdit_72.setText(str(self.calculate_ultimate_crossflow[21]))
            self.unit_72.setText(" ")
            self.Name_73.setText("Inertia Coefficient_CM0")
            self.symbol_73.setText("CM,0")
            self.lineEdit_73.setText(str(self.calculate_ultimate_crossflow[22]))
            self.unit_73.setText(" ")
            self.Name_74.setText("Inertia Correction Factor for Pipe Roughness")
            self.symbol_74.setText("\u03A8CM ,k	")
            self.lineEdit_74.setText(str(self.calculate_ultimate_crossflow[23]))
            self.unit_74.setText(" ")
            self.Name_75.setText("Inertia Correction Factor for the Seabed Proximity")
            self.symbol_75.setText("\u03A8CM Proxi")
            self.lineEdit_75.setText(str(self.calculate_ultimate_crossflow[24]))
            self.unit_75.setText(" ")
            self.Name_76.setText("Inertia Correction Factor Accounting for the Effect of Pipe in Trench")
            self.symbol_76.setText("\u03A8CM trench")
            self.lineEdit_76.setText(str(self.calculate_ultimate_crossflow[25]))
            self.unit_76.setText(" ")
            self.Name_77.setText("Inertia Coefficient_CM")
            self.symbol_77.setText("CM")
            self.lineEdit_77.setText(str(self.calculate_ultimate_crossflow[26]))
            self.unit_77.setText(" ")
            self.Name_78.setText("Static Cross Flow Bending Moment")
            self.symbol_78.setText("MCFR,sta ")
            self.lineEdit_78.setText(str(self.calculate_ultimate_crossflow[27]))
            self.unit_78.setText("N-m")
            self.Name_79.setText("Static Cross Flow Bending Stress")
            self.symbol_79.setText("\u03C3CF R,sta	")
            self.lineEdit_79.setText(str(self.calculate_ultimate_crossflow[28]))
            self.unit_79.setText("N/m\u00b2")
            self.Name_80.setText("Hoop Stress")
            self.symbol_80.setText("\u03C3CFH")
            self.lineEdit_80.setText(str(self.calculate_ultimate_crossflow[29]))
            self.unit_80.setText("Pa")
            self.Name_81.setText("True Steel Wall Axial Force")
            self.symbol_81.setText("NCF TR")
            self.lineEdit_81.setText(str(self.calculate_ultimate_crossflow[30]))
            self.unit_81.setText("N")
            self.Name_82.setText("Wall Axial Stress")
            self.symbol_82.setText("\u03C3CF N")
            self.lineEdit_82.setText(str(self.calculate_ultimate_crossflow[31]))
            self.unit_82.setText("Pa")
            self.Name_83.setText("Total Axial Stress")
            self.symbol_83.setText("\u03C3CFL")
            self.lineEdit_83.setText(str(self.calculate_ultimate_crossflow[32]))
            self.unit_83.setText("Pa")
            self.Name_84.setText("Von Misses Stress")
            self.symbol_84.setText("\u03C3CFe")
            self.lineEdit_84.setText(str(self.calculate_ultimate_crossflow[33]))
            self.unit_84.setText("Pa")
            self.Name_85.setText("Yield Stress_fy")
            self.symbol_85.setText("fy")
            self.lineEdit_85.setText(str(self.calculate_ultimate_crossflow[34]))
            self.unit_85.setText("Pa")
            self.Name_86.setText("Leff by L")
            self.symbol_86.setText("Leff/L")
            self.lineEdit_86.setText(str(self.calculate_ultimate_crossflow[35]))
            self.unit_86.setText(" ")
            self.Name_87.setText(" ")
            self.symbol_87.setText("Leff")
            self.lineEdit_87.setText(str(self.calculate_ultimate_crossflow[36]))
            self.unit_87.setText("m")
            self.Name_88.setText("Cross Flow ULS Screening Criteria")
            self.symbol_88.setText(" ")
            self.lineEdit_88.setText(str(self.calculate_ultimate_crossflow[37]))
            self.unit_88.setText(" ")
            self.Name_89.setText("Span Length for Cross Flow ULS")
            self.symbol_89.setText("LULS cr")
            self.lineEdit_89.setText(str(self.calculate_ultimate_crossflow[38]))
            self.unit_89.setText("m")
            # self.Name_90.setText("Hoop Stress")
            # self.symbol_90.setText("hello")
            # self.lineEdit_90.setText(str(self.calculate_ultimate_crossflow[39]))
            # self.unit_90.setText("world")
            # self.Name_91.setText("True Steel Wall Axial Force")
            # self.symbol_91.setText("hello")
            # self.lineEdit_91.setText(str(self.calculate_ultimate_crossflow[40]))
            # self.unit_91.setText("world")
            # self.Name_92.setText("Wall Axial Force")
            # self.symbol_92.setText("hello")
            # self.lineEdit_92.setText(str(self.calculate_ultimate_crossflow[41]))
            # self.unit_92.setText("world")
            # self.Name_93.setText("Total Axial Force")
            # self.symbol_93.setText("hello")
            # self.lineEdit_93.setText(str(self.calculate_ultimate_crossflow[42]))
            # self.unit_93.setText("world")
            # self.Name_94.setText("Von Misses Stress")
            # self.symbol_94.setText("hello")
            # self.lineEdit_94.setText(str(self.calculate_ultimate_crossflow[43]))
            # self.unit_94.setText("world")
            # self.Name_95.setText("Yield Stress_fy")
            # self.symbol_95.setText("hello")
            # self.lineEdit_95.setText(str(self.calculate_ultimate_crossflow[44]))
            # self.unit_95.setText("world")
            # self.Name_96.setText("Leff by L")
            # self.symbol_96.setText("hello")
            # self.lineEdit_96.setText(str(self.calculate_ultimate_crossflow[45]))
            # self.unit_96.setText("world")
            # self.Name_97.setText("Leff")
            # self.symbol_97.setText("hello")
            # self.lineEdit_97.setText(str(self.calculate_ultimate_crossflow[46]))
            # self.unit_97.setText("world")
            # self.Name_98.setText("In-Flow ULS Screening Criteria")
            # self.symbol_98.setText("hello")
            # self.lineEdit_98.setText(str(self.calculate_ultimate_crossflow[47]))
            # self.unit_98.setText("world")
            # self.Name_99.setText("Span Length for Inline Flow ULS")
            # self.symbol_99.setText("hello")
            # self.lineEdit_99.setText(str(self.calculate_ultimate_crossflow[48]))
            # self.unit_99.setText("world")
            # self.Name_100.hide()
            # self.symbol_100.hide()
            # self.lineEdit_100.hide()
            # self.unit_100.hide()
            self.Name_51.show()
            self.symbol_51.show()
            self.lineEdit_51.show()
            self.unit_51.show()
            self.Name_52.show()
            self.symbol_52.show()
            self.lineEdit_52.show()
            self.unit_52.show()
            self.Name_53.show()
            self.symbol_53.show()
            self.lineEdit_53.show()
            self.unit_53.show()
            self.Name_54.show()
            self.symbol_54.show()
            self.lineEdit_54.show()
            self.unit_54.show()
            self.Name_55.show()
            self.symbol_55.show()
            self.lineEdit_55.show()
            self.unit_55.show()
            self.Name_56.show()
            self.symbol_56.show()
            self.lineEdit_56.show()
            self.unit_56.show()
            self.Name_57.show()
            self.symbol_57.show()
            self.lineEdit_57.show()
            self.unit_57.show()
            self.Name_58.show()
            self.symbol_58.show()
            self.lineEdit_58.show()
            self.unit_58.show()
            self.Name_59.show()
            self.symbol_59.show()
            self.lineEdit_59.show()
            self.unit_59.show()
            self.Name_60.show()
            self.symbol_60.show()
            self.lineEdit_60.show()
            self.unit_60.show()
            self.Name_61.show()
            self.symbol_61.show()
            self.lineEdit_61.show()
            self.unit_61.show()
            self.Name_62.show()
            self.symbol_62.show()
            self.lineEdit_62.show()
            self.unit_62.show()
            self.Name_63.show()
            self.symbol_63.show()
            self.lineEdit_63.show()
            self.unit_63.show()
            self.Name_64.show()
            self.symbol_64.show()
            self.lineEdit_64.show()
            self.unit_64.show()
            self.Name_65.show()
            self.symbol_65.show()
            self.lineEdit_65.show()
            self.unit_65.show()
            self.Name_66.show()
            self.symbol_66.show()
            self.lineEdit_66.show()
            self.unit_66.show()
            self.Name_67.show()
            self.symbol_67.show()
            self.lineEdit_67.show()
            self.unit_67.show()
            self.Name_68.show()
            self.symbol_68.show()
            self.lineEdit_68.show()
            self.unit_68.show()
            self.Name_69.show()
            self.symbol_69.show()
            self.lineEdit_69.show()
            self.unit_69.show()
            self.Name_70.show()
            self.symbol_70.show()
            self.lineEdit_70.show()
            self.unit_70.show()
            self.Name_71.show()
            self.symbol_71.show()
            self.lineEdit_71.show()
            self.unit_71.show()
            self.Name_72.show()
            self.symbol_72.show()
            self.lineEdit_72.show()
            self.unit_72.show()
            self.Name_73.show()
            self.symbol_73.show()
            self.lineEdit_73.show()
            self.unit_73.show()
            self.Name_74.show()
            self.symbol_74.show()
            self.lineEdit_74.show()
            self.unit_74.show()
            self.Name_75.show()
            self.symbol_75.show()
            self.lineEdit_75.show()
            self.unit_75.show()
            self.Name_76.show()
            self.symbol_76.show()
            self.lineEdit_76.show()
            self.unit_76.show()
            self.Name_77.show()
            self.symbol_77.show()
            self.lineEdit_77.show()
            self.unit_77.show()
            self.Name_78.show()
            self.symbol_78.show()
            self.lineEdit_78.show()
            self.unit_78.show()
            self.Name_79.show()
            self.symbol_79.show()
            self.lineEdit_79.show()
            self.unit_79.show()
            self.Name_80.show()
            self.symbol_80.show()
            self.lineEdit_80.show()
            self.unit_80.show()
            self.Name_81.show()
            self.symbol_81.show()
            self.lineEdit_81.show()
            self.unit_81.show()
            self.Name_82.show()
            self.symbol_82.show()
            self.lineEdit_82.show()
            self.unit_82.show()
            self.Name_83.show()
            self.symbol_83.show()
            self.lineEdit_83.show()
            self.unit_83.show()
            self.Name_84.show()
            self.symbol_84.show()
            self.lineEdit_84.show()
            self.unit_84.show()
            self.Name_85.show()
            self.symbol_85.show()
            self.lineEdit_85.show()
            self.unit_85.show()
            self.Name_86.show()
            self.symbol_86.show()
            self.lineEdit_86.show()
            self.unit_86.show()
            self.Name_87.show()
            self.symbol_87.show()
            self.lineEdit_87.show()
            self.unit_87.show()
            self.Name_88.show()
            self.symbol_88.show()
            self.lineEdit_88.show()
            self.unit_88.show()
            self.Name_89.show()
            self.symbol_89.show()
            self.lineEdit_89.show()
            self.unit_89.show()
            self.Name_90.hide()
            self.symbol_90.hide()
            self.lineEdit_90.hide()
            self.unit_90.hide()
            self.Name_91.hide()
            self.symbol_91.hide()
            self.lineEdit_91.hide()
            self.unit_91.hide()
            self.Name_92.hide()
            self.symbol_92.hide()
            self.lineEdit_92.hide()
            self.unit_92.hide()
            self.Name_93.hide()
            self.symbol_93.hide()
            self.lineEdit_93.hide()
            self.unit_93.hide()
            self.Name_94.hide()
            self.symbol_94.hide()
            self.lineEdit_94.hide()
            self.unit_94.hide()
            self.Name_95.hide()
            self.symbol_95.hide()
            self.lineEdit_95.hide()
            self.unit_95.hide()
            self.Name_96.hide()
            self.symbol_96.hide()
            self.lineEdit_96.hide()
            self.unit_96.hide()
            self.Name_97.hide()
            self.symbol_97.hide()
            self.lineEdit_97.hide()
            self.unit_97.hide()
            self.Name_98.hide()
            self.symbol_98.hide()
            self.lineEdit_98.hide()
            self.unit_98.hide()
            self.Name_99.hide()
            self.symbol_99.hide()
            self.lineEdit_99.hide()
            self.unit_99.hide()
            self.Name_100.hide()
            self.symbol_100.hide()
            self.lineEdit_100.hide()
            self.unit_100.hide()
        except:
            print("\n\tultimate_limit_state_crossflow_spanlength_calculation is having 'ERROR'...!!!!")



    def ultimate_limit_state_inline_spanlength_calculation(self):
        print("ultimate_limit_state_inline_spanlength_calculation")
        print(self.calculate_ultimate_inline)
        try:
            self.Name_51.setText("Max Environmental Bending Moment_1")
            self.symbol_51.setText("MIL E")
            self.lineEdit_51.setText(str(self.calculate_ultimate_inline[0]))
            self.unit_51.setText("N-m")
            self.Name_52.setText("Max Environmental Stress")
            self.symbol_52.setText("\u03C3IL E	")
            self.lineEdit_52.setText(str(self.calculate_ultimate_inline[1]))
            self.unit_52.setText("Pa")
            self.Name_53.setText("Inline Stress Range")
            self.symbol_53.setText("Scomb,IL")
            self.lineEdit_53.setText(str(self.calculate_ultimate_inline[2]))
            self.unit_53.setText("Pa")
            self.Name_54.setText("Respone Model Stress Range")
            self.symbol_54.setText("SRM IL")
            self.lineEdit_54.setText(str(self.calculate_ultimate_inline[3]))
            self.unit_54.setText("Pa")
            self.Name_55.setText("Inline induced VIV Stress Range")
            self.symbol_55.setText("SP,IL")
            self.lineEdit_55.setText(str(self.calculate_ultimate_inline[4]))
            self.unit_55.setText("Pa")
            self.Name_56.setText("Cross Flow Responce Value")
            self.symbol_56.setText("Ay/TD")
            self.lineEdit_56.setText(str(self.calculate_ultimate_inline[5]))
            self.unit_56.setText(" ")
            self.Name_57.setText("Cross Flow Unit Stress Amplitude")
            self.symbol_57.setText("AIL")
            self.lineEdit_57.setText(str(self.calculate_ultimate_inline[6]))
            self.unit_57.setText("Pa")
            self.Name_58.setText("Cross Flow Unit Stress Amplitude")
            self.symbol_58.setText("\u03C3 \u03B1,IL	")
            self.lineEdit_58.setText(str(self.calculate_ultimate_inline[7]))
            self.unit_58.setText(" ")
            self.Name_59.setText("Excited Cross Flow Stress Range")
            self.symbol_59.setText("SCF-IL")
            self.lineEdit_59.setText(str(self.calculate_ultimate_inline[8]))
            self.unit_59.setText(" ")
            self.Name_60.setText("Max Environment Stress due to wave Loading")
            self.symbol_60.setText("\u03C3FM,max")
            self.lineEdit_60.setText(str(self.calculate_ultimate_inline[9]))
            self.unit_60.setText("Pa")
            self.Name_61.setText("Max Environment Stress due to wave Loading_kp")
            self.symbol_61.setText("kp")
            self.lineEdit_61.setText(str(self.calculate_ultimate_inline[10]))
            self.unit_61.setText(" ")
            self.Name_62.setText("Max Environment Stress due to wave Loading_km")
            self.symbol_62.setText("kM")
            self.lineEdit_62.setText(str(self.calculate_ultimate_inline[11]))
            self.unit_62.setText(" ")
            self.Name_63.setText("Wave Induced Stress Amplitude")
            self.symbol_63.setText("\u03C3s")
            self.lineEdit_63.setText(str(self.calculate_ultimate_inline[12]))
            self.unit_63.setText("Pa")
            self.Name_64.setText("0th Response Spectral Moment_M0")
            self.symbol_64.setText("M0")
            self.lineEdit_64.setText(str(self.calculate_ultimate_inline[13]))
            self.unit_64.setText("N-m")
            self.Name_65.setText("0th Response Spectral Moment_Sss")
            self.symbol_65.setText("S ss")
            self.lineEdit_65.setText(str(self.calculate_ultimate_inline[14]))
            self.unit_65.setText("Pa")
            self.Name_66.setText("Linearisation Constant")
            self.symbol_66.setText("b")
            self.lineEdit_66.setText(str(self.calculate_ultimate_inline[15]))
            self.unit_66.setText(" ")
            self.Name_67.setText("SD of wave Induced Flow Velocity")
            self.symbol_67.setText("\u03C3u")
            self.lineEdit_67.setText(str(self.calculate_ultimate_inline[16]))
            self.unit_67.setText("m/s")
            self.Name_68.setText("Correction Function")
            self.symbol_68.setText("gc")
            self.lineEdit_68.setText(str(self.calculate_ultimate_inline[17]))
            self.unit_68.setText(" ")
            self.Name_69.setText("Gaussian Probability Density Function")
            self.symbol_69.setText("\u03C8(X)")
            self.lineEdit_69.setText(str(self.calculate_ultimate_inline[18]))
            self.unit_69.setText(" ")
            self.Name_70.setText("Corresponding Distribution Function")
            self.symbol_70.setText("\u03A6(X)")
            self.lineEdit_70.setText(str(self.calculate_ultimate_inline[19]))
            self.unit_70.setText(" ")
            self.Name_71.setText("Max Model Stress")
            self.symbol_71.setText("\u03C81")
            self.lineEdit_71.setText(str(self.calculate_ultimate_inline[20]))
            self.unit_71.setText("Pa")
            self.Name_72.setText("Spectral Density Function")
            self.symbol_72.setText("S\u03B7	\u03B7	")
            self.lineEdit_72.setText(str(self.calculate_ultimate_inline[21]))
            self.unit_72.setText(" ")
            self.Name_73.setText("Phillip's Constant")
            self.symbol_73.setText("\u03B1p")
            self.lineEdit_73.setText(str(self.calculate_ultimate_inline[22]))
            self.unit_73.setText(" ")
            self.Name_74.setText("Spectral Width Parameter")
            self.symbol_74.setText("\u03C3sp")
            self.lineEdit_74.setText(str(self.calculate_ultimate_inline[23]))
            self.unit_74.setText(" ")
            self.Name_75.setText("Frequency Transfer Function")
            self.symbol_75.setText("G(\u03C9)")
            self.lineEdit_75.setText(str(self.calculate_ultimate_inline[24]))
            self.unit_75.setText(" ")
            self.Name_76.setText("Angular Wave Frequency")
            self.symbol_76.setText("\u03C9	")
            self.lineEdit_76.setText(str(self.calculate_ultimate_inline[25]))
            self.unit_76.setText("rad/s")
            self.Name_77.setText("Angular Spectral Peak Frequency")
            self.symbol_77.setText("\u03C9p")
            self.lineEdit_77.setText(str(self.calculate_ultimate_inline[26]))
            self.unit_77.setText("rad/s")
            self.Name_78.setText("Still Water Angular Natural Frequency")
            self.symbol_78.setText("\u03C91")
            self.lineEdit_78.setText(str(self.calculate_ultimate_inline[27]))
            self.unit_78.setText("rad/s")
            self.Name_79.setText("Euler Buckling Load")
            self.symbol_79.setText("PE")
            self.lineEdit_79.setText(str(self.calculate_ultimate_inline[28]))
            self.unit_79.setText("N")
            self.Name_80.setText("Span Natural Frequency Cross Flow")
            self.symbol_80.setText("f0,in")
            self.lineEdit_80.setText(str(self.calculate_ultimate_inline[29]))
            self.unit_80.setText("Hz")
            self.Name_81.setText("Static Vertical Deflection")
            self.symbol_81.setText("\u03B4	")
            self.lineEdit_81.setText(str(self.calculate_ultimate_inline[30]))
            self.unit_81.setText("m")
            self.Name_82.setText("Drag coefficient")
            self.symbol_82.setText("Cd")
            self.lineEdit_82.setText(str(self.calculate_ultimate_inline[31]))
            self.unit_82.setText(" ")
            self.Name_83.setText("Inertia coefficient")
            self.symbol_83.setText("CM")
            self.lineEdit_83.setText(str(self.calculate_ultimate_inline[32]))
            self.unit_83.setText(" ")
            self.Name_84.setText("Drag Force Term")
            self.symbol_84.setText("gD")
            self.lineEdit_84.setText(str(self.calculate_ultimate_inline[33]))
            self.unit_84.setText("kg/m\u00b2")
            self.Name_85.setText("Inertia Force Term")
            self.symbol_85.setText("gI")
            self.lineEdit_85.setText(str(self.calculate_ultimate_inline[34]))
            self.unit_85.setText("kg/m")
            self.Name_86.setText("Static Horizontal Load per Unit Length")
            self.symbol_86.setText("Qhor_max")
            self.lineEdit_86.setText(str(self.calculate_ultimate_inline[35]))
            self.unit_86.setText(" ")
            self.Name_87.setText("Resultant Lateral Static Loading")
            self.symbol_87.setText("Q")
            self.lineEdit_87.setText(str(self.calculate_ultimate_inline[36]))
            self.unit_87.setText(" ")
            self.Name_88.setText("Static Inline Bending Moment")
            self.symbol_88.setText("MINR,sta")
            self.lineEdit_88.setText(str(self.calculate_ultimate_inline[37]))
            self.unit_88.setText("N-m")
            self.Name_89.setText("Static Inline Bending Stress")
            self.symbol_89.setText("\u03C3inR,sta")
            self.lineEdit_89.setText(str(self.calculate_ultimate_inline[38]))
            self.unit_89.setText("n/m\u00b2")
            self.Name_90.setText("Hoop Stress")
            self.symbol_90.setText("\u03C3IL H")
            self.lineEdit_90.setText(str(self.calculate_ultimate_inline[39]))
            self.unit_90.setText("Pa")
            self.Name_91.setText("True Steel Wall Axial Force")
            self.symbol_91.setText("NIL TR")
            self.lineEdit_91.setText(str(self.calculate_ultimate_inline[40]))
            self.unit_91.setText("Pa")
            self.Name_92.setText("Wall Axial Force")
            self.symbol_92.setText("\u03C3IL N")
            self.lineEdit_92.setText(str(self.calculate_ultimate_inline[41]))
            self.unit_92.setText("Pa")
            self.Name_93.setText("Total Axial Force")
            self.symbol_93.setText("\u03C3IL L")
            self.lineEdit_93.setText(str(self.calculate_ultimate_inline[42]))
            self.unit_93.setText("Pa")
            self.Name_94.setText("Von Misses Stress")
            self.symbol_94.setText("\u03C3IL e")
            self.lineEdit_94.setText(str(self.calculate_ultimate_inline[43]))
            self.unit_94.setText("Pa")
            self.Name_95.setText("Yield Stress_fy")
            self.symbol_95.setText("fy")
            self.lineEdit_95.setText(str(self.calculate_ultimate_inline[44]))
            self.unit_95.setText("Pa")
            self.Name_96.setText("Leff by L")
            self.symbol_96.setText("Leff/L")
            self.lineEdit_96.setText(str(self.calculate_ultimate_inline[45]))
            self.unit_96.setText(" ")
            self.Name_97.setText(" ")
            self.symbol_97.setText("Leff")
            self.lineEdit_97.setText(str(self.calculate_ultimate_inline[46]))
            self.unit_97.setText("m")
            self.Name_98.setText("In-Flow ULS Screening Criteria")
            self.symbol_98.setText(" ")
            self.lineEdit_98.setText(str(self.calculate_ultimate_inline[47]))
            self.unit_98.setText("Pa")
            self.Name_99.setText("Span Length for Inline Flow ULS")
            self.symbol_99.setText("LULS in ")
            self.lineEdit_99.setText(str(self.calculate_ultimate_inline[48]))
            self.unit_99.setText("m")
            self.Name_100.hide()
            self.symbol_100.hide()
            self.lineEdit_100.hide()
            self.unit_100.hide()
            self.Name_51.show()
            self.symbol_51.show()
            self.lineEdit_51.show()
            self.unit_51.show()
            self.Name_52.show()
            self.symbol_52.show()
            self.lineEdit_52.show()
            self.unit_52.show()
            self.Name_53.show()
            self.symbol_53.show()
            self.lineEdit_53.show()
            self.unit_53.show()
            self.Name_54.show()
            self.symbol_54.show()
            self.lineEdit_54.show()
            self.unit_54.show()
            self.Name_55.show()
            self.symbol_55.show()
            self.lineEdit_55.show()
            self.unit_55.show()
            self.Name_56.show()
            self.symbol_56.show()
            self.lineEdit_56.show()
            self.unit_56.show()
            self.Name_57.show()
            self.symbol_57.show()
            self.lineEdit_57.show()
            self.unit_57.show()
            self.Name_58.show()
            self.symbol_58.show()
            self.lineEdit_58.show()
            self.unit_58.show()
            self.Name_59.show()
            self.symbol_59.show()
            self.lineEdit_59.show()
            self.unit_59.show()
            self.Name_60.show()
            self.symbol_60.show()
            self.lineEdit_60.show()
            self.unit_60.show()
            self.Name_61.show()
            self.symbol_61.show()
            self.lineEdit_61.show()
            self.unit_61.show()
            self.Name_62.show()
            self.symbol_62.show()
            self.lineEdit_62.show()
            self.unit_62.show()
            self.Name_63.show()
            self.symbol_63.show()
            self.lineEdit_63.show()
            self.unit_63.show()
            self.Name_64.show()
            self.symbol_64.show()
            self.lineEdit_64.show()
            self.unit_64.show()
            self.Name_65.show()
            self.symbol_65.show()
            self.lineEdit_65.show()
            self.unit_65.show()
            self.Name_66.show()
            self.symbol_66.show()
            self.lineEdit_66.show()
            self.unit_66.show()
            self.Name_67.show()
            self.symbol_67.show()
            self.lineEdit_67.show()
            self.unit_67.show()
            self.Name_68.show()
            self.symbol_68.show()
            self.lineEdit_68.show()
            self.unit_68.show()
            self.Name_69.show()
            self.symbol_69.show()
            self.lineEdit_69.show()
            self.unit_69.show()
            self.Name_70.show()
            self.symbol_70.show()
            self.lineEdit_70.show()
            self.unit_70.show()
            self.Name_71.show()
            self.symbol_71.show()
            self.lineEdit_71.show()
            self.unit_71.show()
            self.Name_72.show()
            self.symbol_72.show()
            self.lineEdit_72.show()
            self.unit_72.show()
            self.Name_73.show()
            self.symbol_73.show()
            self.lineEdit_73.show()
            self.unit_73.show()
            self.Name_74.show()
            self.symbol_74.show()
            self.lineEdit_74.show()
            self.unit_74.show()
            self.Name_75.show()
            self.symbol_75.show()
            self.lineEdit_75.show()
            self.unit_75.show()
            self.Name_76.show()
            self.symbol_76.show()
            self.lineEdit_76.show()
            self.unit_76.show()
            self.Name_77.show()
            self.symbol_77.show()
            self.lineEdit_77.show()
            self.unit_77.show()
            self.Name_78.show()
            self.symbol_78.show()
            self.lineEdit_78.show()
            self.unit_78.show()
            self.Name_79.show()
            self.symbol_79.show()
            self.lineEdit_79.show()
            self.unit_79.show()
            self.Name_80.show()
            self.symbol_80.show()
            self.lineEdit_80.show()
            self.unit_80.show()
            self.Name_81.show()
            self.symbol_81.show()
            self.lineEdit_81.show()
            self.unit_81.show()
            self.Name_82.show()
            self.symbol_82.show()
            self.lineEdit_82.show()
            self.unit_82.show()
            self.Name_83.show()
            self.symbol_83.show()
            self.lineEdit_83.show()
            self.unit_83.show()
            self.Name_84.show()
            self.symbol_84.show()
            self.lineEdit_84.show()
            self.unit_84.show()
            self.Name_85.show()
            self.symbol_85.show()
            self.lineEdit_85.show()
            self.unit_85.show()
            self.Name_86.show()
            self.symbol_86.show()
            self.lineEdit_86.show()
            self.unit_86.show()
            self.Name_87.show()
            self.symbol_87.show()
            self.lineEdit_87.show()
            self.unit_87.show()
            self.Name_88.show()
            self.symbol_88.show()
            self.lineEdit_88.show()
            self.unit_88.show()
            self.Name_89.show()
            self.symbol_89.show()
            self.lineEdit_89.show()
            self.unit_89.show()
            self.Name_90.show()
            self.symbol_90.show()
            self.lineEdit_90.show()
            self.unit_90.show()
            self.Name_91.show()
            self.symbol_91.show()
            self.lineEdit_91.show()
            self.unit_91.show()
            self.Name_92.show()
            self.symbol_92.show()
            self.lineEdit_92.show()
            self.unit_92.show()
            self.Name_93.show()
            self.symbol_93.show()
            self.lineEdit_93.show()
            self.unit_93.show()
            self.Name_94.show()
            self.symbol_94.show()
            self.lineEdit_94.show()
            self.unit_94.show()
            self.Name_95.show()
            self.symbol_95.show()
            self.lineEdit_95.show()
            self.unit_95.show()
            self.Name_96.show()
            self.symbol_96.show()
            self.lineEdit_96.show()
            self.unit_96.show()
            self.Name_97.show()
            self.symbol_97.show()
            self.lineEdit_97.show()
            self.unit_97.show()
            self.Name_98.show()
            self.symbol_98.show()
            self.lineEdit_98.show()
            self.unit_98.show()
            self.Name_99.show()
            self.symbol_99.show()
            self.lineEdit_99.show()
            self.unit_99.show()
            self.Name_100.hide()
            self.symbol_100.hide()
            self.lineEdit_100.hide()
            self.unit_100.hide()
        except:
            print("\n\tultimate_limit_state_inline_spanlength_calculation is having 'ERROR'...!!!")




    def summary_calculation(self):
        print("summary_calculation")
        print(self.calculate_summary)
        try:
            self.Name_51.setText("Span Length for inline flow viv")
            self.Name_52.setText("Span Length for Cross flow viv")
            self.Name_53.setText("Span Length for Cross flow uls")
            self.Name_54.setText("Span Length for inline flow uls")
            self.Name_55.setText("Maximum Deflection")
            self.Name_56.setText("Bar Buckling Criteria")
            self.Name_57.setText("Model Length Validity")
            self.Name_58.setText("Overall Maximum Allowable Span Length")
            self.symbol_51.setText("LVIV in")
            self.symbol_52.setText("LVIV cr")
            self.symbol_53.setText("LULS cr")
            self.symbol_54.setText("LULS in")
            self.symbol_55.setText("  ")
            self.symbol_56.setText(" ")
            self.symbol_57.setText(" ")
            self.symbol_58.setText(" ")
            self.lineEdit_51.setText(str(self.calculate_summary[0]))
            self.lineEdit_52.setText(str(self.calculate_summary[1]))
            self.lineEdit_53.setText(str(self.calculate_summary[2]))
            self.lineEdit_54.setText(str(self.calculate_summary[3]))
            self.lineEdit_55.setText(str(self.calculate_summary[4]))
            self.lineEdit_56.setText(str(self.calculate_summary[5]))
            self.lineEdit_57.setText(str(self.calculate_summary[6]))
            self.lineEdit_58.setText(str(self.calculate_summary[7]))
            self.unit_51.setText("m")
            self.unit_52.setText("m")
            self.unit_53.setText("m")
            self.unit_54.setText("m")
            self.unit_55.setText(" ")
            self.unit_56.setText(" ")
            self.unit_57.setText(" ")
            self.unit_58.setText("m")
            self.Name_51.show()
            self.symbol_51.show()
            self.lineEdit_51.show()
            self.unit_51.show()
            self.Name_52.show()
            self.symbol_52.show()
            self.lineEdit_52.show()
            self.unit_52.show()
            self.Name_53.show()
            self.symbol_53.show()
            self.lineEdit_53.show()
            self.unit_53.show()
            self.Name_54.show()
            self.symbol_54.show()
            self.lineEdit_54.show()
            self.unit_54.show()
            self.Name_55.show()
            self.symbol_55.show()
            self.lineEdit_55.show()
            self.unit_55.show()
            self.Name_56.show()
            self.symbol_56.show()
            self.lineEdit_56.show()
            self.unit_56.show()
            self.Name_57.show()
            self.symbol_57.show()
            self.lineEdit_57.show()
            self.unit_57.show()
            self.Name_58.show()
            self.symbol_58.show()
            self.lineEdit_58.show()
            self.unit_58.show()
            self.Name_59.hide()
            self.symbol_59.hide()
            self.lineEdit_59.hide()
            self.unit_59.hide()
            self.Name_60.hide()
            self.symbol_60.hide()
            self.lineEdit_60.hide()
            self.unit_60.hide()
            self.Name_61.hide()
            self.symbol_61.hide()
            self.lineEdit_61.hide()
            self.unit_61.hide()
            self.Name_62.hide()
            self.symbol_62.hide()
            self.lineEdit_62.hide()
            self.unit_62.hide()
            self.Name_63.hide()
            self.symbol_63.hide()
            self.lineEdit_63.hide()
            self.unit_63.hide()
            self.Name_64.hide()
            self.symbol_64.hide()
            self.lineEdit_64.hide()
            self.unit_64.hide()
            self.Name_65.hide()
            self.symbol_65.hide()
            self.lineEdit_65.hide()
            self.unit_65.hide()
            self.Name_66.hide()
            self.symbol_66.hide()
            self.lineEdit_66.hide()
            self.unit_66.hide()
            self.Name_67.hide()
            self.symbol_67.hide()
            self.lineEdit_67.hide()
            self.unit_67.hide()
            self.Name_68.hide()
            self.symbol_68.hide()
            self.lineEdit_68.hide()
            self.unit_68.hide()
            self.Name_69.hide()
            self.symbol_69.hide()
            self.lineEdit_69.hide()
            self.unit_69.hide()
            self.Name_70.hide()
            self.symbol_70.hide()
            self.lineEdit_70.hide()
            self.unit_70.hide()
            self.Name_71.hide()
            self.symbol_71.hide()
            self.lineEdit_71.hide()
            self.unit_71.hide()
            self.Name_72.hide()
            self.symbol_72.hide()
            self.lineEdit_72.hide()
            self.unit_72.hide()
            self.Name_73.hide()
            self.symbol_73.hide()
            self.lineEdit_73.hide()
            self.unit_73.hide()
            self.Name_74.hide()
            self.symbol_74.hide()
            self.lineEdit_74.hide()
            self.unit_74.hide()
            self.Name_75.hide()
            self.symbol_75.hide()
            self.lineEdit_75.hide()
            self.unit_75.hide()
            self.Name_76.hide()
            self.symbol_76.hide()
            self.lineEdit_76.hide()
            self.unit_76.hide()
            self.Name_77.hide()
            self.symbol_77.hide()
            self.lineEdit_77.hide()
            self.unit_77.hide()
            self.Name_78.hide()
            self.symbol_78.hide()
            self.lineEdit_78.hide()
            self.unit_78.hide()
            self.Name_79.hide()
            self.symbol_79.hide()
            self.lineEdit_79.hide()
            self.unit_79.hide()
            self.Name_80.hide()
            self.symbol_80.hide()
            self.lineEdit_80.hide()
            self.unit_80.hide()
            self.Name_81.hide()
            self.symbol_81.hide()
            self.lineEdit_81.hide()
            self.unit_81.hide()
            self.Name_82.hide()
            self.symbol_82.hide()
            self.lineEdit_82.hide()
            self.unit_82.hide()
            self.Name_83.hide()
            self.symbol_83.hide()
            self.lineEdit_83.hide()
            self.unit_83.hide()
            self.Name_84.hide()
            self.symbol_84.hide()
            self.lineEdit_84.hide()
            self.unit_84.hide()
            self.Name_85.hide()
            self.symbol_85.hide()
            self.lineEdit_85.hide()
            self.unit_85.hide()
            self.Name_86.hide()
            self.symbol_86.hide()
            self.lineEdit_86.hide()
            self.unit_86.hide()
            self.Name_87.hide()
            self.symbol_87.hide()
            self.lineEdit_87.hide()
            self.unit_87.hide()
            self.Name_88.hide()
            self.symbol_88.hide()
            self.lineEdit_88.hide()
            self.unit_88.hide()
            self.Name_89.hide()
            self.symbol_89.hide()
            self.lineEdit_89.hide()
            self.unit_89.hide()
            self.Name_90.hide()
            self.symbol_90.hide()
            self.lineEdit_90.hide()
            self.unit_90.hide()
            self.Name_91.hide()
            self.symbol_91.hide()
            self.lineEdit_91.hide()
            self.unit_91.hide()
            self.Name_92.hide()
            self.symbol_92.hide()
            self.lineEdit_92.hide()
            self.unit_92.hide()
            self.Name_93.hide()
            self.symbol_93.hide()
            self.lineEdit_93.hide()
            self.unit_93.hide()
            self.Name_94.hide()
            self.symbol_94.hide()
            self.lineEdit_94.hide()
            self.unit_94.hide()
            self.Name_95.hide()
            self.symbol_95.hide()
            self.lineEdit_95.hide()
            self.unit_95.hide()
            self.Name_96.hide()
            self.symbol_96.hide()
            self.lineEdit_96.hide()
            self.unit_96.hide()
            self.Name_97.hide()
            self.symbol_97.hide()
            self.lineEdit_97.hide()
            self.unit_97.hide()
            self.Name_98.hide()
            self.symbol_98.hide()
            self.lineEdit_98.hide()
            self.unit_98.hide()
            self.Name_99.hide()
            self.symbol_99.hide()
            self.lineEdit_99.hide()
            self.unit_99.hide()
            self.Name_100.hide()
            self.symbol_100.hide()
            self.lineEdit_100.hide()
            self.unit_100.hide()
        except:
            print("\n\tsummary_calculation is having 'ERROR'....!!!")

        


        

    def save(self):
        print("\n\tSaving your file...!!!")

        #  Flowline properties
        self.rough.insert(0,str(self.internal_pressure_lineEdit_2.text()))
        self.rough.insert(1,str(self.pipe_outer_diameter_lineEdit_2.text()))
        self.rough.insert(2,str(self.pipe_wall_thickness_lineEdit_2.text()))
        self.rough.insert(3,str(self.pipe_density_lineEdit_2.text()))
        self.rough.insert(4,str(self.pipe_young_modulus_lineEdit_2.text()))
        self.rough.insert(5,str(self.internal_linear_thickness_lineEdit_2.text()))
        self.rough.insert(6,str(self.corrosion_thickness_lineEdit_2.text()))
        self.rough.insert(7,str(self.concrete_thickness_lineEdit_2.text()))
        self.rough.insert(8,str(self.marine_growth_thickness_lineEdit_2.text()))
        self.rough.insert(9,str(self.water_density_lineEdit_2.text()))
        self.rough.insert(10,str(self.marine_growth_density_lineEdit_2.text()))
        self.rough.insert(11,str(self.gap_under_pipeline_lineEdit_2.text()))
        self.rough.insert(12,str(self.ambient_temperature_lineEdit_2.text()))
        self.rough.insert(13,str(self.operation_temperature_lineEdit_2.text()))
        self.rough.insert(14,str(self.effective_residuel_lay_tension_lineEdit_2.text()))
        self.rough.insert(15,str(self.effective_axial_force_release_lineEdit_2.text()))
        self.rough.insert(16,str(self.temperature_expension_coefficient_lineEdit_2.text()))
        self.rough.insert(17,str(self.poisson_ratio_lineEdit_2.text()))
        self.rough.insert(18,str(self.poisson_ratio_lineEdit_3.text()))
        self.rough.insert(19,str(self.internal_linear_density_lineEdit_2.text()))
        self.rough.insert(20,str(self.corrosion_protection_density_lineEdit_2.text()))
        self.rough.insert(21,str(self.content_density_lineEdit_2.text()))
        self.rough.insert(22,str(self.concrete_density_lineEdit_2.text()))
        # Environmental Data
        self.rough.insert(23,str(self.free_span_length_lineEdit.text()))
        self.rough.insert(24,str(self.water_depth_lineEdit.text()))
        self.rough.insert(25,str(self.trench_depth_lineEdit.text()))
        self.rough.insert(26,str(self.significant_wave_height_lineEdit_100.text()))
        self.rough.insert(27,str(self.wave_period_lineEdit_100.text()))
        self.rough.insert(28,str(self.peak_period_lineEdit_100.text()))
        # self.rough.insert(29,str(self.lineEdit_Tn_by_Tp_100.text()))
        self.rough.insert(29,str(self.wave_direction_lineEdit_100.text()))
        self.rough.insert(30,str(self.current_velocity_lineEdit_100.text()))
        self.rough.insert(31,str(self.current_direction_lineEdit_100.text()))
        # self.rough.insert(33,str(self.lineEdit_UsTn_by_Hs_100.text()))
        # self.rough.insert(34,str(self.lineEdit_Tu_by_Tp_100.text()))
        self.rough.insert(32,str(self.significant_wave_height_lineEdit_10.text()))
        self.rough.insert(33,str(self.wave_period_lineEdit_10.text()))
        self.rough.insert(34,str(self.peak_period_lineEdit_10.text()))
        # self.rough.insert(38,str(self.lineEdit_Tn_by_Tp_10.text()))
        self.rough.insert(35,str(self.wave_direction_lineEdit_10.text()))

        self.rough.insert(36,str(self.current_velocity_lineEdit_10.text()))
        self.rough.insert(37,str(self.current_direction_lineEdit_10.text()))
        # self.rough.insert(42,str(self.lineEdit_UsTn_by_Hs_10.text()))
        # self.rough.insert(43,str(self.lineEdit_Tu_by_Tp_10.text()))
        self.rough.insert(38,str(self.significant_wave_height_lineEdit_1yer.text()))
        self.rough.insert(39,str(self.wave_period_lineEdit_1yer.text()))
        self.rough.insert(40,str(self.peak_period_lineEdit_1yer.text()))
        # self.rough.insert(41,str(self.lineEdit_Tn_by_Tp_1yer.text()))
        self.rough.insert(41,str(self.wave_direction_lineEdit_1yer.text()))
        self.rough.insert(42,str(self.current_velocity_lineEdit_1yer.text()))
        self.rough.insert(43,str(self.current_direction_lineEdit_1yer.text()))
        # self.rough.insert(51,str(self.lineEdit_UsTn_by_Hs_1y.text()))
        # self.rough.insert(52,str(self.lineEdit_UsTn_by_Hs_1y.text()))

        # Additinal Input Data
        self.rough.insert(44,str(self.safety_factor_on_Inline_frequency_lineEdit.text()))
        self.rough.insert(45,str(self.safety_factor_on_crossflow_frequency_lineEdit.text()))
        self.rough.insert(46,str(self.safety_factor_on_stress_range_lineEdit.text()))
        self.rough.insert(47,str(self.safety_factor_on_natural_frequency_lineEdit.text()))
        self.rough.insert(48,str(self.safety_on_damping_lineEdit.text()))
        self.rough.insert(49,str(self.safety_factor_on_onset_of_VrIL_lineEdit.text()))
        self.rough.insert(50,str(self.safety_factor_on_onset_of_VrCF_lineEdit.text()))
        self.rough.insert(51,str(self.structural_damping_lineEdit_3.text()))
        self.rough.insert(52,str(self.soil_damping_lineEdit_3.text()))
        self.rough.insert(53,str(self.hydrodynamic_damping_lineEdit_3.text()))
        self.rough.insert(54,str(self.inline_static_deflection_lineEdit_2.text()))
        self.rough.insert(55,str(self.pressure_load_effect_factor_lineEdit_2.text()))
        self.rough.insert(56,str(self.usage_factor_for_equivalent_stress_check_lineEdit_2.text()))
        self.rough.insert(57,str(self.usage_factor_for_equivalent_stress_check_lineEdit_3.text()))
        self.rough.insert(58,str(self.usage_factor_for_equivalent_stress_check_lineEdit_4.text()))
        self.rough.insert(59,str(self.usage_factor_for_equivalent_stress_check_lineEdit_5.text()))
        self.rough.insert(60,str(self.usage_factor_for_equivalent_stress_check_lineEdit_6.text()))
        self.rough.insert(61,str(self.usage_factor_for_equivalent_stress_check_lineEdit_7.text()))
        self.rough.insert(62,str(self.lineEdit_boundary_condition_C1.text()))
        self.rough.insert(63,str(self.lineEdit_boundary_condition_C2.text()))
        self.rough.insert(64,str(self.lineEdit_boundary_condition_C3.text()))
        self.rough.insert(65,str(self.lineEdit_boundary_condition_C4.text()))
        self.rough.insert(66,str(self.lineEdit_boundary_condition_C5.text()))
        self.rough.insert(67,str(self.lineEdit_boundary_condition_C6.text()))
        print("Save")
        filepath = filedialog.asksaveasfilename(
            # os.getenv('home'),
            initialdir= "C:/Users/DELL/Desktop/trial_run",
            title= "Save As",
            defaultextension= "*.csv",
            filetypes=(
                ("csv file","*.csv"),
                ("HTML file","*.html"),
                ("text file","*.txt"),
                ("All file","*.*")
            )
        )
        print(filepath)
        try:
            if filepath is None:
                return
            else:
                print(filepath)
                with open(filepath,'w') as file_save:
                    write_file = csv.writer(file_save)
                    write_file.writerow(self.rough)
                    file_save.close()
        except:
            print("ERROR in saving your file...!!")







    def open(self):
        print("Open")
        filepath = filedialog.askopenfilename(
            initialdir="C:/Users/DELL/Desktop/trial_run",
            title= "Open csv file...!!",
            defaultextension= "*.csv",
            filetypes=(
                ("csv file","*.csv"),
                ("HTML file","*.html"),
                ("text file","*.txt"),
                ("All file","*.*")
            )
        )
        print(filepath)
        try:
            if filepath is None:
                return
            else:
                with open(filepath,'r') as file_open:
                    read_file = csv.reader(file_open)
                    print(read_file)
                    for values in read_file:
                        # print(values)
                        for value in values:
                            print(value)
                            self.rough.append(value)
                            print(self.rough)
                            # print(insert)
                            # self.lineEdit_outer.setText(insert)
        
            
            self.internal_pressure_lineEdit_2.setText(self.rough[0])
            self.pipe_outer_diameter_lineEdit_2.setText(self.rough[1])
            self.pipe_wall_thickness_lineEdit_2.setText(self.rough[2])
            self.pipe_density_lineEdit_2.setText(self.rough[3])
            self.pipe_young_modulus_lineEdit_2.setText(self.rough[4])
            self.internal_linear_thickness_lineEdit_2.setText(self.rough[5])
            self.corrosion_thickness_lineEdit_2.setText(self.rough[6])
            self.concrete_thickness_lineEdit_2.setText(self.rough[7])
            self.marine_growth_thickness_lineEdit_2.setText(self.rough[8])
            self.water_density_lineEdit_2.setText(self.rough[9])
            self.marine_growth_density_lineEdit_2.setText(self.rough[10])
            self.gap_under_pipeline_lineEdit_2.setText(self.rough[11])
            self.ambient_temperature_lineEdit_2.setText(self.rough[12])
            self.operation_temperature_lineEdit_2.setText(self.rough[13])
            self.effective_residuel_lay_tension_lineEdit_2.setText(self.rough[14])
            self.effective_axial_force_release_lineEdit_2.setText(self.rough[15])
            self.temperature_expension_coefficient_lineEdit_2.setText(self.rough[16])
            self.poisson_ratio_lineEdit_2.setText(self.rough[17])
            self.poisson_ratio_lineEdit_3.setText(self.rough[18])
            self.internal_linear_density_lineEdit_2.setText(self.rough[19])
            self.corrosion_protection_density_lineEdit_2.setText(self.rough[20])
            self.content_density_lineEdit_2.setText(self.rough[21])
            self.concrete_density_lineEdit_2.setText(self.rough[22])
            
            # Environmental dta
            self.free_span_length_lineEdit.setText(self.rough[23])
            self.water_depth_lineEdit.setText(self.rough[24])
            self.trench_depth_lineEdit.setText(self.rough[25])
            self.significant_wave_height_lineEdit_100.setText(self.rough[26])
            self.wave_period_lineEdit_100.setText(self.rough[27])
            self.peak_period_lineEdit_100.setText(self.rough[28])
            self.wave_direction_lineEdit_100.setText(self.rough[29])
            self.current_velocity_lineEdit_100.setText(self.rough[30])
            self.current_direction_lineEdit_100.setText(self.rough[31])
            self.significant_wave_height_lineEdit_10.setText(self.rough[32])
            self.wave_period_lineEdit_10.setText(self.rough[33])
            self.peak_period_lineEdit_10.setText(self.rough[34])
            self.wave_direction_lineEdit_10.setText(self.rough[35])
            self.current_velocity_lineEdit_10.setText(self.rough[36])
            self.current_direction_lineEdit_10.setText(self.rough[37])
            self.significant_wave_height_lineEdit_1yer.setText(self.rough[38])
            self.wave_period_lineEdit_1yer.setText(self.rough[39])
            self.peak_period_lineEdit_1yer.setText(self.rough[40])
            self.wave_direction_lineEdit_1yer.setText(self.rough[41])
            self.current_velocity_lineEdit_1yer.setText(self.rough[42])
            self.current_direction_lineEdit_1yer.setText(self.rough[43])

            # Additional dataa
            self.safety_factor_on_Inline_frequency_lineEdit.setText(self.rough[44])
            self.safety_factor_on_crossflow_frequency_lineEdit.setText(self.rough[45])
            self.safety_factor_on_stress_range_lineEdit.setText(self.rough[46])
            self.safety_factor_on_natural_frequency_lineEdit.setText(self.rough[47])
            self.safety_on_damping_lineEdit.setText(self.rough[48])
            self.safety_factor_on_onset_of_VrIL_lineEdit.setText(self.rough[49])
            self.safety_factor_on_onset_of_VrCF_lineEdit.setText(self.rough[50])
            self.structural_damping_lineEdit_3.setText(self.rough[51])

            # Additional Input Data
            self.soil_damping_lineEdit_3.setText(self.rough[52])
            self.hydrodynamic_damping_lineEdit_3.setText(self.rough[53])
            self.inline_static_deflection_lineEdit_2.setText(self.rough[54])
            self.pressure_load_effect_factor_lineEdit_2.setText(self.rough[55])
            self.usage_factor_for_equivalent_stress_check_lineEdit_2.setText(self.rough[56])
            self.usage_factor_for_equivalent_stress_check_lineEdit_3.setText(self.rough[57])
            self.usage_factor_for_equivalent_stress_check_lineEdit_4.setText(self.rough[58])
            self.usage_factor_for_equivalent_stress_check_lineEdit_5.setText(self.rough[59])
            self.usage_factor_for_equivalent_stress_check_lineEdit_6.setText(self.rough[60])
            self.usage_factor_for_equivalent_stress_check_lineEdit_7.setText(self.rough[61])
            self.lineEdit_boundary_condition_C1.setText(self.rough[62])
            self.lineEdit_boundary_condition_C2.setText(self.rough[63])
            self.lineEdit_boundary_condition_C3.setText(self.rough[64])
            self.lineEdit_boundary_condition_C4.setText(self.rough[65])
            self.lineEdit_boundary_condition_C5.setText(self.rough[66])
            self.lineEdit_boundary_condition_C6.setText(self.rough[67])
        except:
            print("ERROR in opening your file....!!")
    

    # def print_this(self):
    #     print("\n\tPrinting your Report...!!")
    #     print(self.calculate_fatigue)


    #     bold_font = Font(bold = True)
    #     text_24_size = Font(size= 24)
    #     text_16_size = Font(size= 16)
    #     text_14_size = Font(size= 14)
    #     text_12_size = Font(size= 12)
    #     center_align = Alignment(horizontal = "center")
    #     # double_border = Side(border_style = "double")
    #     under_line = Border(bottom = Side(border_style = "double"))
    #     under_line_single = Border(bottom = Side(border_style = "thin"))

    #     try:
    #         Pi = self.Flowline_Properties[0]
    #         OD = self.Flowline_Properties[1]
    #         tp = self.Flowline_Properties[2]
    #         rho_p = self.Flowline_Properties[3]
    #         E = self.Flowline_Properties[4]
    #         til = self.Flowline_Properties[5]
    #         tce = self.Flowline_Properties[6]
    #         tcc = self.Flowline_Properties[7]
    #         tmg = self.Flowline_Properties[8]
    #         rho_il = self.Flowline_Properties[9]
    #         rho_ce = self.Flowline_Properties[10]
    #         rho_con = self.Flowline_Properties[11]
    #         rho_cc = self.Flowline_Properties[12]
    #         rho_mg = self.Flowline_Properties[13]
    #         rho_w = self.Flowline_Properties[14]
    #         e = self.Flowline_Properties[15]
    #         Tamb = self.Flowline_Properties[16]
    #         Top = self.Flowline_Properties[17]
    #         Heff = self.Flowline_Properties[18]
    #         Seff_max = self.Flowline_Properties[19]
    #         alpha_e = self.Flowline_Properties[20]
    #         v = self.Flowline_Properties[21]
    #         SMYS = self.Flowline_Properties[22]

    #         L = self.environmental_data[0]
    #         WD = self.environmental_data[1]
    #         d = self.environmental_data[2]
    #         Tw_100 = self.environmental_data[3]
    #         Tn_by_Tp_100 = self.environmental_data[4]
    #         Dir_100 = self.environmental_data[5]
    #         Cv_100 = self.environmental_data[6]
    #         C_Dir_100 = self.environmental_data[7]
    #         Tw_10 = self.environmental_data[8]
    #         Tn_by_Tp_10 = self.environmental_data[9]
    #         Dir_10 = self.environmental_data[10]
    #         Cv_10 = self.environmental_data[11]
    #         C_Dir_10 = self.environmental_data[12]
    #         Tw_1 = self.environmental_data[13]
    #         Tn_by_Tp_1 = self.environmental_data[14]
    #         Dir_1 = self.environmental_data[15]
    #         Cv_1 = self.environmental_data[16]
    #         C_Dir_1 = self.environmental_data[17]

    #         Hs_100 = self.Calculation_List_Hs[0]
    #         Hs_10 = self.Calculation_List_Hs[1]
    #         Hs_1 = self.Calculation_List_Hs[2]

    #         Tp_100 = self.Calculation_List_Tp[0]
    #         Tp_10 = self.Calculation_List_Tp[1]
    #         Tp_1 = self.Calculation_List_Tp[2]

    #         Tn = self.Calculation_List_Tn[0]
            
    #         Tu_100 = self.Calculation_List_Tu[0]
    #         Tu_10 = self.Calculation_List_Tu[1]
    #         Tu_1 = self.Calculation_List_Tu[2]


    #         gamma_f_IL = self.additional_data[0]
    #         gamma_f_CF = self.additional_data[1]
    #         gamma_s = self.additional_data[2]
    #         gamma_f = self.additional_data[3]
    #         gamma_k = self.additional_data[4]
    #         gamma_on_IL = self.additional_data[5]
    #         gamma_on_CF = self.additional_data[6]
    #         zeta_str = self.additional_data[7]
    #         zeta_soil = self.additional_data[8]
    #         zeta_h = self.additional_data[9]
    #         # CSF = self.additional_data[10]
    #         delta = self.additional_data[10]
    #         gamma_p = self.additional_data[11]
    #         eta = self.additional_data[12]
    #         R_D = self.additional_data[13]
    #         R_C = self.additional_data[14]
    #         Zo = self.additional_data[15]
    #         Zr = self.additional_data[16]
    #         Z = self.additional_data[17]
    #         boundary_condition_c1 = self.additional_data[18]
    #         boundary_condition_c2 = self.additional_data[19]
    #         boundary_condition_c3 = self.additional_data[20]
    #         boundary_condition_c4 = self.additional_data[21]
    #         boundary_condition_c5 = self.additional_data[22]
    #         boundary_condition_c6 = self.additional_data[23]


    #         TD = self.calculate_general[0]
    #         ID = self.calculate_general[1]
    #         A = self.calculate_general[2]
    #         Ap = self.calculate_general[3]
    #         Ip = self.calculate_general[4]
    #         Icc = self.calculate_general[5]
    #         alpha = self.calculate_general[6]
    #         mp = self.calculate_general[7]
    #         mil = self.calculate_general[8]
    #         mce = self.calculate_general[9]
    #         mcc = self.calculate_general[10]
    #         mmg = self.calculate_general[11]
    #         mcon = self.calculate_general[12]
    #         mt = self.calculate_general[13]
    #         B = self.calculate_general[14]
    #         Ws = self.calculate_general[15]
    #         span_gap = self.calculate_general[16]
    #         relative_trench_depth = self.calculate_general[17]
    #         Ca = self.calculate_general[18]
    #         ma = self.calculate_general[19]
    #         me = self.calculate_general[20]
    #         Pe = self.calculate_general[21]
    #         delta_p = self.calculate_general[22]
    #         Ai = self.calculate_general[23]
    #         Ae = self.calculate_general[24]
    #         Ap = self.calculate_general[25]
    #         delta_t = self.calculate_general[26]
    #         Seff = self.calculate_general[27]
    #         zita_t = self.calculate_general[28]
    #         Ks = self.calculate_general[29]
    #         Ksd = self.calculate_general[30]
    #         KC = self.calculate_general[31]
    #         KC_max = self.calculate_general[32]


    #         phy_100 = self.calculate_avoidance[0]
    #         PMS_100 = self.calculate_avoidance[1]
    #         phy_10 = self.calculate_avoidance[2]
    #         PMS_10 = self.calculate_avoidance[3]
    #         Uc_100 = self.calculate_avoidance[4]
    #         Uc_10 = self.calculate_avoidance[5]
    #         Uw_100 = self.calculate_avoidance[6]
    #         Uw_10 = self.calculate_avoidance[7]
    #         U_extreme = self.calculate_avoidance[8]
    #         V_il_r_onset = self.calculate_avoidance[9]
    #         f_il = self.calculate_avoidance[10]
    #         f_cf = self.calculate_avoidance[11]

    #         phy_1 = self.calculate_fatigue[0]
    #         PMS_1 = self.calculate_fatigue[1]
    #         Uc_1 = self.calculate_fatigue[2]
    #         Uw_1 = self.calculate_fatigue[3]
    #         sai_proxy_onset = self.calculate_fatigue[4]
    #         sai_trench_onset = self.calculate_fatigue[5]
    #         V_cf_ronset = self.calculate_fatigue[6]
    #         inline_1 = self.calculate_fatigue[7]
    #         inline_2 = self.calculate_fatigue[8]
    #         cross_1 = self.calculate_fatigue[9]
    #         cross_2 = self.calculate_fatigue[10]
    #         SFC_inline = self.calculate_fatigue[11]
    #         SFC_cross = self.calculate_fatigue[12]


    #         PE_viv_inline = self.calculate_viv_inline[0]
    #         vilronset_viv = self.calculate_viv_inline[1]
    #         leffbyl_viv = self.calculate_viv_inline[2]
    #         leff_viv = self.calculate_viv_inline[3]
    #         f01 = self.calculate_viv_inline[4]
    #         inline_screen_criteria = self.calculate_viv_inline[5]
    #         span_length_4_inline_flow_viv = self.calculate_viv_inline[6]

    #         PE_viv_crossflow = self.calculate_viv_crossflow[0]
    #         seabed_crossflow = self.calculate_viv_crossflow[1]
    #         trench_crossflow = self.calculate_viv_crossflow[2]
    #         vcfronset_crossflow = self.calculate_viv_crossflow[3]
    #         Q_crossflopw = self.calculate_viv_crossflow[4]
    #         staticdeflection_crossflow = self.calculate_viv_crossflow[5]
    #         leffbyl_crossflow = self.calculate_viv_crossflow[6]
    #         leff_crossflow = self.calculate_viv_crossflow[7]
    #         f02 = self.calculate_viv_crossflow[8]
    #         crossflow_screen_criteria = self.calculate_viv_crossflow[9]
    #         span_length_4_cross_flow_viv = self.calculate_viv_crossflow[10]

    #         #ultimate limit state cross-flow
    #         M_CF_E = self.calculate_ultimate_crossflow[0]
    #         Sigma_CF_E = self.calculate_ultimate_crossflow[1]
    #         Scomb_CF = self.calculate_ultimate_crossflow[2]
    #         S_RMcomb_CF = self.calculate_ultimate_crossflow[3]
    #         S_RM_CF = self.calculate_ultimate_crossflow[4]
    #         ratio_Az_and_TD = self.calculate_ultimate_crossflow[5]
    #         A_CF = self.calculate_ultimate_crossflow[6]
    #         Rk = self.calculate_ultimate_crossflow[7]
    #         S_LKCRcomb_CF = self.calculate_ultimate_crossflow[8]
    #         S_LKCR_CF = self.calculate_ultimate_crossflow[9]
    #         Sai_KC= self.calculate_ultimate_crossflow[10]
    #         Sai_Ks = self.calculate_ultimate_crossflow[11]
    #         Pcr = self.calculate_ultimate_crossflow[12]
    #         k = self.calculate_ultimate_crossflow[13]
    #         ratio_k_and_TD = self.calculate_ultimate_crossflow[14]
    #         C0_D_K_and_D = self.calculate_ultimate_crossflow[15]
    #         Sai_CD_KC_alpha = self.calculate_ultimate_crossflow[16]
    #         Sai_CD_proxi = self.calculate_ultimate_crossflow[17]
    #         Sai_CD_trench = self.calculate_ultimate_crossflow[18]
    #         Sai_CD_VIV = self.calculate_ultimate_crossflow[19]
    #         CD = self.calculate_ultimate_crossflow[20]
    #         f_alpha = self.calculate_ultimate_crossflow[21]
    #         CM_0 = self.calculate_ultimate_crossflow[22]
    #         Sai_CM_k = self.calculate_ultimate_crossflow[23]
    #         Sai_CM_proxi = self.calculate_ultimate_crossflow[24]
    #         Sai_CM_trench = self.calculate_ultimate_crossflow[25]
    #         CM = self.calculate_ultimate_crossflow[26]
    #         M_CF_Rsta = self.calculate_ultimate_crossflow[27]
    #         Sigma_CF_Rsta =self.calculate_ultimate_crossflow[28]
    #         Sigma_CF_H = self.calculate_ultimate_crossflow[29] 
    #         N_CF_TR = self.calculate_ultimate_crossflow[30]
    #         Sigma_CF_N = self.calculate_ultimate_crossflow[31]
    #         Sigma_CF_L = self.calculate_ultimate_crossflow[32]
    #         Sigma_CF_e = self.calculate_ultimate_crossflow[33]
    #         fy = self.calculate_ultimate_crossflow[34]
    #         Leff_per_L = self.calculate_ultimate_crossflow[35]
    #         Leff = self.calculate_ultimate_crossflow[36]
    #         Cross_ULs = self.calculate_ultimate_crossflow[37]
    #         L_ULS_CR = self.calculate_ultimate_crossflow[38]

    #         #ultimate limit State Inline- flow 
    #         M_IL_E =self.calculate_ultimate_inline[0]
    #         Sigma_IL_E = self.calculate_ultimate_inline[1]
    #         Scomb_IL = self.calculate_ultimate_inline[2]
    #         S_RM_IL = self.calculate_ultimate_inline[3]
    #         SP_IL = self.calculate_ultimate_inline[4]
    #         ratio_Ay_and_TD = self.calculate_ultimate_inline[5]
    #         A_IL = self.calculate_ultimate_inline[6]
    #         Sai_alpha_IL = self.calculate_ultimate_inline[7]
    #         S_CF_IL = self.calculate_ultimate_inline[8]
    #         Sigma_FM_max = self.calculate_ultimate_inline[9]
    #         kp = self.calculate_ultimate_inline[10]
    #         kM = self.calculate_ultimate_inline[11]
    #         Sigma_s = self.calculate_ultimate_inline[12]
    #         M0 = self.calculate_ultimate_inline[13]
    #         S_ss = self.calculate_ultimate_inline[14]
    #         b = self.calculate_ultimate_inline[15]
    #         Sigma_u = self.calculate_ultimate_inline[16]
    #         gc = self.calculate_ultimate_inline[17]
    #         Sai_x = self.calculate_ultimate_inline[18]
    #         Phi_x = self.calculate_ultimate_inline[19]
    #         Sai_1 = self.calculate_ultimate_inline[20]
    #         S_eta_eta = self.calculate_ultimate_inline[21]
    #         Alpha_p = self.calculate_ultimate_inline[22]
    #         Sigma_Sp = self.calculate_ultimate_inline[23]
    #         G_omega = self.calculate_ultimate_inline[24]
    #         omega = self.calculate_ultimate_inline[25]
    #         omega_p = self.calculate_ultimate_inline[26]
    #         omega1 =self.calculate_ultimate_inline[27]
    #         PE = self.calculate_ultimate_inline[28]
    #         f0_in = self.calculate_ultimate_inline[29]
    #         Delta_vertical = self.calculate_ultimate_inline[30]
    #         Cd = self.calculate_ultimate_inline[31]
    #         CM = self.calculate_ultimate_inline[32]
    #         gD = self.calculate_ultimate_inline[33]
    #         gI = self.calculate_ultimate_inline[34]
    #         Qhor_max = self.calculate_ultimate_inline[35]
    #         Q_Resultant = self.calculate_ultimate_inline[36]
    #         M_inR_sta = self.calculate_ultimate_inline[37]
    #         Sigma_inR_sta = self.calculate_ultimate_inline[38]
    #         Sigma_IL_H = self.calculate_ultimate_inline[39]
    #         N_IL_TR = self.calculate_ultimate_inline[40]
    #         Sigma_IL_N = self.calculate_ultimate_inline[41]
    #         Sigma_IL_L = self.calculate_ultimate_inline[42]
    #         Sigma_IL_e = self.calculate_ultimate_inline[43]
    #         fy = self.calculate_ultimate_inline[44]
    #         Leff_and_L =self.calculate_ultimate_inline[45]
    #         Leff =self.calculate_ultimate_inline[46]
    #         Inline_ULS_Sc_Cr = self.calculate_ultimate_inline[47]
    #         L_ULS_IN = self.calculate_ultimate_inline[48]

    #         print('till here...!')


    #         L_VIV_IN = self.calculate_summary[0]
    #         L_VIV_CR = self.calculate_summary[1]
    #         L_ULS_CR = self.calculate_summary[2]
    #         L_ULS_IN = self.calculate_summary[3]
    #         Max_Deflection = self.calculate_summary[4]
    #         Bar_Buckling_Cr = self.calculate_summary[5]
    #         Model_Length_Validity = self.calculate_summary[6]
    #         Overall_maximum_allowable_span_length = self.calculate_summary[7]



           


    #         wb = openpyxl.Workbook()
    #         sheet1 = wb.active

    #         # add_sheet is used to create sheet.(Row,Column,Data)
    #         # sheet1 = wb.add_sheet('Sheet 1')
    #         sheet1.column_dimensions['B'].width = 40
    #         sheet1.merge_cells('A1:B1')
    #         sheet1.cell(row=1,column=1).value = "Free Span Analysis"
    #         sheet1['A1'].font = bold_font
    #         sheet1['A1'].font = text_24_size
    #         sheet1['A1'].alignment = center_align
    #         sheet1['A1'].border = under_line
    #         sheet1['B1'].border = under_line
    #         sheet1.cell(row=2,column=2).value = "DATA"
    #         sheet1['B2'].font = bold_font
    #         sheet1['B2'].font = text_16_size
    #         sheet1['B2'].border = under_line
    #         # sheet1['A2'].alignment = center_align
    #         sheet1.merge_cells('A3:B3')
    #         sheet1.cell(row=3,column=1).value = "Flowline Properties"
    #         sheet1['A3'].font = bold_font
    #         sheet1['A3'].font = text_14_size
    #         sheet1['A3'].alignment = center_align
    #         sheet1['A3'].border = under_line
    #         sheet1['B3'].border = under_line
            
    #         # sheet1.cell(row=1,column=1).alignment(CENTER = True)
    #         sheet1.cell(row=4,column=2).value =Pi
    #         sheet1.cell(row=5,column=2).value =OD
    #         sheet1.cell(row=6,column=2).value =tp
    #         sheet1.cell(row=7,column=2).value =rho_p
    #         sheet1.cell(row=8,column=2).value =E
    #         sheet1.cell(row=9,column=2).value =til
    #         sheet1.cell(row=10,column=2).value =tce
    #         sheet1.cell(row=11,column=2).value =tcc
    #         sheet1.cell(row=12,column=2).value =tmg
    #         sheet1.cell(row=13,column=2).value =rho_il
    #         sheet1.cell(row=14,column=2).value =rho_ce
    #         sheet1.cell(row=15,column=2).value =rho_con
    #         sheet1.cell(row=16,column=2).value =rho_cc
    #         sheet1.cell(row=17,column=2).value =rho_mg
    #         sheet1.cell(row=18,column=2).value =rho_w
    #         sheet1.cell(row=19,column=2).value =e
    #         sheet1.cell(row=20,column=2).value =Tamb
    #         sheet1.cell(row=21,column=2).value =Top
    #         sheet1.cell(row=22,column=2).value =Heff
    #         sheet1.cell(row=23,column=2).value =Seff_max
    #         sheet1.cell(row=24,column=2).value =alpha_e
    #         sheet1.cell(row=25,column=2).value =v
    #         sheet1.cell(row=26,column=2).value =SMYS

    #         # sheet1.cell(row=27column=1).value =,Pi)
    #         # sheet1.cell(row=28,column=1).value ='Environmental Data'
    #         sheet1.merge_cells('A27:B27')
    #         sheet1.merge_cells('A28:B28')
    #         sheet1.cell(row=29,column=2).value =L
    #         sheet1.cell(row=30,column=2).value =WD
    #         sheet1.cell(row=31,column=2).value =d
    #         sheet1.cell(row=32,column=2).value =Hs_100
    #         sheet1.cell(row=33,column=2).value =Tw_100
    #         sheet1.cell(row=34,column=2).value =Tp_100
    #         sheet1.cell(row=35,column=2).value =Dir_100
    #         sheet1.cell(row=36,column=2).value =Cv_10
    #         sheet1.cell(row=37,column=2).value =C_Dir_10
    #         sheet1.merge_cells('A38:B38')
    #         # sheet1.cell(row=38column=1).value =C_Dir_10)
    #         sheet1.cell(row=39,column=2).value =Hs_10
    #         sheet1.cell(row=40,column=2).value =Tw_10
    #         sheet1.cell(row=41,column=2).value =Tp_10
    #         sheet1.cell(row=42,column=2).value =Dir_10
    #         sheet1.cell(row=43,column=2).value =Cv_100
    #         sheet1.cell(row=44,column=2).value =C_Dir_100
    #         sheet1.merge_cells('A45:B45')
    #             # sheet1.cell(row=45,column=1).value =rho_con)
    #         sheet1.cell(row=46,column=2).value =Hs_1
    #         sheet1.cell(row=47,column=2).value =Tw_1
    #         sheet1.cell(row=48,column=2).value =Tp_1
    #         sheet1.cell(row=49,column=2).value =Dir_1
    #         sheet1.cell(row=50,column=2).value =Cv_1
    #         sheet1.cell(row=51,column=2).value =C_Dir_1

    #         sheet1.merge_cells('A52:B52')
    #         sheet1.cell(row=52,column=1).value = "Additional Input"
    #         sheet1['A52'].font = bold_font
    #         sheet1['A52'].font = text_14_size
    #         sheet1['A52'].alignment = center_align
    #         sheet1['A52'].border = under_line
    #         sheet1['B52'].border = under_line
    #         sheet1.cell(row=53,column=2).value =gamma_f_IL
    #         sheet1.cell(row=54,column=2).value =gamma_f_CF
    #         sheet1.cell(row=55,column=2).value =gamma_s
    #         sheet1.cell(row=56,column=2).value =gamma_f
    #         sheet1.cell(row=57,column=2).value =gamma_k
    #         sheet1.cell(row=58,column=2).value =gamma_on_IL
    #         sheet1.cell(row=59,column=2).value =gamma_on_CF
    #         sheet1.cell(row=60,column=2).value =zeta_str
    #         sheet1.cell(row=61,column=2).value =zeta_soil
    #         sheet1.cell(row=62,column=2).value =zeta_h
    #         sheet1.cell(row=63,column=2).value =delta
    #         sheet1.cell(row=64,column=2).value =gamma_p
    #         sheet1.cell(row=65,column=2).value =eta
    #         sheet1.cell(row=66,column=2).value =R_D
    #         sheet1.cell(row=67,column=2).value =R_C
    #         sheet1.cell(row=68,column=2).value =Zo
    #         sheet1.cell(row=69,column=2).value =Zr
    #         sheet1.cell(row=70,column=2).value =Z 
    #         sheet1.cell(row=71,column=2).value =boundary_condition_c1
    #         sheet1.cell(row=72,column=2).value =boundary_condition_c2
    #         sheet1.cell(row=73,column=2).value =boundary_condition_c3
    #         sheet1.cell(row=74,column=2).value =boundary_condition_c4
    #         sheet1.cell(row=75,column=2).value =boundary_condition_c5
    #         sheet1.cell(row=76,column=2).value =boundary_condition_c6

    #         sheet1.merge_cells('A77:B77')
    #         sheet1.merge_cells('A78:B78')
    #         sheet1.cell(row=77,column=1).value ='CALCULATIONS'
    #         sheet1['A77'].font = bold_font
    #         sheet1['A77'].font = text_16_size
    #         sheet1['A77'].alignment = center_align
    #         sheet1['A77'].border = under_line
    #         sheet1['B77'].border = under_line
    #         sheet1.cell(row=78,column=1).value = 'Calculated General Value'
    #         sheet1['A78'].font = bold_font
    #         sheet1['A78'].font = text_14_size
    #         sheet1['A78'].alignment = center_align
    #         sheet1['A78'].border = under_line
    #         sheet1['B78'].border = under_line
    #         sheet1.cell(row=79,column=2).value =TD
    #         sheet1.cell(row=80,column=2).value =ID
    #         sheet1.cell(row=81,column=2).value =A
    #         sheet1.cell(row=82,column=2).value =Ap
    #         sheet1.cell(row=83,column=2).value =Ip
    #         sheet1.cell(row=84,column=2).value =Icc
    #         sheet1.cell(row=85,column=2).value =alpha
    #         sheet1.cell(row=86,column=2).value =mp
    #         sheet1.cell(row=87,column=2).value =mil
    #         sheet1.cell(row=88,column=2).value =mce
    #         sheet1.cell(row=89,column=2).value =mcc
    #         sheet1.cell(row=90,column=2).value =mmg
    #         sheet1.cell(row=91,column=2).value =mcon
    #         sheet1.cell(row=92,column=2).value =mt
    #         sheet1.cell(row=93,column=2).value =B
    #         sheet1.cell(row=94,column=2).value =Ws
    #         sheet1.cell(row=95,column=2).value =span_gap
    #         sheet1.cell(row=96,column=2).value =relative_trench_depth
    #         sheet1.cell(row=97,column=2).value =Ca
    #         sheet1.cell(row=98,column=2).value =ma
    #         sheet1.cell(row=99,column=2).value =me
    #         sheet1.cell(row=100,column=2).value =Pe
    #         sheet1.cell(row=101,column=2).value =delta_p
    #         sheet1.cell(row=102,column=2).value =Ai
    #         sheet1.cell(row=103,column=2).value =Ae
    #         sheet1.cell(row=104,column=2).value =Ap
    #         sheet1.cell(row=105,column=2).value =delta_t
    #         sheet1.cell(row=106,column=2).value =Seff
    #         sheet1.cell(row=107,column=2).value =zita_t
    #         sheet1.cell(row=108,column=2).value =Ks
    #         sheet1.cell(row=109,column=2).value =Ksd
    #         sheet1.cell(row=110,column=2).value =KC
    #         sheet1.cell(row=111,column=2).value =KC_max


    #         sheet1.merge_cells('A112:B112')
    #         sheet1.cell(row=112,column=1).value ='VIV Avoidance Criteria'
    #         sheet1['A112'].font = bold_font
    #         sheet1['A112'].font = text_14_size
    #         sheet1['A112'].alignment = center_align
    #         sheet1['A112'].border = under_line
    #         sheet1['B112'].border = under_line
    #         sheet1.merge_cells('A113:B113')
    #         sheet1.cell(row=114,column=2).value =phy_100
    #         sheet1.cell(row=115,column=2).value =PMS_100
    #         sheet1.cell(row=116,column=2).value =Uc_100
    #         sheet1.cell(row=117,column=2).value =Uw_100
    #         sheet1.merge_cells('A118:B118')
    #         sheet1.cell(row=119,column=2).value =phy_10
    #         sheet1.cell(row=120,column=2).value =PMS_10
    #         sheet1.cell(row=121,column=2).value =Uc_10
    #         sheet1.cell(row=122,column=2).value =Uw_10
    #         sheet1.cell(row=123,column=2).value =U_extreme
    #         sheet1.cell(row=124,column=2).value =V_il_r_onset
    #         sheet1.cell(row=125,column=2).value =f_il
    #         sheet1.cell(row=126,column=2).value =f_cf


    #         sheet1.merge_cells('A127:B127')
    #         sheet1.merge_cells('A128:B128')
    #         # sheet1.cell(row=127,column=2).value ='Screening Fatigue Criteria'
    #         # sheet1.cell(row=128,column=2).value ='1 Year Wave and Current'
    #         sheet1.cell(row=129,column=2).value =phy_1
    #         sheet1.cell(row=130,column=2).value =PMS_1
    #         sheet1.cell(row=131,column=2).value =Uc_1
    #         sheet1.cell(row=132,column=2).value =Uw_1
    #         sheet1.cell(row=133,column=2).value =sai_proxy_onset
    #         sheet1.cell(row=134,column=2).value =sai_trench_onset
    #         sheet1.cell(row=135,column=2).value =V_cf_ronset
    #         sheet1.cell(row=136,column=2).value =inline_1
    #         sheet1.cell(row=137,column=2).value =inline_2
    #         sheet1.cell(row=138,column=2).value =cross_1
    #         sheet1.cell(row=139,column=2).value =cross_2
    #         sheet1.cell(row=140,column=2).value =SFC_inline
    #         sheet1.cell(row=141,column=2).value =SFC_cross


    #         sheet1.merge_cells('A142:B142')
    #         sheet1.cell(row=142,column=1).value ='VIV Inline Span Length'
    #         sheet1['A142'].font = bold_font
    #         sheet1['A142'].font = text_14_size
    #         sheet1['A142'].alignment = center_align
    #         sheet1['A142'].border = under_line
    #         sheet1['B142'].border = under_line
    #         sheet1.cell(row=143,column=2).value =PE_viv_inline
    #         sheet1.cell(row=144,column=2).value =vilronset_viv
    #         sheet1.cell(row=145,column=2).value =leffbyl_viv
    #         sheet1.cell(row=146,column=2).value =leff_viv
    #         sheet1.cell(row=147,column=2).value =f01
    #         sheet1.cell(row=148,column=2).value =inline_screen_criteria
    #         sheet1.cell(row=149,column=2).value =span_length_4_inline_flow_viv

    #         sheet1.merge_cells('A150:B150')
    #         sheet1.cell(row=150,column=1).value ='VIV Cross Flow Span Length'
    #         sheet1['A150'].font = bold_font
    #         sheet1['A150'].font = text_14_size
    #         sheet1['A150'].alignment = center_align
    #         sheet1['A150'].border = under_line
    #         sheet1['B150'].border = under_line
    #         sheet1.cell(row=151,column=2).value =PE_viv_crossflow
    #         sheet1.cell(row=152,column=2).value =seabed_crossflow
    #         sheet1.cell(row=153,column=2).value =trench_crossflow
    #         sheet1.cell(row=154,column=2).value =vcfronset_crossflow
    #         sheet1.cell(row=155,column=2).value =Q_crossflopw
    #         sheet1.cell(row=156,column=2).value =staticdeflection_crossflow
    #         sheet1.cell(row=157,column=2).value =leffbyl_crossflow
    #         sheet1.cell(row=158,column=2).value =leff_crossflow
    #         sheet1.cell(row=159,column=2).value =f02
    #         sheet1.cell(row=160,column=2).value =crossflow_screen_criteria
    #         sheet1.cell(row=161,column=2).value =span_length_4_cross_flow_viv

    #         sheet1.merge_cells('A162:B162')
    #         sheet1.cell(row=162,column=1).value ='Ultimate Limit State Cross Flow Span Length'
    #         sheet1['A162'].font = bold_font
    #         sheet1['A162'].font = text_14_size
    #         sheet1['A162'].alignment = center_align
    #         sheet1['A162'].border = under_line
    #         sheet1['B162'].border = under_line
    #         sheet1.cell(row=163,column=2).value =M_CF_E
    #         sheet1.cell(row=164,column=2).value =Sigma_CF_E
    #         sheet1.cell(row=165,column=2).value =Scomb_CF
    #         sheet1.cell(row=166,column=2).value =S_RMcomb_CF
    #         sheet1.cell(row=167,column=2).value =S_RM_CF
    #         sheet1.cell(row=168,column=2).value =ratio_Az_and_TD
    #         sheet1.cell(row=169,column=2).value =A_CF
    #         sheet1.cell(row=170,column=2).value =Rk
    #         sheet1.cell(row=171,column=2).value =S_LKCRcomb_CF
    #         sheet1.cell(row=172,column=2).value =S_LKCR_CF
    #         sheet1.cell(row=173,column=2).value =Sai_KC
    #         sheet1.cell(row=174,column=2).value =Sai_Ks
    #         sheet1.cell(row=175,column=2).value =Pcr
    #         sheet1.cell(row=176,column=2).value =k
    #         sheet1.cell(row=177,column=2).value =ratio_k_and_TD
    #         sheet1.cell(row=178,column=2).value =C0_D_K_and_D
    #         sheet1.cell(row=179,column=2).value =Sai_CD_KC_alpha
    #         sheet1.cell(row=180,column=2).value =Sai_CD_proxi
    #         sheet1.cell(row=181,column=2).value =Sai_CD_trench
    #         sheet1.cell(row=182,column=2).value =Sai_CD_VIV
    #         sheet1.cell(row=183,column=2).value =CD
    #         sheet1.cell(row=184,column=2).value =f_alpha
    #         sheet1.cell(row=185,column=2).value =CM_0
    #         sheet1.cell(row=186,column=2).value =Sai_CM_k
    #         sheet1.cell(row=187,column=2).value =Sai_CM_proxi
    #         sheet1.cell(row=188,column=2).value =Sai_CM_trench
    #         sheet1.cell(row=189,column=2).value =CM
    #         sheet1.cell(row=190,column=2).value =M_CF_Rsta
    #         sheet1.cell(row=191,column=2).value =Sigma_CF_Rsta
    #         sheet1.cell(row=192,column=2).value =Sigma_CF_H
    #         sheet1.cell(row=193,column=2).value =N_CF_TR
    #         sheet1.cell(row=194,column=2).value =Sigma_CF_N
    #         sheet1.cell(row=195,column=2).value =Sigma_CF_L
    #         sheet1.cell(row=196,column=2).value =Sigma_CF_e
    #         sheet1.cell(row=197,column=2).value =fy
    #         sheet1.cell(row=198,column=2).value =Leff_and_L
    #         sheet1.cell(row=199,column=2).value =Leff
    #         sheet1.cell(row=200,column=2).value =Cross_ULs
    #         sheet1.cell(row=201,column=2).value =L_ULS_CR


    #         #Ultimate limit State Cross- flow Span Length
    #         sheet1.merge_cells('A202:B202')
    #         sheet1.cell(row=202,column=1).value ='Ultimate Limit State Inline Flow Span Length'
    #         sheet1['A202'].font = bold_font
    #         sheet1['A202'].font = text_14_size
    #         sheet1['A202'].alignment = center_align
    #         sheet1['A202'].border = under_line
    #         sheet1['B202'].border = under_line
    #         sheet1.cell(row=203,column=2).value =M_IL_E
    #         sheet1.cell(row=204,column=2).value =Sigma_IL_E
    #         sheet1.cell(row=205,column=2).value =Scomb_IL
    #         sheet1.cell(row=206,column=2).value =S_RM_IL
    #         sheet1.cell(row=207,column=2).value =SP_IL
    #         sheet1.cell(row=208,column=2).value =ratio_Ay_and_TD
    #         sheet1.cell(row=209,column=2).value =A_IL
    #         sheet1.cell(row=210,column=2).value =Sai_alpha_IL
    #         sheet1.cell(row=211,column=2).value =S_CF_IL
    #         sheet1.cell(row=212,column=2).value =Sigma_FM_max
    #         sheet1.cell(row=213,column=2).value =kp
    #         sheet1.cell(row=214,column=2).value =kM
    #         sheet1.cell(row=215,column=2).value =Sigma_s
    #         sheet1.cell(row=216,column=2).value =M0
    #         sheet1.cell(row=217,column=2).value =S_ss
    #         sheet1.cell(row=218,column=2).value =b
    #         sheet1.cell(row=219,column=2).value =Sigma_u
    #         sheet1.cell(row=220,column=2).value =gc
    #         sheet1.cell(row=221,column=2).value =Sai_x
    #         sheet1.cell(row=222,column=2).value =Phi_x
    #         sheet1.cell(row=223,column=2).value =Sai_1
    #         sheet1.cell(row=224,column=2).value =S_eta_eta
    #         sheet1.cell(row=225,column=2).value =Alpha_p
    #         sheet1.cell(row=226,column=2).value =Sigma_Sp
    #         sheet1.cell(row=227,column=2).value =G_omega
    #         sheet1.cell(row=228,column=2).value =omega
    #         sheet1.cell(row=229,column=2).value =omega_p
    #         sheet1.cell(row=230,column=2).value =omega1
    #         sheet1.cell(row=231,column=2).value =PE
    #         sheet1.cell(row=232,column=2).value =f0_in
    #         sheet1.cell(row=233,column=2).value =Delta_vertical
    #         sheet1.cell(row=234,column=2).value =Cd
    #         sheet1.cell(row=235,column=2).value =CM
    #         sheet1.cell(row=236,column=2).value =gD
    #         sheet1.cell(row=237,column=2).value =gI
    #         sheet1.cell(row=238,column=2).value =Qhor_max
    #         sheet1.cell(row=239,column=2).value =Q_Resultant
    #         sheet1.cell(row=240,column=2).value =M_inR_sta
    #         sheet1.cell(row=241,column=2).value =Sigma_inR_sta
    #         sheet1.cell(row=242,column=2).value =Sigma_IL_H
    #         sheet1.cell(row=243,column=2).value =N_IL_TR
    #         sheet1.cell(row=244,column=2).value =Sigma_IL_N
    #         sheet1.cell(row=245,column=2).value =Sigma_IL_L
    #         sheet1.cell(row=246,column=2).value =Sigma_IL_e
    #         sheet1.cell(row=247,column=2).value =fy
    #         sheet1.cell(row=248,column=2).value =Leff_and_L
    #         sheet1.cell(row=249,column=2).value =Leff
    #         sheet1.cell(row=250,column=2).value =Inline_ULS_Sc_Cr
    #         sheet1.cell(row=251,column=2).value =L_ULS_IN


    #       # Summary
    #         sheet1.merge_cells('A252:B252')
    #         sheet1.cell(row=252,column=1).value ='Summary'
    #         sheet1['A252'].font = bold_font
    #         sheet1['A252'].font = text_14_size
    #         sheet1['A252'].alignment = center_align
    #         sheet1['A252'].border = under_line
    #         sheet1['B252'].border = under_line
    #         sheet1.cell(row=253,column=2).value =L_VIV_IN
    #         sheet1.cell(row=254,column=2).value =L_VIV_CR
    #         sheet1.cell(row=255,column=2).value =L_ULS_CR
    #         sheet1.cell(row=256,column=2).value =L_ULS_IN
    #         sheet1.cell(row=257,column=2).value =Max_Deflection
    #         sheet1.cell(row=258,column=2).value =Bar_Buckling_Cr
    #         sheet1.cell(row=259,column=2).value =Model_Length_Validity
    #         sheet1.cell(row=260,column=2).value =Overall_maximum_allowable_span_length


            
            

             


    #         sheet1.column_dimensions['A'].width = 70
    #         # sheet1.cell(row=1,column=1).value ='Free Span Analysis'
    #         sheet1.cell(row=2,column=1).value ='VARIABLE'
    #         sheet1['A2'].font = bold_font
    #         sheet1['A2'].font = text_16_size
    #         sheet1['A2'].border = under_line
    #         # sheet1.cell(row=3,column=1).value ='Flowline Properties'
    #         sheet1.cell(row=4,column=1).value ='Internal Pressure'
    #         sheet1.cell(row=5,column=1).value ='Pipe Outer Radius'
    #         sheet1.cell(row=6,column=1).value ='Pipe Wall Thickness'
    #         sheet1.cell(row=7,column=1).value ='Pipe Density'
    #         sheet1.cell(row=8,column=1).value ='Pipe Young Modulus'
    #         sheet1.cell(row=9,column=1).value ='Internal Linear Thickness'
    #         sheet1.cell(row=10,column=1).value ='Corrosion Thickness'
    #         sheet1.cell(row=11,column=1).value ='Concrete Thickness'
    #         sheet1.cell(row=12,column=1).value ='Marine Growth Thickness'
    #         sheet1.cell(row=13,column=1).value ='Internal Linear Thickness'
    #         sheet1.cell(row=14,column=1).value ='Corrosion Protection Thickness'
    #         sheet1.cell(row=15,column=1).value ='Content Density'
    #         sheet1.cell(row=16,column=1).value ='Concrete Density'
    #         sheet1.cell(row=17,column=1).value ='Marine Growth Density'
    #         sheet1.cell(row=18,column=1).value ='Water Density'
    #         sheet1.cell(row=19,column=1).value ='Gap Under Pipeline'
    #         sheet1.cell(row=20,column=1).value ='Ambient Temperature'
    #         sheet1.cell(row=21,column=1).value ='Operation Temperature'
    #         sheet1.cell(row=22,column=1).value ='Effective Residueal Lay Tension'
    #         sheet1.cell(row=23,column=1).value ='Effective Axial Force Release'
    #         sheet1.cell(row=24,column=1).value ='Temperature Expension Coefficient'
    #         sheet1.cell(row=25,column=1).value ='Poisson Ratio'
    #         sheet1.cell(row=26,column=1).value ='SMYS'

    #         sheet1.cell(row=27,column=1).value ='Environmental Data'
    #         sheet1['A27'].font = bold_font
    #         sheet1['A27'].font = text_14_size
    #         sheet1['A27'].alignment = center_align
    #         sheet1['A27'].border = under_line
    #         sheet1['B27'].border = under_line
    #         sheet1.cell(row=28,column=1).value ='Case-1: 100 years Significant Wave heigth + 10 years Current'
    #         sheet1['A28'].font = bold_font
    #         sheet1['A28'].font = text_12_size
    #         sheet1['A28'].border = under_line_single
    #         sheet1.cell(row=29,column=1).value ='Free Span Length'
    #         sheet1.cell(row=30,column=1).value ='Water Depth'
    #         sheet1.cell(row=31,column=1).value ='Trench Depth'
    #         sheet1.cell(row=32,column=1).value ='Significant Wave Height'
    #         sheet1.cell(row=33,column=1).value ='Wave Period'
    #         sheet1.cell(row=34,column=1).value ='Peak Period'
    #         sheet1.cell(row=35,column=1).value ='Wave Direction'
    #         sheet1.cell(row=36,column=1).value ='Current Velocity'
    #         sheet1.cell(row=37,column=1).value ='Current Direction'
    #         sheet1.cell(row=38,column=1).value ='Case-2: 10 years Significant Wave heigth + 100 years Current'
    #         sheet1['A38'].font = bold_font
    #         sheet1['A38'].font = text_12_size
    #         sheet1['A38'].border = under_line_single
    #         sheet1.cell(row=39,column=1).value ='Significant Wave Height'
    #         sheet1.cell(row=40,column=1).value ='Wave Period'
    #         sheet1.cell(row=41,column=1).value ='Peak Period'
    #         sheet1.cell(row=42,column=1).value ='Wave Direction'
    #         sheet1.cell(row=43,column=1).value ='Current Velocity'
    #         sheet1.cell(row=44,column=1).value ='Current Direction'
    #         sheet1.cell(row=45,column=1).value ='Case-3: 1 years Significant Wave heigth + 1 years Current'
    #         sheet1['A45'].font = bold_font
    #         sheet1['A45'].font = text_12_size
    #         sheet1['A45'].border = under_line_single
    #         sheet1.cell(row=46,column=1).value ='Significant Wave Height'
    #         sheet1.cell(row=47,column=1).value ='Wave Period'
    #         sheet1.cell(row=48,column=1).value ='Peak Period'
    #         sheet1.cell(row=49,column=1).value ='Wave Direction'
    #         sheet1.cell(row=50,column=1).value ='Current Velocity'
    #         sheet1.cell(row=51,column=1).value ='Current Direction'

    #         sheet1.cell(row=53,column=1).value ='Safety Factor on In-Line Frequency'
    #         sheet1.cell(row=54,column=1).value ='Safety Factor on Cross-Flow Frequency'
    #         sheet1.cell(row=55,column=1).value ='Safety Factor on Stress Range'
    #         sheet1.cell(row=56,column=1).value ='Safety Factor on Natural Frequency'
    #         sheet1.cell(row=57,column=1).value ='Safety on Damping'
    #         sheet1.cell(row=58,column=1).value ='Safety Factor on Onset of Vr Inline Flow'
    #         sheet1.cell(row=59,column=1).value ='Safety Factor on Onset of Vr Cross Flow'
    #         sheet1.cell(row=60,column=1).value ='Structural Damping'
    #         sheet1.cell(row=61,column=1).value ='Soil Damping'
    #         sheet1.cell(row=62,column=1).value ='Hydrodynamic Damping'
    #         sheet1.cell(row=63,column=1).value ='Inline Static Deflection'
    #         sheet1.cell(row=64,column=1).value ='Pressure Load Effect Factor'
    #         sheet1.cell(row=65,column=1).value ='Usage Factor for Equivalent Stress Check'
    #         sheet1.cell(row=66,column=1).value ='Reduction Factor'
    #         sheet1.cell(row=67,column=1).value ='Reduction Function'
    #         sheet1.cell(row=68,column=1).value ='Sea Bottom Roughness'
    #         sheet1.cell(row=69,column=1).value ='Reference Height'
    #         sheet1.cell(row=70,column=1).value ='Height Above Seabed'
    #         sheet1.cell(row=71,column=1).value ='Boundary Condition C1'
    #         sheet1.cell(row=72,column=1).value ='Boundary Condition C2'
    #         sheet1.cell(row=73,column=1).value ='Boundary Condition C3'
    #         sheet1.cell(row=74,column=1).value ='Boundary Condition C4'
    #         sheet1.cell(row=75,column=1).value ='Boundary Condition C5'
    #         sheet1.cell(row=76,column=1).value ='Boundary Condition C6'


    #         sheet1.cell(row=79,column=1).value ='Pipe Drag Diameter'
    #         sheet1.cell(row=80,column=1).value ='Inside Diameter'
    #         sheet1.cell(row=81,column=1).value ='Cross Section Area'
    #         sheet1.cell(row=82,column=1).value ='Steel Area'
    #         sheet1.cell(row=83,column=1).value ='MOI of Steel Pipe'
    #         sheet1.cell(row=84,column=1).value ='MOI of Concrete Coating'
    #         sheet1.cell(row=85,column=1).value ='Current Flow Velocity Ratio Sig.Wave'
    #         sheet1.cell(row=86,column=1).value ='Mass of Pipe'
    #         sheet1.cell(row=87,column=1).value ='Internal Linear Mass'
    #         sheet1.cell(row=88,column=1).value ='Corrosion Coating Mass'
    #         sheet1.cell(row=89,column=1).value ='Concrete Coating Mass'
    #         sheet1.cell(row=90,column=1).value ='Marine Growth Mass'
    #         sheet1.cell(row=91,column=1).value ='Content Mass'
    #         sheet1.cell(row=92,column=1).value ='Total Mass'
    #         sheet1.cell(row=93,column=1).value ='Buoyancy'
    #         sheet1.cell(row=94,column=1).value ='Submerged Weight of Pipe'
    #         sheet1.cell(row=95,column=1).value ='Span Gap Ratio'
    #         sheet1.cell(row=96,column=1).value ='Relative Trench Depth'
    #         sheet1.cell(row=97,column=1).value ='Added Mass Coefficient'
    #         sheet1.cell(row=98,column=1).value ='Added Mass Pipe'
    #         sheet1.cell(row=99,column=1).value ='Effective Mass'
    #         sheet1.cell(row=100,column=1).value ='External Pressure'
    #         sheet1.cell(row=101,column=1).value ='Pressure Difference'
    #         sheet1.cell(row=102,column=1).value ='Internal Area (BORE)'
    #         sheet1.cell(row=103,column=1).value ='External Pipe Area'
    #         sheet1.cell(row=104,column=1).value ='Pipe Cross Section Area'
    #         sheet1.cell(row=105,column=1).value ='Temperature Difference'
    #         sheet1.cell(row=106,column=1).value ='Effective Tension'
    #         sheet1.cell(row=107,column=1).value ='Total Damping Ratio'
    #         sheet1.cell(row=108,column=1).value ='Stability Parameter_Ks'
    #         sheet1.cell(row=109,column=1).value ='Stability Parameter_Ksd'
    #         sheet1.cell(row=110,column=1).value ='Keulegan Carpenter Number'
    #         sheet1.cell(row=111,column=1).value ='Keulegan Carpenter Number Max'

    #         sheet1.cell(row=113,column=1).value ='100 Years Wave and Current'
    #         sheet1['A113'].font = bold_font
    #         sheet1['A113'].font = text_12_size
    #         sheet1['A113'].border = under_line_single
    #         sheet1.cell(row=114,column=1).value ='Peak Enhancement Factor'
    #         sheet1.cell(row=115,column=1).value ='Pierson Moskowitz Spectrum'
    #         sheet1.cell(row=116,column=1).value ='100 Years Steady Current Velocity'
    #         sheet1.cell(row=117,column=1).value ='100 Years of Wave Induced Velocity'
    #         sheet1.cell(row=118,column=1).value ='10 Years Wave and Current'
    #         sheet1['A118'].font = bold_font
    #         sheet1['A118'].font = text_12_size
    #         sheet1['A118'].border = under_line_single
    #         sheet1.cell(row=119,column=1).value ='Peak Enhancement Factor'
    #         sheet1.cell(row=120,column=1).value ='Pierson Moskowitz Spectrum'
    #         sheet1.cell(row=121,column=1).value ='10 Years Steady Current Velocity'
    #         sheet1.cell(row=122,column=1).value ='10 Years of Wave Induced Velocity'
    #         sheet1.cell(row=123,column=1).value ='Representative Flow Condition'
    #         sheet1.cell(row=124,column=1).value ='In-Line Onset Value for Reduced Velocity'
    #         sheet1.cell(row=125,column=1).value ='In-Line Lower Natural Frequency'
    #         sheet1.cell(row=126,column=1).value ='Cross Flow Lower Natural Frequency'

    #         sheet1.cell(row=127,column=1).value ='Screening Fatigue Criteria'
    #         sheet1['A127'].font = bold_font
    #         sheet1['A127'].font = text_14_size
    #         sheet1['A127'].alignment = center_align
    #         sheet1['A127'].border = under_line
    #         sheet1['B127'].border = under_line
    #         sheet1.cell(row=128,column=1).value ='1 Year Wave and Current'
    #         sheet1['A128'].font = bold_font
    #         sheet1['A128'].font = text_12_size
    #         sheet1['A128'].border = under_line_single
    #         sheet1.cell(row=129,column=1).value ='Peak Enhancement Factor'
    #         sheet1.cell(row=130,column=1).value ='Pierson Moskowitz Spectrum'
    #         sheet1.cell(row=131,column=1).value ='1 Year Steady Current Velocity'
    #         sheet1.cell(row=132,column=1).value ='1 Year of Wave Induced Velocity'
    #         sheet1.cell(row=133,column=1).value ='Seabed Correction Factor'
    #         sheet1.cell(row=134,column=1).value ='Trench Correction Factor'
    #         sheet1.cell(row=135,column=1).value ='Cross Flow Onset Value for Reduced Velocity'
    #         sheet1.cell(row=136,column=1).value ='In-Line Natural Frequency (f_IL_1/gamma_IL)'
    #         sheet1.cell(row=137,column=1).value ='In-Line Natural Frequency'
    #         sheet1.cell(row=138,column=1).value ='Cross Flow Natural Frequency (f_CF_1/gamma_CF)'
    #         sheet1.cell(row=139,column=1).value ='Cross Flow Natural Frequency'
    #         sheet1.cell(row=140,column=1).value ='Screening Fatigue Criteria for In-Line'
    #         sheet1.cell(row=141,column=1).value ='Screening Fatigue Criteria for Cross Flow'

    #         # sheet1.cell(row=142,column=1).value ='VIV Inline Span Length'
    #         sheet1.cell(row=143,column=1).value ='Euler Buckling Load'
    #         sheet1.cell(row=144,column=1).value ='In-Line Onset Value for Reduced Velocity'
    #         sheet1.cell(row=145,column=1).value ='Effective Length By Length'
    #         sheet1.cell(row=146,column=1).value ='Effective Length'
    #         sheet1.cell(row=147,column=1).value ='Fundamental Natural Frequency'
    #         sheet1.cell(row=148,column=1).value ='In-Line Screening Criteria'
    #         sheet1.cell(row=149,column=1).value ='Span Length for Inline Flow VIV'

    #         # sheet1.cell(row=150,column=2).value ='VIV Cross Flow Span Length'
            
    #         sheet1.cell(row=151,column=1).value ='Euler Buckling Load'
    #         sheet1.cell(row=152,column=1).value ='Seabed Correction Factor'
    #         sheet1.cell(row=153,column=1).value ='Trench Correction Factor'
    #         sheet1.cell(row=154,column=1).value ='Cross Flow Onset Value for Reduced Velocity'
    #         sheet1.cell(row=155,column=1).value ='Deflection Load per Unit Length'
    #         sheet1.cell(row=156,column=1).value ='Static Deflection'
    #         sheet1.cell(row=157,column=1).value ='Effective Length By Length'
    #         sheet1.cell(row=158,column=1).value ='Effective Length'
    #         sheet1.cell(row=159,column=1).value ='Fundamental Natural Frequency'
    #         sheet1.cell(row=160,column=1).value ='Cross Flow Screening Criteria'
    #         sheet1.cell(row=161,column=1).value ='Span Length for Cross Flow VIV'

    #         # sheet1.cell(row=162,column=1).value = 'Ultimate Limit State Cross Flow Span Length'
    #         #sheet1.cell(row=162,column=1).value ='Ultimate Limit State Cross Flow Span Length'
    #         #sheet1['A162'].font = bold_font
    #         #sheet1['A162'].font = text_14_size
    #         #sheet1['A162'].alignment = center_align
    #         #sheet1['A162'].border = under_line
    #         sheet1.cell(row=163,column=1).value ='Max Environmental Bending Moment (2.6.5)'
    #         sheet1.cell(row=164,column=1).value ='Max Environmental Stress (2.6.6)'
    #         sheet1.cell(row=165,column=1).value ='Cross-flow Stress Range(4.3)'
    #         sheet1.cell(row=166,column=1).value ='Combined Response Model Stress Range'
    #         sheet1.cell(row=167,column=1).value ='Cross-flow Induced VIV Stress Range'
    #         sheet1.cell(row=168,column=1).value ='Cross flow Response Value(4.4.4)'
    #         sheet1.cell(row=169,column=1).value ='Cross flow Unit Stress Amplitude (6.8.3)'
    #         sheet1.cell(row=170,column=1).value ='Cross flow Reduction Factor (4.4.11)'
    #         sheet1.cell(row=171,column=1).value ='Combined LKCR Response Model Stress Range'
    #         sheet1.cell(row=172,column=1).value ='Associated Cross-flow Induced VIV Stress Range'
    #         sheet1.cell(row=173,column=1).value ='LKCR Reduction Factor'
    #         sheet1.cell(row=174,column=1).value ='LKCR Stability factor'
    #         sheet1.cell(row=175,column=1).value ='Euler Buckling Load (6.8.2)'
    #         sheet1.cell(row=176,column=1).value ='Surface Roughness (concrete)(Table 5-1)'
    #         sheet1.cell(row=177,column=1).value ='Ratio b/w Roughness and OD'
    #         sheet1.cell(row=178,column=1).value ='Basic Drag Coefficient for Steady flow(5.4.4)'
    #         sheet1.cell(row=179,column=1).value ='Drag Correction Factor for Pipe Roughness(5.4.5)'
    #         sheet1.cell(row=180,column=1).value ='Drag Correction Factor Accounting for the Seabed Proximity (5.4.6)'
    #         sheet1.cell(row=181,column=1).value ='Drag Correction Factor Accounting for the Effect of Pipe in a Trench (5.4.7)'
    #         sheet1.cell(row=182,column=1).value ='Drag Amplification Factor due to Crossflow Vibration (5.4.8)'
    #         sheet1.cell(row=183,column=1).value ='Drag Coefficient (5.4.3)'
    #         sheet1.cell(row=184,column=1).value =' '
    #         sheet1.cell(row=185,column=1).value ='Inertia Coefficient (5.4.10)'
    #         sheet1.cell(row=186,column=1).value ='Inertia Correction Factor for pipe Roughness (5.4.11)'
    #         sheet1.cell(row=187,column=1).value ='Inertia Correction Factor accounting for the Seabed Proximity (5.4.12)'
    #         sheet1.cell(row=188,column=1).value ='Inertia Correction Factor accounting for the Effect of pipe in a Trench (5.4.12)'
    #         sheet1.cell(row=189,column=1).value ='Inertia Coefficient (5.4.9)'
    #         sheet1.cell(row=190,column=1).value ='Static Crossflow Bending Moment (6.8.5)'
    #         sheet1.cell(row=191,column=1).value ='Static Crossflow Bending Stress (6.8.5)'
    #         sheet1.cell(row=192,column=1).value ='Hoop Stress'
    #         sheet1.cell(row=193,column=1).value ='True Steel Wall Axial Force'
    #         sheet1.cell(row=194,column=1).value ='Wall Axial Stress (2.5.8)'
    #         sheet1.cell(row=195,column=1).value ='Total Axial Stress (2.5.8)'
    #         sheet1.cell(row=196,column=1).value ='Vonmisses Stress'
    #         sheet1.cell(row=197,column=1).value ='Yield Stress (table 5.2F101)'
    #         sheet1.cell(row=198,column=1).value =' '
    #         sheet1.cell(row=199,column=1).value =' '
    #         sheet1.cell(row=200,column=1).value ='Cross Flow ULS Screening Criteria'
    #         sheet1.cell(row=201,column=1).value ='Span Length for Crossflow ULS'
            
    #         #sheet1.cell(row=202,column=1).value ='Ultimate Limit State Inline Flow Span Length'
    #         sheet1.cell(row=202,column=1).value ='Ultimate Limit State Inline Flow Span Length'
    #         sheet1['A202'].font = bold_font
    #         sheet1['A202'].font = text_14_size
    #         sheet1['A202'].alignment = center_align
    #         sheet1['A202'].border = under_line
    #         sheet1.cell(row=203,column=1).value ='Max Environmental Bending Moment(2.6.5)'
    #         sheet1.cell(row=204,column=1).value ='Max Environmental Stress(2.6.6)'
    #         sheet1.cell(row=205,column=1).value ='In-line Stress Range'
    #         sheet1.cell(row=206,column=1).value ='Response Model Stress Range'
    #         sheet1.cell(row=207,column=1).value ='In-line Induced VIV Stress Range'
    #         sheet1.cell(row=208,column=1).value ='Cross Flow Response Value (4.4.4)'
    #         sheet1.cell(row=209,column=1).value ='Cross Flow Unit Stress Amplitude(6.8.5)'
    #         sheet1.cell(row=210,column=1).value ='Cross Flow Unit Stress Amplitude(6.8.5)'
    #         sheet1.cell(row=211,column=1).value ='Excited Cross-flow Stress Range'
    #         sheet1.cell(row=212,column=1).value ='Max Environmental Stress due to wave Loading (2.6.10)'
    #         sheet1.cell(row=213,column=1).value ='  '
    #         sheet1.cell(row=214,column=1).value ='   '
    #         sheet1.cell(row=215,column=1).value ='Wave Induced Stress Amplitude'
    #         sheet1.cell(row=216,column=1).value ='0th Response Spectral Moment (5.2.6)'
    #         sheet1.cell(row=217,column=1).value ='    '
    #         sheet1.cell(row=218,column=1).value ='Linearisation Constant'
    #         sheet1.cell(row=219,column=1).value ='S.D of Wave Induced Flow Velocity'
    #         sheet1.cell(row=220,column=1).value ='Correction Function'
    #         sheet1.cell(row=221,column=1).value ='Gaussian Probability Density Function'
    #         sheet1.cell(row=222,column=1).value ='Corresponding Distribution Function'
    #         sheet1.cell(row=223,column=1).value ='Max Modal Stress'
    #         sheet1.cell(row=224,column=1).value ='spectral Density Function'
    #         sheet1.cell(row=225,column=1).value ="Phillip's Constant"
    #         sheet1.cell(row=226,column=1).value ='Spectral Width Parameter'
    #         sheet1.cell(row=227,column=1).value ='Frequency Transfer Function'
    #         sheet1.cell(row=228,column=1).value ='Angular Wave Frequency'
    #         sheet1.cell(row=229,column=1).value ='Angular Spectral Peak Frequency'
    #         sheet1.cell(row=230,column=1).value ='Still Water Angular Natural Frequency'
    #         sheet1.cell(row=231,column=1).value ='Euler Buckling Load (6.8.2)'
    #         sheet1.cell(row=232,column=1).value ='Span Natural Frequency Cross Flow (6.8.2)'
    #         sheet1.cell(row=233,column=1).value ='Static (vertical) Deflection (6.8.6)'
    #         sheet1.cell(row=234,column=1).value ='Drag Coefficient (5.4.4)'
    #         sheet1.cell(row=235,column=1).value ='Inertia coefficient (5.4.10)'
    #         sheet1.cell(row=236,column=1).value ='Drag force term (5.4.1)'
    #         sheet1.cell(row=237,column=1).value ='Inertia force term (5.4.1)'
    #         sheet1.cell(row=238,column=1).value ='Static horizontal load per unit length (6.8.7) Max. wave'
    #         sheet1.cell(row=239,column=1).value ='Resultant lateralstatic loading'
    #         sheet1.cell(row=240,column=1).value ='Static inline bending moment (6.8.6)'
    #         sheet1.cell(row=241,column=1).value ='Static inline bending stress (6.8.6)'
    #         sheet1.cell(row=242,column=1).value ='Hoop stress'
    #         sheet1.cell(row=243,column=1).value ='True steel wall axial force'
    #         sheet1.cell(row=244,column=1).value ='Wall axial stress(2.5.8)'
    #         sheet1.cell(row=245,column=1).value ='Total axial stress(2.5.8)'
    #         sheet1.cell(row=246,column=1).value ='Von misses stress'
    #         sheet1.cell(row=247,column=1).value ='yield stress (table 5.2 F101)'
    #         sheet1.cell(row=248,column=1).value ='   '
    #         sheet1.cell(row=249,column=1).value ='   '
    #         sheet1.cell(row=250,column=1).value ='In-flow ULS screening criteria '
    #         sheet1.cell(row=251,column=1).value ='Span Length for inline flow ULS'

            
    #         #sheet1.cell(row=252,column=1).value ='Summary'
    #         sheet1.cell(row=253,column=1).value ='Span Length for inline flow VIV'
    #         sheet1.cell(row=254,column=1).value ='Span Length for cross flow VIV'
    #         sheet1.cell(row=255,column=1).value ='Span Length for cross flow ULS'
    #         sheet1.cell(row=256,column=1).value ='Span Length for inline flow ULS'
    #         sheet1.cell(row=257,column=1).value ='Maximum Deflection (6.8.1)'
    #         sheet1.cell(row=258,column=1).value ='Bar Buckling criteria (6.8.1)'
    #         sheet1.cell(row=259,column=1).value ='Model Length Validity (6.8.1)'
    #         sheet1.cell(row=260,column=1).value ='Overall maximum allowable span length'



    #         #create a Directory
    #         directory = "Span_length_Report"
    #         parent_dir = 'D:'
    #         path = os.path.join(parent_dir,directory)
    #         try:
    #             os.mkdir(path)
    #             print("Directory '% s' created" % directory)
    #         except:
    #             print("\n\tFolder Already Exist...!!!")

    #         wb.save('D:\\Span_length_Report\\Report.xls')
    #         data = pd.read_excel(r'D:\\Span_length_Report\\Report.xls')
    #         print(data)
    #     except:
    #         print("\n\tFile is Open ....!!")



        # fn,_= QFileDialog.getSaveFileName(self,"Export PDF",None,"PDF File(.pdf);;All Files()")
        # if fn !='':
        #     if QFileInfo(fn).suffix()=="":
        #         fn+='.pdf'
        #         printer = QPrinter(QPrinter.HighResolution)
        #         printer.setOutputFormat(QPrinter.PdfFormat)
        #         printer.setOutputFileName(fn)
        #         sheet1.print_(printer)
        # printer = QPrinter(QPrinter.HighResolution)
        # dialog = QPrintDialog(QPrinter,self)
        # if dialog.exec_()== QPrintDialog.Accepted:
        #     self.internal_pressure_lineEdit_2.print_(printer)

    def mmToPixels(self,printer, mm):
        return mm * 0.039370147 * printer.resolution()
        
    def paintPage(self,pageNumber, pageCount, painter, doc, textRect, footerHeight):
        painter.save()
        textPageRect = QtCore.QRectF(QtCore.QPointF(0, pageNumber*doc.pageSize().height()), doc.pageSize())
        painter.setClipRect(textRect)
        painter.translate(0, -textPageRect.top())
        painter.translate(textRect.left(), textRect.top())
        doc.drawContents(painter)
        painter.restore()
        footerRect = QtCore.QRectF(textRect)
        footerRect.setTop(textRect.bottom())
        footerRect.setHeight(footerHeight)

        painter.save()
        pen = painter.pen()
        pen.setColor(QtCore.Qt.blue)
        painter.setPen(pen)
        pic3=QTextImageFormat()
        pic3.setName('./assets/loadkl1.png')
        pic3.setWidth(55)

        # DATE
        self.current_date = QDateTime.currentDateTime()
        self.current_date1 = self.current_date.toString(Qt.ISODate)
        # LOGO
        pixmap = QPixmap("assets copy\AshKAM_Logo.png")
        painter.drawPixmap(QRect(0, 0, 850, 210),pixmap)

        #--------------------------------------------------
        painter.drawText(footerRect, QtCore.Qt.AlignCenter, "Page {} of {} and {}".format(pageNumber+1, pageCount,self.current_date1))
        painter.restore()


    def printDocument(self,printer, doc):
        textMargins = 12
        borderMargins = 10
        painter = QtGui.QPainter(printer)
        doc.documentLayout().setPaintDevice(printer)
        doc.setPageSize(QtCore.QSizeF(printer.pageRect().size()))
        pageSize = printer.pageRect().size()
        tm = self.mmToPixels(printer, textMargins)
        footerHeight = painter.fontMetrics().height()
        textRect = QtCore.QRectF(tm, tm, pageSize.width() - 2 * tm, pageSize.height() - 2 * tm - footerHeight)
        doc.setPageSize(textRect.size())
        pageCount = doc.pageCount()

        for pageIndex in range(pageCount):
            if pageIndex != 0:
                printer.newPage()
            self.paintPage(pageIndex, pageCount, painter, doc, textRect, footerHeight)
        
    def print(self):
        print("Printing your Documents")

        if (hasattr(self, 'Inputs_TV')):
            self.frame_VL_info.removeWidget(self.Info_TV)
        self.Info_TV = QtWidgets.QTableView(self.frame_info)
        # self.Inputs_TV.setColumnCount(4)
        self.Info_TV.setShowGrid(True)
        self.Info_TV.setObjectName("Inputs_TV")
        
        data = pd.read_csv('Infomation.csv')
        self.Info_Model = Table5Model(data)
        self.Info_Model.setHeaderData(0, QtCore.Qt.Orientation.Horizontal, "draft", QtCore.Qt.DisplayRole)
        self.Info_TV.setModel(self.Info_Model)
        self.frame_VL_info.addWidget(self.Info_TV)

        self.Info_TV.verticalHeader().setVisible(False) 
        self.Info_TV.horizontalHeader().setVisible(False)

        if (hasattr(self, 'Inputs_TV')):
            self.frame_VL.removeWidget(self.Inputs_TV)
        self.Inputs_TV = QtWidgets.QTableView(self.frame)
        # self.Inputs_TV.setColumnCount(4)
        self.Inputs_TV.setShowGrid(True)
        self.Inputs_TV.setObjectName("Inputs_TV")
        
        data = pd.read_csv('Inputs_csv\\New_csv.csv')
        self.Inputs_Model = Table5Model(data)
        self.Inputs_Model.setHeaderData(0, QtCore.Qt.Orientation.Horizontal, "draft", QtCore.Qt.DisplayRole)
        self.Inputs_TV.setModel(self.Inputs_Model)
        self.frame_VL.addWidget(self.Inputs_TV)

        self.Inputs_TV.verticalHeader().setVisible(False) 
        self.Inputs_TV.horizontalHeader().setVisible(False)

        if (hasattr(self, 'Calculation_TV')):
            self.frame_cal_VL.removeWidget(self.Calculation_TV)
        self.Calculation_TV = QtWidgets.QTableView(self.frame)
        # self.Inputs_TV.setColumnCount(4)
        self.Calculation_TV.setShowGrid(True)
        self.Calculation_TV.setObjectName("Inputs_TV")
        
        data = pd.read_csv('Inputs_csv\\New_csv.csv')
        self.Inputs_Model = Table5Model(data)
        self.Inputs_Model.setHeaderData(0, QtCore.Qt.Orientation.Horizontal, "draft", QtCore.Qt.DisplayRole)
        self.Inputs_TV.setModel(self.Inputs_Model)
        self.frame_VL.addWidget(self.Inputs_TV)

        self.Inputs_TV.verticalHeader().setVisible(False) 
        self.Inputs_TV.horizontalHeader().setVisible(False)

    #     new_csv_data = []
    #     EMPTY_ROW = set([""])


    #     with open("output.csv", "r", newline="") as first_file, open("new_input_csv.csv", "r", newline="") as second_file, open("calculation.csv", "w", newline="") as out_file:
    #         first_file_reader = csv.reader(first_file)
    #         second_file_reader = csv.reader(second_file)
    #         out_file_writer = csv.writer(out_file)

    # # The iterator will stop when the shortest file is finished
    #         for row_1, row_2 in zip(first_file_reader, second_file_reader):
    #             # Check if the second row is empty, skipping if it is
    #             if not row_2 or set(row_2) == EMPTY_ROW:
    #                 continue

    #             out_file_writer.writerow(row_1 + row_2)

        document = QtGui.QTextDocument()
        cursor = QtGui.QTextCursor(document)
         
        textformat = QtGui.QTextCharFormat()
        textformat.setFontWeight(90)

        cursor_INFO = QTextCursor(document)
         
        cursor1 = QTextCursor(document)
        # cursor2_a=QTextCursor(document)
        # cursor2 = QTextCursor(document)
        # cursor3 = QTextCursor(document)
        # cursor4 = QTextCursor(document)
        # cursor5 = QTextCursor(document)
        # cursor_permis = QTextCursor(document)
        # cursor_all_tk_cap=QTextCursor(document)
        # cursor_ELEVATED_MODE=QTextCursor(document)
        # cursor_FLOATATION_MODE=QTextCursor(document)
        # cursor_DISTRIBUTED_MODE=QTextCursor(document)
        # cursor_STABILITY_PARAMETER1=QTextCursor(document)
        # cursor_FINAL_DRAFT_1=QTextCursor(document)
        # cursor_STABILITY_PARAMETER2=QTextCursor(document)
        # cursor_FINAL_DRAFT_2=QTextCursor(document)
        
        # cursor_lc14_docking_cond_INTACT=QTextCursor(document)
        # cursor_LC15_user_defined_INTACT=QTextCursor(document)

        pic2=QTextImageFormat()	            
        pic2.setName("assets copy\TITLE2.png")	
        pic2.setWidth(500)	
        cursor_INFO.insertImage(pic2)
        cursor_INFO.setPosition(400, 250)
        Info_Tab = QTextTableFormat()
        Info_Tab.setCellSpacing(0)
        Info_Tab.setCellPadding(1)
        # Inputs_Tab.setWidth(20)
        # Inputs_Tab.border()
        Info_Tab.setBorderStyle(3)
        Info_Tab.setBorderCollapse(True)
        Info_Tab.setBorderBrush(QBrush(QColor('#808080')))
        cursor_INFO.insertTable(self.Info_Model.rowCount(1) + 1, self.Info_Model.columnCount(1), Info_Tab)
        
        for i in range(0, self.Info_Model.columnCount(1)):
            myheader2 = self.Info_Model.headerData(i, Qt.Horizontal)
            cursor_INFO.insertText(myheader2)
            cursor_INFO.movePosition(QTextCursor.NextCell)

        for row in range(0, self.Info_Model.rowCount(1)):
            for col in range(0, self.Info_Model.columnCount(1)):
                index1 = self.Info_Model.index( row, col )
                cursor_INFO.insertText(str(index1.data()))
                cursor_INFO.movePosition(QTextCursor.NextCell)
        
        
        cursor1.insertText("Inputs")
        Inputs_Tab = QTextTableFormat()
        Inputs_Tab.setCellSpacing(0)
        Inputs_Tab.setCellPadding(1)
        # Inputs_Tab.setWidth(20)
        # Inputs_Tab.border()
        Inputs_Tab.setBorderStyle(3)
        Inputs_Tab.setBorderCollapse(True)
        Inputs_Tab.setBorderBrush(QBrush(QColor('#808080')))
        cursor1.insertTable(self.Inputs_Model.rowCount(1) + 1, self.Inputs_Model.columnCount(1), Inputs_Tab)
        
        for i in range(0, self.Inputs_Model.columnCount(1)):
            myheader2 = self.Inputs_Model.headerData(i, Qt.Horizontal)
            cursor1.insertText(myheader2)
            cursor1.movePosition(QTextCursor.NextCell)

        for row in range(0, self.Inputs_Model.rowCount(1)):
            for col in range(0, self.Inputs_Model.columnCount(1)):
                index1 = self.Inputs_Model.index( row, col )
                cursor1.insertText(str(index1.data()))
                cursor1.movePosition(QTextCursor.NextCell)

        printer = QtPrintSupport.QPrinter(QtPrintSupport.QPrinter.HighResolution)
        printer.setPageSize(QtPrintSupport.QPrinter.A4)
        printer.setOutputFormat(QtPrintSupport.QPrinter.PdfFormat)

        dialog = QtPrintSupport.QPrintPreviewDialog(printer)
        dialog.paintRequested.connect(lambda print, doc=document: self.printDocument(printer, doc))
        dialog.exec_()

    #........................SUMMARY DIALOG BOX.................................................................
    def openWindow(self):
        try:
            self.window = QtWidgets.QDialog()
            self.ui = Ui_SUMMARY()
            self.ui.setupUi(self.window)
            self.window.show()
            self.ui.Span_length_for_inline_flow_viv_value.setText(str(self.calculate_summary[0]))
            self.ui.spanlength_for_crossflow_viv_value.setText(str(self.calculate_summary[1]))
            self.ui.spanlength_for_crossflow_uls_value.setText(str(self.calculate_summary[2]))
            self.ui.spanlength_for_inlineflow_uls_value.setText(str(self.calculate_summary[3]))
            self.ui.maximum_deflection_value.setText(str(self.calculate_summary[4]))
            self.ui.bar_buckling_criteria_value.setText(str(self.calculate_summary[5]))
            self.ui.model_length_validity_value.setText(str(self.calculate_summary[6]))
            self.ui.overall_max_allowable_spanlength_value.setText(str(self.calculate_summary[7]))
        except:
            self.ui.summary_head.setText("ERROR!!..Please Calculate First..!!")
            self.ui.Span_length_for_inline_flow_viv.hide()
            self.ui.Span_length_for_inline_flow_viv_value.hide()
            self.ui.spanlength_for_crossflow_uls.hide()
            self.ui.spanlength_for_crossflow_uls_value.hide()
            self.ui.spanlength_for_crossflow_viv.hide()
            self.ui.spanlength_for_crossflow_viv_value.hide()
            self.ui.spanlength_for_inlineflow_uls.hide()
            self.ui.spanlength_for_inlineflow_uls_value.hide()
            self.ui.maximum_deflection.hide()
            self.ui.maximum_deflection_value.hide()
            self.ui.bar_buckling_criteria.hide()
            self.ui.bar_buckling_criteria_value.hide()
            self.ui.model_length_validity.hide()
            self.ui.model_length_validity_value.hide()
            self.ui.overall_max_allowable_spanlength.hide()
            self.ui.overall_max_allowable_spanlength_value.hide()
            print("\n\t***Error in Displaying Summary Dialog Box.....!!\n\t**Please verify you are Calculating First.....!!")
        finally:
            print("\n\t***ERROR in summary....")
        

    




    









if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    try:
        sys.exit(app.exec_())
    except SystemExit:
        print("\n\t Application is closing.....!!!!")
